"use strict";

var _necessary = require("necessary");

var _index = require("../../index");

var _configuration = _interopRequireDefault(require("../miscellaneous/configuration"));

var _colouredSquare = _interopRequireDefault(require("./element/colouredSquare"));

var _texturedQuadrangle = _interopRequireDefault(require("./element/texturedQuadrangle"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

///
var forEach = _necessary.asynchronousUtilities.forEach;
var canvas = new _index.Canvas(),
    mask = React.createElement(_index.Mask, null, React.createElement(_colouredSquare["default"], {
  scale: [0.25, 0.25, 1],
  position: [0.125, 0.125, 0]
}));

var tilingExample = function tilingExample() {
  var imageNames = _configuration["default"].imageNames,
      imageDirectoryURI = _configuration["default"].imageDirectoryURI;
  preloadImages(imageNames, imageDirectoryURI, function (images) {
    return React.createElement(_index.Scene, {
      canvas: canvas
    }, React.createElement(_index.Part, {
      images: images,
      imageNames: imageNames,
      imageTiling: true
    }, React.createElement(_texturedQuadrangle["default"], {
      position: [0, 0, 0],
      imageName: "floorboards.jpg",
      mask: mask
    }), React.createElement(_texturedQuadrangle["default"], {
      position: [-0.5, -0.5, -0.5],
      imageName: "paving.jpg",
      mask: mask
    })), React.createElement(_index.DesignCamera, null));
  });
};

module.exports = tilingExample;

function preloadImages(imageNames, imageDirectoryURI, callback) {
  var images = [],
      context = {
    images: images
  };
  forEach(imageNames, function (imageName, next, done, context) {
    var image = new Image(),
        src = "".concat(imageDirectoryURI, "/").concat(imageName);
    Object.assign(image, {
      src: src,
      onload: onload
    });

    function onload() {
      images.push(image);
      next();
    }
  }, done, context);

  function done() {
    var images = context.images;
    callback(images);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpbGluZy5qcyJdLCJuYW1lcyI6WyJmb3JFYWNoIiwiYXN5bmNocm9ub3VzVXRpbGl0aWVzIiwiY2FudmFzIiwiQ2FudmFzIiwibWFzayIsInRpbGluZ0V4YW1wbGUiLCJpbWFnZU5hbWVzIiwiY29uZmlndXJhdGlvbiIsImltYWdlRGlyZWN0b3J5VVJJIiwicHJlbG9hZEltYWdlcyIsImltYWdlcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJjYWxsYmFjayIsImNvbnRleHQiLCJpbWFnZU5hbWUiLCJuZXh0IiwiZG9uZSIsImltYWdlIiwiSW1hZ2UiLCJzcmMiLCJPYmplY3QiLCJhc3NpZ24iLCJvbmxvYWQiLCJwdXNoIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7OztBQUp3RTtJQU1oRUEsTyxHQUFZQyxnQyxDQUFaRCxPO0FBRVIsSUFBTUUsTUFBTSxHQUFHLElBQUlDLGFBQUosRUFBZjtBQUFBLElBQ01DLElBQUksR0FFRixvQkFBQyxXQUFELFFBQ0Usb0JBQUMsMEJBQUQ7QUFBZ0IsRUFBQSxLQUFLLEVBQUUsQ0FBRSxJQUFGLEVBQVEsSUFBUixFQUFjLENBQWQsQ0FBdkI7QUFBMEMsRUFBQSxRQUFRLEVBQUUsQ0FBRSxLQUFGLEVBQVMsS0FBVCxFQUFnQixDQUFoQjtBQUFwRCxFQURGLENBSFI7O0FBU0EsSUFBTUMsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixHQUFNO0FBQUEsTUFDbEJDLFVBRGtCLEdBQ2dCQyx5QkFEaEIsQ0FDbEJELFVBRGtCO0FBQUEsTUFDTkUsaUJBRE0sR0FDZ0JELHlCQURoQixDQUNOQyxpQkFETTtBQUcxQkMsRUFBQUEsYUFBYSxDQUFDSCxVQUFELEVBQWFFLGlCQUFiLEVBQWdDLFVBQUNFLE1BQUQsRUFBWTtBQUN2RCxXQUVFLG9CQUFDLFlBQUQ7QUFBTyxNQUFBLE1BQU0sRUFBRVI7QUFBZixPQUNFLG9CQUFDLFdBQUQ7QUFBTSxNQUFBLE1BQU0sRUFBRVEsTUFBZDtBQUFzQixNQUFBLFVBQVUsRUFBRUosVUFBbEM7QUFBOEMsTUFBQSxXQUFXO0FBQXpELE9BQ0Usb0JBQUMsOEJBQUQ7QUFBb0IsTUFBQSxRQUFRLEVBQUUsQ0FBRSxDQUFGLEVBQUssQ0FBTCxFQUFRLENBQVIsQ0FBOUI7QUFBMkMsTUFBQSxTQUFTLEVBQUMsaUJBQXJEO0FBQXVFLE1BQUEsSUFBSSxFQUFFRjtBQUE3RSxNQURGLEVBRUUsb0JBQUMsOEJBQUQ7QUFBb0IsTUFBQSxRQUFRLEVBQUUsQ0FBRSxDQUFDLEdBQUgsRUFBUSxDQUFDLEdBQVQsRUFBYyxDQUFDLEdBQWYsQ0FBOUI7QUFBb0QsTUFBQSxTQUFTLEVBQUMsWUFBOUQ7QUFBMkUsTUFBQSxJQUFJLEVBQUVBO0FBQWpGLE1BRkYsQ0FERixFQUtFLG9CQUFDLG1CQUFELE9BTEYsQ0FGRjtBQVdELEdBWlksQ0FBYjtBQWFELENBaEJEOztBQWtCQU8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCUCxhQUFqQjs7QUFFQSxTQUFTSSxhQUFULENBQXVCSCxVQUF2QixFQUFtQ0UsaUJBQW5DLEVBQXNESyxRQUF0RCxFQUFnRTtBQUM5RCxNQUFNSCxNQUFNLEdBQUcsRUFBZjtBQUFBLE1BQ01JLE9BQU8sR0FBRztBQUNSSixJQUFBQSxNQUFNLEVBQU5BO0FBRFEsR0FEaEI7QUFLQVYsRUFBQUEsT0FBTyxDQUFDTSxVQUFELEVBQWEsVUFBQ1MsU0FBRCxFQUFZQyxJQUFaLEVBQWtCQyxJQUFsQixFQUF3QkgsT0FBeEIsRUFBb0M7QUFDdEQsUUFBTUksS0FBSyxHQUFHLElBQUlDLEtBQUosRUFBZDtBQUFBLFFBQ01DLEdBQUcsYUFBTVosaUJBQU4sY0FBMkJPLFNBQTNCLENBRFQ7QUFHQU0sSUFBQUEsTUFBTSxDQUFDQyxNQUFQLENBQWNKLEtBQWQsRUFBcUI7QUFDbkJFLE1BQUFBLEdBQUcsRUFBSEEsR0FEbUI7QUFFbkJHLE1BQUFBLE1BQU0sRUFBTkE7QUFGbUIsS0FBckI7O0FBS0EsYUFBU0EsTUFBVCxHQUFrQjtBQUNoQmIsTUFBQUEsTUFBTSxDQUFDYyxJQUFQLENBQVlOLEtBQVo7QUFFQUYsTUFBQUEsSUFBSTtBQUNMO0FBQ0YsR0FkTSxFQWNKQyxJQWRJLEVBY0VILE9BZEYsQ0FBUDs7QUFnQkEsV0FBU0csSUFBVCxHQUFnQjtBQUFBLFFBQ05QLE1BRE0sR0FDS0ksT0FETCxDQUNOSixNQURNO0FBR2RHLElBQUFBLFFBQVEsQ0FBQ0gsTUFBRCxDQUFSO0FBQ0Q7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBhc3luY2hyb25vdXNVdGlsaXRpZXMgfSBmcm9tIFwibmVjZXNzYXJ5XCI7XG5pbXBvcnQgeyBDYW52YXMsIFNjZW5lLCBQYXJ0LCBNYXNrLCBEZXNpZ25DYW1lcmEgfSBmcm9tIFwiLi4vLi4vaW5kZXhcIjsgIC8vL1xuXG5pbXBvcnQgY29uZmlndXJhdGlvbiBmcm9tIFwiLi4vbWlzY2VsbGFuZW91cy9jb25maWd1cmF0aW9uXCI7XG5pbXBvcnQgQ29sb3VyZWRTcXVhcmUgZnJvbSBcIi4vZWxlbWVudC9jb2xvdXJlZFNxdWFyZVwiO1xuaW1wb3J0IFRleHR1cmVkUXVhZHJhbmdsZSBmcm9tIFwiLi9lbGVtZW50L3RleHR1cmVkUXVhZHJhbmdsZVwiO1xuXG5jb25zdCB7IGZvckVhY2ggfSA9IGFzeW5jaHJvbm91c1V0aWxpdGllcztcblxuY29uc3QgY2FudmFzID0gbmV3IENhbnZhcygpLFxuICAgICAgbWFzayA9XG5cbiAgICAgICAgPE1hc2s+XG4gICAgICAgICAgPENvbG91cmVkU3F1YXJlIHNjYWxlPXtbIDAuMjUsIDAuMjUsIDEgXX0gcG9zaXRpb249e1sgMC4xMjUsIDAuMTI1LCAwIF19IC8+XG4gICAgICAgIDwvTWFzaz5cblxuICAgICAgO1xuXG5jb25zdCB0aWxpbmdFeGFtcGxlID0gKCkgPT4ge1xuICBjb25zdCB7IGltYWdlTmFtZXMsIGltYWdlRGlyZWN0b3J5VVJJIH0gPSBjb25maWd1cmF0aW9uO1xuXG4gIHByZWxvYWRJbWFnZXMoaW1hZ2VOYW1lcywgaW1hZ2VEaXJlY3RvcnlVUkksIChpbWFnZXMpID0+IHtcbiAgICByZXR1cm4gKFxuXG4gICAgICA8U2NlbmUgY2FudmFzPXtjYW52YXN9PlxuICAgICAgICA8UGFydCBpbWFnZXM9e2ltYWdlc30gaW1hZ2VOYW1lcz17aW1hZ2VOYW1lc30gaW1hZ2VUaWxpbmcgPlxuICAgICAgICAgIDxUZXh0dXJlZFF1YWRyYW5nbGUgcG9zaXRpb249e1sgMCwgMCwgMCBdfSBpbWFnZU5hbWU9XCJmbG9vcmJvYXJkcy5qcGdcIiBtYXNrPXttYXNrfSAvPlxuICAgICAgICAgIDxUZXh0dXJlZFF1YWRyYW5nbGUgcG9zaXRpb249e1sgLTAuNSwgLTAuNSwgLTAuNSBdfSBpbWFnZU5hbWU9XCJwYXZpbmcuanBnXCIgbWFzaz17bWFza30gLz5cbiAgICAgICAgPC9QYXJ0PlxuICAgICAgICA8RGVzaWduQ2FtZXJhIC8+XG4gICAgICA8L1NjZW5lPlxuXG4gICAgKTtcbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHRpbGluZ0V4YW1wbGU7XG5cbmZ1bmN0aW9uIHByZWxvYWRJbWFnZXMoaW1hZ2VOYW1lcywgaW1hZ2VEaXJlY3RvcnlVUkksIGNhbGxiYWNrKSB7XG4gIGNvbnN0IGltYWdlcyA9IFtdLFxuICAgICAgICBjb250ZXh0ID0ge1xuICAgICAgICAgIGltYWdlc1xuICAgICAgICB9O1xuXG4gIGZvckVhY2goaW1hZ2VOYW1lcywgKGltYWdlTmFtZSwgbmV4dCwgZG9uZSwgY29udGV4dCkgPT4ge1xuICAgIGNvbnN0IGltYWdlID0gbmV3IEltYWdlKCksXG4gICAgICAgICAgc3JjID0gYCR7aW1hZ2VEaXJlY3RvcnlVUkl9LyR7aW1hZ2VOYW1lfWA7XG5cbiAgICBPYmplY3QuYXNzaWduKGltYWdlLCB7XG4gICAgICBzcmMsXG4gICAgICBvbmxvYWRcbiAgICB9KTtcblxuICAgIGZ1bmN0aW9uIG9ubG9hZCgpIHtcbiAgICAgIGltYWdlcy5wdXNoKGltYWdlKTtcblxuICAgICAgbmV4dCgpO1xuICAgIH1cbiAgfSwgZG9uZSwgY29udGV4dCk7XG5cbiAgZnVuY3Rpb24gZG9uZSgpIHtcbiAgICBjb25zdCB7IGltYWdlcyB9ID0gY29udGV4dDtcblxuICAgIGNhbGxiYWNrKGltYWdlcyk7XG4gIH1cbn1cbiJdfQ==