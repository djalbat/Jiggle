'use strict';

var vec3 = require('../../vec3'),
    ColourShader = require('../../shader/colour'),
    arrayUtilities = require('../../utilities/array');

var divide = arrayUtilities.divide,
    flatten = arrayUtilities.flatten;


var vertexColourData = [1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0],
    vertexPositionData = [-1.0, -1.0, +1.0, +1.0, -1.0, +1.0, +1.0, +1.0, +1.0, -1.0, +1.0, +1.0, -1.0, -1.0, -1.0, -1.0, +1.0, -1.0, +1.0, +1.0, -1.0, +1.0, -1.0, -1.0, -1.0, +1.0, -1.0, -1.0, +1.0, +1.0, +1.0, +1.0, +1.0, +1.0, +1.0, -1.0, -1.0, -1.0, -1.0, +1.0, -1.0, -1.0, +1.0, -1.0, +1.0, -1.0, -1.0, +1.0, +1.0, -1.0, -1.0, +1.0, +1.0, -1.0, +1.0, +1.0, +1.0, +1.0, -1.0, +1.0, -1.0, -1.0, -1.0, -1.0, -1.0, +1.0, -1.0, +1.0, +1.0, -1.0, +1.0, -1.0],
    vertexNormalData = [0.0, 0.0, +1.0, 0.0, 0.0, +1.0, 0.0, 0.0, +1.0, 0.0, 0.0, +1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, +1.0, 0.0, 0.0, +1.0, 0.0, 0.0, +1.0, 0.0, 0.0, +1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, +1.0, 0.0, 0.0, +1.0, 0.0, 0.0, +1.0, 0.0, 0.0, +1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0],
    vertexIndexData = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23];

var colourCube = function colourCube(offsetPosition, canvas, callback) {
  var colourShader = ColourShader.fromNothing(canvas),
      vertexPositions = divide(vertexPositionData, 3),
      ///
  offsetVertexPositions = vertexPositions.map(function (vertexPosition) {
    var offsetVertexPosition = vec3.add(vertexPosition, offsetPosition);

    return offsetVertexPosition;
  }),
      offsetVertexPositionData = flatten(offsetVertexPositions);

  colourShader.createAndBindVertexPositionBuffer(offsetVertexPositionData, canvas);

  colourShader.createAndBindVertexColourBuffer(vertexColourData, canvas);

  colourShader.createAndBindVertexNormalBuffer(vertexNormalData, canvas);

  var count = canvas.createAndBindElementBuffer(vertexIndexData),
      shader = colourShader; ///

  canvas.useShader(shader);

  callback(count, shader);
};

module.exports = colourCube;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VzNi9leGFtcGxlcy9pbnRlcm1lZGlhdGUvY29sb3VyQ3ViZS5qcyJdLCJuYW1lcyI6WyJ2ZWMzIiwicmVxdWlyZSIsIkNvbG91clNoYWRlciIsImFycmF5VXRpbGl0aWVzIiwiZGl2aWRlIiwiZmxhdHRlbiIsInZlcnRleENvbG91ckRhdGEiLCJ2ZXJ0ZXhQb3NpdGlvbkRhdGEiLCJ2ZXJ0ZXhOb3JtYWxEYXRhIiwidmVydGV4SW5kZXhEYXRhIiwiY29sb3VyQ3ViZSIsIm9mZnNldFBvc2l0aW9uIiwiY2FudmFzIiwiY2FsbGJhY2siLCJjb2xvdXJTaGFkZXIiLCJmcm9tTm90aGluZyIsInZlcnRleFBvc2l0aW9ucyIsIm9mZnNldFZlcnRleFBvc2l0aW9ucyIsIm1hcCIsInZlcnRleFBvc2l0aW9uIiwib2Zmc2V0VmVydGV4UG9zaXRpb24iLCJhZGQiLCJvZmZzZXRWZXJ0ZXhQb3NpdGlvbkRhdGEiLCJjcmVhdGVBbmRCaW5kVmVydGV4UG9zaXRpb25CdWZmZXIiLCJjcmVhdGVBbmRCaW5kVmVydGV4Q29sb3VyQnVmZmVyIiwiY3JlYXRlQW5kQmluZFZlcnRleE5vcm1hbEJ1ZmZlciIsImNvdW50IiwiY3JlYXRlQW5kQmluZEVsZW1lbnRCdWZmZXIiLCJzaGFkZXIiLCJ1c2VTaGFkZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxPQUFPQyxRQUFRLFlBQVIsQ0FBYjtBQUFBLElBQ01DLGVBQWVELFFBQVEscUJBQVIsQ0FEckI7QUFBQSxJQUVNRSxpQkFBaUJGLFFBQVEsdUJBQVIsQ0FGdkI7O0lBSVFHLE0sR0FBb0JELGMsQ0FBcEJDLE07SUFBUUMsTyxHQUFZRixjLENBQVpFLE87OztBQUVoQixJQUFNQyxtQkFBbUIsQ0FDakIsR0FEaUIsRUFDWCxHQURXLEVBQ0wsR0FESyxFQUNDLEdBREQsRUFFakIsR0FGaUIsRUFFWCxHQUZXLEVBRUwsR0FGSyxFQUVDLEdBRkQsRUFHakIsR0FIaUIs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QlEsRUFpQmhCLEVBakJnQixFQWlCWixFQWpCWSxFQWlCUixFQWpCUSxDQTdGeEI7O0FBaUhBLElBQU1DLGFBQWEsU0FBYkEsVUFBYSxDQUFDQyxjQUFELEVBQWlCQyxNQUFqQixFQUF5QkMsUUFBekIsRUFBc0M7QUFDdkQsTUFBTUMsZUFBZVosYUFBYWEsV0FBYixDQUF5QkgsTUFBekIsQ0FBckI7QUFBQSxNQUNNSSxrQkFBa0JaLE9BQU9HLGtCQUFQLEVBQTJCLENBQTNCLENBRHhCO0FBQUEsTUFDd0Q7QUFDbERVLDBCQUF3QkQsZ0JBQWdCRSxHQUFoQixDQUFvQixVQUFTQyxjQUFULEVBQXlCO0FBQ25FLFFBQU1DLHVCQUF1QnBCLEtBQUtxQixHQUFMLENBQVNGLGNBQVQsRUFBeUJSLGNBQXpCLENBQTdCOztBQUVBLFdBQU9TLG9CQUFQO0FBQ0QsR0FKdUIsQ0FGOUI7QUFBQSxNQU9NRSwyQkFBMkJqQixRQUFRWSxxQkFBUixDQVBqQzs7QUFTQUgsZUFBYVMsaUNBQWIsQ0FBK0NELHdCQUEvQyxFQUF5RVYsTUFBekU7O0FBRUFFLGVBQWFVLCtCQUFiLENBQTZDbEIsZ0JBQTdDLEVBQStETSxNQUEvRDs7QUFFQUUsZUFBYVcsK0JBQWIsQ0FBNkNqQixnQkFBN0MsRUFBK0RJLE1BQS9EOztBQUVBLE1BQU1jLFFBQVFkLE9BQU9lLDBCQUFQLENBQWtDbEIsZUFBbEMsQ0FBZDtBQUFBLE1BQ01tQixTQUFTZCxZQURmLENBaEJ1RCxDQWlCekI7O0FBRTlCRixTQUFPaUIsU0FBUCxDQUFpQkQsTUFBakI7O0FBRUFmLFdBQVNhLEtBQVQsRUFBZ0JFLE1BQWhCO0FBQ0QsQ0F0QkQ7O0FBd0JBRSxPQUFPQyxPQUFQLEdBQWlCckIsVUFBakIiLCJmaWxlIjoiY29sb3VyQ3ViZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdmVjMyA9IHJlcXVpcmUoJy4uLy4uL3ZlYzMnKSxcbiAgICAgIENvbG91clNoYWRlciA9IHJlcXVpcmUoJy4uLy4uL3NoYWRlci9jb2xvdXInKSxcbiAgICAgIGFycmF5VXRpbGl0aWVzID0gcmVxdWlyZSgnLi4vLi4vdXRpbGl0aWVzL2FycmF5Jyk7XG5cbmNvbnN0IHsgZGl2aWRlLCBmbGF0dGVuIH0gPSBhcnJheVV0aWxpdGllcztcblxuY29uc3QgdmVydGV4Q29sb3VyRGF0YSA9IFtcbiAgICAgICAgMS4wLCAgMC4wLCAgMC4wLCAgMS4wLFxuICAgICAgICAxLjAsICAwLjAsICAwLjAsICAxLjAsXG4gICAgICAgIDEuMCwgIDAuMCwgIDAuMCwgIDEuMCxcbiAgICAgICAgMS4wLCAgMC4wLCAgMC4wLCAgMS4wLFxuXG4gICAgICAgIDAuMCwgIDEuMCwgIDEuMCwgIDEuMCxcbiAgICAgICAgMC4wLCAgMS4wLCAgMS4wLCAgMS4wLFxuICAgICAgICAwLjAsICAxLjAsICAxLjAsICAxLjAsXG4gICAgICAgIDAuMCwgIDEuMCwgIDEuMCwgIDEuMCxcblxuICAgICAgICAwLjAsICAxLjAsICAwLjAsICAxLjAsXG4gICAgICAgIDAuMCwgIDEuMCwgIDAuMCwgIDEuMCxcbiAgICAgICAgMC4wLCAgMS4wLCAgMC4wLCAgMS4wLFxuICAgICAgICAwLjAsICAxLjAsICAwLjAsICAxLjAsXG5cbiAgICAgICAgMS4wLCAgMC4wLCAgMS4wLCAgMS4wLFxuICAgICAgICAxLjAsICAwLjAsICAxLjAsICAxLjAsXG4gICAgICAgIDEuMCwgIDAuMCwgIDEuMCwgIDEuMCxcbiAgICAgICAgMS4wLCAgMC4wLCAgMS4wLCAgMS4wLFxuXG4gICAgICAgIDAuMCwgIDAuMCwgIDEuMCwgIDEuMCxcbiAgICAgICAgMC4wLCAgMC4wLCAgMS4wLCAgMS4wLFxuICAgICAgICAwLjAsICAwLjAsICAxLjAsICAxLjAsXG4gICAgICAgIDAuMCwgIDAuMCwgIDEuMCwgIDEuMCxcblxuICAgICAgICAxLjAsICAxLjAsICAwLjAsICAxLjAsXG4gICAgICAgIDEuMCwgIDEuMCwgIDAuMCwgIDEuMCxcbiAgICAgICAgMS4wLCAgMS4wLCAgMC4wLCAgMS4wLFxuICAgICAgICAxLjAsICAxLjAsICAwLjAsICAxLjBcbiAgICAgIF0sXG4gICAgICB2ZXJ0ZXhQb3NpdGlvbkRhdGEgPSBbXG4gICAgICAgIC0xLjAsIC0xLjAsICsxLjAsXG4gICAgICAgICsxLjAsIC0xLjAsICsxLjAsXG4gICAgICAgICsxLjAsICsxLjAsICsxLjAsXG4gICAgICAgIC0xLjAsICsxLjAsICsxLjAsXG5cbiAgICAgICAgLTEuMCwgLTEuMCwgLTEuMCxcbiAgICAgICAgLTEuMCwgKzEuMCwgLTEuMCxcbiAgICAgICAgKzEuMCwgKzEuMCwgLTEuMCxcbiAgICAgICAgKzEuMCwgLTEuMCwgLTEuMCxcblxuICAgICAgICAtMS4wLCArMS4wLCAtMS4wLFxuICAgICAgICAtMS4wLCArMS4wLCArMS4wLFxuICAgICAgICArMS4wLCArMS4wLCArMS4wLFxuICAgICAgICArMS4wLCArMS4wLCAtMS4wLFxuXG4gICAgICAgIC0xLjAsIC0xLjAsIC0xLjAsXG4gICAgICAgICsxLjAsIC0xLjAsIC0xLjAsXG4gICAgICAgICsxLjAsIC0xLjAsICsxLjAsXG4gICAgICAgIC0xLjAsIC0xLjAsICsxLjAsXG5cbiAgICAgICAgKzEuMCwgLTEuMCwgLTEuMCxcbiAgICAgICAgKzEuMCwgKzEuMCwgLTEuMCxcbiAgICAgICAgKzEuMCwgKzEuMCwgKzEuMCxcbiAgICAgICAgKzEuMCwgLTEuMCwgKzEuMCxcblxuICAgICAgICAtMS4wLCAtMS4wLCAtMS4wLFxuICAgICAgICAtMS4wLCAtMS4wLCArMS4wLFxuICAgICAgICAtMS4wLCArMS4wLCArMS4wLFxuICAgICAgICAtMS4wLCArMS4wLCAtMS4wXG4gICAgICBdLFxuICAgICAgdmVydGV4Tm9ybWFsRGF0YSA9IFtcbiAgICAgICAgMC4wLCAgMC4wLCArMS4wLFxuICAgICAgICAwLjAsICAwLjAsICsxLjAsXG4gICAgICAgIDAuMCwgIDAuMCwgKzEuMCxcbiAgICAgICAgMC4wLCAgMC4wLCArMS4wLFxuXG4gICAgICAgIDAuMCwgIDAuMCwgLTEuMCxcbiAgICAgICAgMC4wLCAgMC4wLCAtMS4wLFxuICAgICAgICAwLjAsICAwLjAsIC0xLjAsXG4gICAgICAgIDAuMCwgIDAuMCwgLTEuMCxcblxuICAgICAgICAwLjAsICsxLjAsICAwLjAsXG4gICAgICAgIDAuMCwgKzEuMCwgIDAuMCxcbiAgICAgICAgMC4wLCArMS4wLCAgMC4wLFxuICAgICAgICAwLjAsICsxLjAsICAwLjAsXG5cbiAgICAgICAgMC4wLCAtMS4wLCAgMC4wLFxuICAgICAgICAwLjAsIC0xLjAsICAwLjAsXG4gICAgICAgIDAuMCwgLTEuMCwgIDAuMCxcbiAgICAgICAgMC4wLCAtMS4wLCAgMC4wLFxuXG4gICAgICAgICsxLjAsICAwLjAsICAwLjAsXG4gICAgICAgICsxLjAsICAwLjAsICAwLjAsXG4gICAgICAgICsxLjAsICAwLjAsICAwLjAsXG4gICAgICAgICsxLjAsICAwLjAsICAwLjAsXG5cbiAgICAgICAgLTEuMCwgIDAuMCwgIDAuMCxcbiAgICAgICAgLTEuMCwgIDAuMCwgIDAuMCxcbiAgICAgICAgLTEuMCwgIDAuMCwgIDAuMCxcbiAgICAgICAgLTEuMCwgIDAuMCwgIDAuMFxuICAgICAgXSxcbiAgICAgIHZlcnRleEluZGV4RGF0YSA9IFtcbiAgICAgICAgMCwgIDEsICAyLFxuICAgICAgICAwLCAgMiwgIDMsXG5cbiAgICAgICAgNCwgIDUsICA2LFxuICAgICAgICA0LCAgNiwgIDcsXG5cbiAgICAgICAgOCwgIDksIDEwLFxuICAgICAgICA4LCAxMCwgMTEsXG5cbiAgICAgICAgMTIsIDEzLCAxNCxcbiAgICAgICAgMTIsIDE0LCAxNSxcblxuICAgICAgICAxNiwgMTcsIDE4LFxuICAgICAgICAxNiwgMTgsIDE5LFxuXG4gICAgICAgIDIwLCAyMSwgMjIsXG4gICAgICAgIDIwLCAyMiwgMjNcbiAgICAgIF07XG5cbmNvbnN0IGNvbG91ckN1YmUgPSAob2Zmc2V0UG9zaXRpb24sIGNhbnZhcywgY2FsbGJhY2spID0+IHtcbiAgY29uc3QgY29sb3VyU2hhZGVyID0gQ29sb3VyU2hhZGVyLmZyb21Ob3RoaW5nKGNhbnZhcyksXG4gICAgICAgIHZlcnRleFBvc2l0aW9ucyA9IGRpdmlkZSh2ZXJ0ZXhQb3NpdGlvbkRhdGEsIDMpLCAgLy8vXG4gICAgICAgIG9mZnNldFZlcnRleFBvc2l0aW9ucyA9IHZlcnRleFBvc2l0aW9ucy5tYXAoZnVuY3Rpb24odmVydGV4UG9zaXRpb24pIHtcbiAgICAgICAgICBjb25zdCBvZmZzZXRWZXJ0ZXhQb3NpdGlvbiA9IHZlYzMuYWRkKHZlcnRleFBvc2l0aW9uLCBvZmZzZXRQb3NpdGlvbik7XG5cbiAgICAgICAgICByZXR1cm4gb2Zmc2V0VmVydGV4UG9zaXRpb247XG4gICAgICAgIH0pLFxuICAgICAgICBvZmZzZXRWZXJ0ZXhQb3NpdGlvbkRhdGEgPSBmbGF0dGVuKG9mZnNldFZlcnRleFBvc2l0aW9ucyk7XG5cbiAgY29sb3VyU2hhZGVyLmNyZWF0ZUFuZEJpbmRWZXJ0ZXhQb3NpdGlvbkJ1ZmZlcihvZmZzZXRWZXJ0ZXhQb3NpdGlvbkRhdGEsIGNhbnZhcyk7XG5cbiAgY29sb3VyU2hhZGVyLmNyZWF0ZUFuZEJpbmRWZXJ0ZXhDb2xvdXJCdWZmZXIodmVydGV4Q29sb3VyRGF0YSwgY2FudmFzKTtcblxuICBjb2xvdXJTaGFkZXIuY3JlYXRlQW5kQmluZFZlcnRleE5vcm1hbEJ1ZmZlcih2ZXJ0ZXhOb3JtYWxEYXRhLCBjYW52YXMpO1xuXG4gIGNvbnN0IGNvdW50ID0gY2FudmFzLmNyZWF0ZUFuZEJpbmRFbGVtZW50QnVmZmVyKHZlcnRleEluZGV4RGF0YSksXG4gICAgICAgIHNoYWRlciA9IGNvbG91clNoYWRlcjsgIC8vL1xuXG4gIGNhbnZhcy51c2VTaGFkZXIoc2hhZGVyKTtcblxuICBjYWxsYmFjayhjb3VudCwgc2hhZGVyKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY29sb3VyQ3ViZTtcbiJdfQ==