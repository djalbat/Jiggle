'use strict';

var React = require('../../react'),
    ColourCube = require('./cube/colour'),
    TextureCube = require('./cube/texture'),
    imageUtilities = require('../../utilities/image');

var preloadImage = imageUtilities.preloadImage;


function create(colourShader, textureShader, canvas, done) {
  var source = 'imageMap';

  preloadImage(source, function (image) {
    var colourCube = React.createElement(ColourCube, { offsetPosition: [0, 0, 0] }),
        textureCube = React.createElement(TextureCube, { offsetPosition: [+2, +2, +2] });

    colourCube.createElement(colourShader, textureShader);
    textureCube.createElement(colourShader, textureShader);
    textureShader.createTexture(image, canvas);

    done();
  });
}

module.exports = {
  create: create
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VzNi9leGFtcGxlcy9pbnRlcm1lZGlhdGUvY3ViZXMuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwiQ29sb3VyQ3ViZSIsIlRleHR1cmVDdWJlIiwiaW1hZ2VVdGlsaXRpZXMiLCJwcmVsb2FkSW1hZ2UiLCJjcmVhdGUiLCJjb2xvdXJTaGFkZXIiLCJ0ZXh0dXJlU2hhZGVyIiwiY2FudmFzIiwiZG9uZSIsInNvdXJjZSIsImltYWdlIiwiY29sb3VyQ3ViZSIsInRleHR1cmVDdWJlIiwiY3JlYXRlRWxlbWVudCIsImNyZWF0ZVRleHR1cmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxRQUFRQyxRQUFRLGFBQVIsQ0FBZDtBQUFBLElBQ01DLGFBQWFELFFBQVEsZUFBUixDQURuQjtBQUFBLElBRU1FLGNBQWNGLFFBQVEsZ0JBQVIsQ0FGcEI7QUFBQSxJQUdNRyxpQkFBaUJILFFBQVEsdUJBQVIsQ0FIdkI7O0lBS1FJLFksR0FBaUJELGMsQ0FBakJDLFk7OztBQUVSLFNBQVNDLE1BQVQsQ0FBZ0JDLFlBQWhCLEVBQThCQyxhQUE5QixFQUE2Q0MsTUFBN0MsRUFBcURDLElBQXJELEVBQTJEO0FBQ3pELE1BQU1DLFNBQVMsVUFBZjs7QUFFQU4sZUFBYU0sTUFBYixFQUFxQixVQUFTQyxLQUFULEVBQWdCO0FBQ25DLFFBQU1DLGFBQWEsb0JBQUMsVUFBRCxJQUFZLGdCQUFnQixDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUE1QixHQUFuQjtBQUFBLFFBQ01DLGNBQWMsb0JBQUMsV0FBRCxJQUFhLGdCQUFnQixDQUFDLENBQUMsQ0FBRixFQUFLLENBQUMsQ0FBTixFQUFTLENBQUMsQ0FBVixDQUE3QixHQURwQjs7QUFHQUQsZUFBV0UsYUFBWCxDQUF5QlIsWUFBekIsRUFBdUNDLGFBQXZDO0FBQ0FNLGdCQUFZQyxhQUFaLENBQTBCUixZQUExQixFQUF3Q0MsYUFBeEM7QUFDQUEsa0JBQWNRLGFBQWQsQ0FBNEJKLEtBQTVCLEVBQW1DSCxNQUFuQzs7QUFFQUM7QUFDRCxHQVREO0FBVUQ7O0FBRURPLE9BQU9DLE9BQVAsR0FBaUI7QUFDZlosVUFBUUE7QUFETyxDQUFqQiIsImZpbGUiOiJjdWJlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCcuLi8uLi9yZWFjdCcpLFxuICAgICAgQ29sb3VyQ3ViZSA9IHJlcXVpcmUoJy4vY3ViZS9jb2xvdXInKSxcbiAgICAgIFRleHR1cmVDdWJlID0gcmVxdWlyZSgnLi9jdWJlL3RleHR1cmUnKSxcbiAgICAgIGltYWdlVXRpbGl0aWVzID0gcmVxdWlyZSgnLi4vLi4vdXRpbGl0aWVzL2ltYWdlJyk7XG5cbmNvbnN0IHsgcHJlbG9hZEltYWdlIH0gPSBpbWFnZVV0aWxpdGllcztcblxuZnVuY3Rpb24gY3JlYXRlKGNvbG91clNoYWRlciwgdGV4dHVyZVNoYWRlciwgY2FudmFzLCBkb25lKSB7XG4gIGNvbnN0IHNvdXJjZSA9ICdpbWFnZU1hcCc7XG5cbiAgcHJlbG9hZEltYWdlKHNvdXJjZSwgZnVuY3Rpb24oaW1hZ2UpIHtcbiAgICBjb25zdCBjb2xvdXJDdWJlID0gPENvbG91ckN1YmUgb2Zmc2V0UG9zaXRpb249e1swLCAwLCAwXX0gLz4sXG4gICAgICAgICAgdGV4dHVyZUN1YmUgPSA8VGV4dHVyZUN1YmUgb2Zmc2V0UG9zaXRpb249e1srMiwgKzIsICsyXX0gLz47XG5cbiAgICBjb2xvdXJDdWJlLmNyZWF0ZUVsZW1lbnQoY29sb3VyU2hhZGVyLCB0ZXh0dXJlU2hhZGVyKTtcbiAgICB0ZXh0dXJlQ3ViZS5jcmVhdGVFbGVtZW50KGNvbG91clNoYWRlciwgdGV4dHVyZVNoYWRlcik7XG4gICAgdGV4dHVyZVNoYWRlci5jcmVhdGVUZXh0dXJlKGltYWdlLCBjYW52YXMpO1xuXG4gICAgZG9uZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNyZWF0ZTogY3JlYXRlXG59O1xuIl19