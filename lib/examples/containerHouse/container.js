'use strict';

var vec3 = require('../../maths/vec3'),
    ColourPlane = require('../common/plane/colour'),
    transformUtilities = require('../../utilities/transform');

var add = vec3.add,
    composeRotate = transformUtilities.composeRotate,
    height = 9.5,
    width = 8,
    colour = [1, 1, 1, 1],
    defaultOffset = [0, 0, 0],
    defaultRotations = [0, 0, 0];


var Container = function Container(properties) {
  var _properties$position = properties.position,
      position = _properties$position === undefined ? defaultOffset : _properties$position,
      _properties$rotations = properties.rotations,
      rotations = _properties$rotations === undefined ? defaultRotations : _properties$rotations,
      length = properties.length;


  return [frontWall(length, position, rotations), backWall(length, position, rotations), bottom(length, position, rotations), top(length, position, rotations), sideWallA(length, position, rotations), sideWallB(length, position, rotations)];
};

module.exports = Container;

var frontWall = function frontWall(length, position, rotations) {
  var rotate = composeRotate(rotations);

  return React.createElement(ColourPlane, { colour: colour, position: rotate(add(position, [0, 0, length])), width: width, height: height, rotations: [0, 0, 0] });
};

var backWall = function backWall(length, position, rotations) {
  var rotate = composeRotate(rotations);

  return React.createElement(ColourPlane, { colour: colour, position: rotate(add(position, [width, 0, 0])), width: width, height: height, rotations: [0, -180, 0] });
};

var bottom = function bottom(length, position, rotations) {
  var rotate = composeRotate(rotations);

  return React.createElement(ColourPlane, { colour: colour, position: rotate(add(position, [0, 0, 0])), width: width, height: length, rotations: [90, 0, 0] });
};

var top = function top(length, position, rotations) {
  var rotate = composeRotate(rotations);

  return React.createElement(ColourPlane, { colour: colour, position: rotate(add(position, [0, height, length])), width: width, height: length, rotations: [-90, 0, 0] });
};

var sideWallA = function sideWallA(length, position, rotations) {
  var rotate = composeRotate(rotations);

  return React.createElement(ColourPlane, { colour: colour, position: rotate(add(position, [0, 0, 0])), width: length, height: height, rotations: [0, -90, 0] });
};

var sideWallB = function sideWallB(length, position, rotations) {
  var rotate = composeRotate(rotations);

  return React.createElement(ColourPlane, { colour: colour, position: rotate(add(position, [width, 0, length])), width: length, height: height, rotations: [0, 90, 0] });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VzNi9leGFtcGxlcy9jb250YWluZXJIb3VzZS9jb250YWluZXIuanMiXSwibmFtZXMiOlsidmVjMyIsInJlcXVpcmUiLCJDb2xvdXJQbGFuZSIsInRyYW5zZm9ybVV0aWxpdGllcyIsImFkZCIsImNvbXBvc2VSb3RhdGUiLCJoZWlnaHQiLCJ3aWR0aCIsImNvbG91ciIsImRlZmF1bHRPZmZzZXQiLCJkZWZhdWx0Um90YXRpb25zIiwiQ29udGFpbmVyIiwicHJvcGVydGllcyIsInBvc2l0aW9uIiwicm90YXRpb25zIiwibGVuZ3RoIiwiZnJvbnRXYWxsIiwiYmFja1dhbGwiLCJib3R0b20iLCJ0b3AiLCJzaWRlV2FsbEEiLCJzaWRlV2FsbEIiLCJtb2R1bGUiLCJleHBvcnRzIiwicm90YXRlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxPQUFPQyxRQUFRLGtCQUFSLENBQWI7QUFBQSxJQUNNQyxjQUFjRCxRQUFRLHdCQUFSLENBRHBCO0FBQUEsSUFFTUUscUJBQXFCRixRQUFRLDJCQUFSLENBRjNCOztBQUlNLElBQUVHLEdBQUYsR0FBVUosSUFBVixDQUFFSSxHQUFGO0FBQUEsSUFDRUMsYUFERixHQUNvQkYsa0JBRHBCLENBQ0VFLGFBREY7QUFBQSxJQUVBQyxNQUZBLEdBRVMsR0FGVDtBQUFBLElBR0FDLEtBSEEsR0FHUSxDQUhSO0FBQUEsSUFJQUMsTUFKQSxHQUlTLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFSLEVBQVcsQ0FBWCxDQUpUO0FBQUEsSUFLQUMsYUFMQSxHQUtnQixDQUFFLENBQUYsRUFBSyxDQUFMLEVBQVEsQ0FBUixDQUxoQjtBQUFBLElBTUFDLGdCQU5BLEdBTW1CLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFSLENBTm5COzs7QUFRTixJQUFNQyxZQUFZLFNBQVpBLFNBQVksQ0FBQ0MsVUFBRCxFQUFnQjtBQUFBLDZCQUM0Q0EsVUFENUMsQ0FDeEJDLFFBRHdCO0FBQUEsTUFDeEJBLFFBRHdC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LE1BQUQsRUFBU0YsUUFBVCxFQUFtQkMsU0FBbkIsRUFBaUM7QUFDakQsTUFBTVUsU0FBU25CLGNBQWNTLFNBQWQsQ0FBZjs7QUFFQSxTQUVFLG9CQUFDLFdBQUQsSUFBYSxRQUFRTixNQUFyQixFQUE2QixVQUFVZ0IsT0FBT3BCLElBQUlTLFFBQUosRUFBYyxDQUFFLENBQUYsRUFBSyxDQUFMLEVBQVEsQ0FBUixDQUFkLENBQVAsQ0FBdkMsRUFBMkUsT0FBT0UsTUFBbEYsRUFBMEYsUUFBUVQsTUFBbEcsRUFBMEcsV0FBVyxDQUFFLENBQUYsRUFBSyxDQUFDLEVBQU4sRUFBVSxDQUFWLENBQXJILEdBRkY7QUFLRCxDQVJEOztBQVVBLElBQU1lLFlBQVksU0FBWkEsU0FBWSxDQUFDTixNQUFELEVBQVNGLFFBQVQsRUFBbUJDLFNBQW5CLEVBQWlDO0FBQ2pELE1BQU1VLFNBQVNuQixjQUFjUyxTQUFkLENBQWY7O0FBRUEsU0FFRSxvQkFBQyxXQUFELElBQWEsUUFBUU4sTUFBckIsRUFBNkIsVUFBVWdCLE9BQU9wQixJQUFJUyxRQUFKLEVBQWMsQ0FBRU4sS0FBRixFQUFTLENBQVQsRUFBWVEsTUFBWixDQUFkLENBQVAsQ0FBdkMsRUFBb0YsT0FBT0EsTUFBM0YsRUFBbUcsUUFBUVQsTUFBM0csRUFBbUgsV0FBVyxDQUFFLENBQUYsRUFBSyxFQUFMLEVBQVMsQ0FBVCxDQUE5SCxHQUZGO0FBS0QsQ0FSRCIsImZpbGUiOiJjb250YWluZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHZlYzMgPSByZXF1aXJlKCcuLi8uLi9tYXRocy92ZWMzJyksXG4gICAgICBDb2xvdXJQbGFuZSA9IHJlcXVpcmUoJy4uL2NvbW1vbi9wbGFuZS9jb2xvdXInKSxcbiAgICAgIHRyYW5zZm9ybVV0aWxpdGllcyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxpdGllcy90cmFuc2Zvcm0nKTtcblxuY29uc3QgeyBhZGQgfSA9IHZlYzMsXG4gICAgICB7IGNvbXBvc2VSb3RhdGUgfSA9IHRyYW5zZm9ybVV0aWxpdGllcyxcbiAgICAgIGhlaWdodCA9IDkuNSxcbiAgICAgIHdpZHRoID0gOCxcbiAgICAgIGNvbG91ciA9IFsgMSwgMSwgMSwgMSBdLFxuICAgICAgZGVmYXVsdE9mZnNldCA9IFsgMCwgMCwgMCBdLFxuICAgICAgZGVmYXVsdFJvdGF0aW9ucyA9IFsgMCwgMCwgMCBdO1xuXG5jb25zdCBDb250YWluZXIgPSAocHJvcGVydGllcykgPT4ge1xuICBjb25zdCB7IHBvc2l0aW9uID0gZGVmYXVsdE9mZnNldCwgcm90YXRpb25zID0gZGVmYXVsdFJvdGF0aW9ucywgIGxlbmd0aCB9ID0gcHJvcGVydGllcztcblxuICByZXR1cm4gKFtcblxuICAgIGZyb250V2FsbChsZW5ndGgsIHBvc2l0aW9uLCByb3RhdGlvbnMpLFxuXG4gICAgYmFja1dhbGwobGVuZ3RoLCBwb3NpdGlvbiwgcm90YXRpb25zKSxcblxuICAgIGJvdHRvbShsZW5ndGgsIHBvc2l0aW9uLCByb3RhdGlvbnMpLFxuXG4gICAgdG9wKGxlbmd0aCwgcG9zaXRpb24sIHJvdGF0aW9ucyksXG5cbiAgICBzaWRlV2FsbEEobGVuZ3RoLCBwb3NpdGlvbiwgcm90YXRpb25zKSxcblxuICAgIHNpZGVXYWxsQihsZW5ndGgsIHBvc2l0aW9uLCByb3RhdGlvbnMpLFxuXG4gIF0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb250YWluZXI7XG5cbmNvbnN0IGZyb250V2FsbCA9IChsZW5ndGgsIHBvc2l0aW9uLCByb3RhdGlvbnMpID0+IHtcbiAgY29uc3Qgcm90YXRlID0gY29tcG9zZVJvdGF0ZShyb3RhdGlvbnMpO1xuXG4gIHJldHVybiAoXG5cbiAgICA8Q29sb3VyUGxhbmUgY29sb3VyPXtjb2xvdXJ9IHBvc2l0aW9uPXtyb3RhdGUoYWRkKHBvc2l0aW9uLCBbIDAsIDAsIGxlbmd0aCBdKSl9IHdpZHRoPXt3aWR0aH0gaGVpZ2h0PXtoZWlnaHR9IHJvdGF0aW9ucz17WyAwLCAwLCAwIF19IC8+XG5cbiAgKTtcbn07XG5cbmNvbnN0IGJhY2tXYWxsID0gKGxlbmd0aCwgcG9zaXRpb24sIHJvdGF0aW9ucykgPT4ge1xuICBjb25zdCByb3RhdGUgPSBjb21wb3NlUm90YXRlKHJvdGF0aW9ucyk7XG5cbiAgcmV0dXJuIChcblxuICAgIDxDb2xvdXJQbGFuZSBjb2xvdXI9e2NvbG91cn0gcG9zaXRpb249e3JvdGF0ZShhZGQocG9zaXRpb24sIFsgd2lkdGgsIDAsIDAgXSkpfSB3aWR0aD17d2lkdGh9IGhlaWdodD17aGVpZ2h0fSByb3RhdGlvbnM9e1sgMCwgLTE4MCwgMCBdfSAvPlxuXG4gICk7XG59O1xuXG5jb25zdCBib3R0b20gPSAobGVuZ3RoLCBwb3NpdGlvbiwgcm90YXRpb25zKSA9PiB7XG4gIGNvbnN0IHJvdGF0ZSA9IGNvbXBvc2VSb3RhdGUocm90YXRpb25zKTtcblxuICByZXR1cm4gKFxuXG4gICAgPENvbG91clBsYW5lIGNvbG91cj17Y29sb3VyfSBwb3NpdGlvbj17cm90YXRlKGFkZChwb3NpdGlvbiwgWyAwLCAwLCAwIF0pKX0gd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2xlbmd0aH0gcm90YXRpb25zPXtbIDkwLCAgMCwgMCBdfSAvPlxuXG4gICk7XG59O1xuXG5jb25zdCB0b3AgPSAobGVuZ3RoLCBwb3NpdGlvbiwgcm90YXRpb25zKSA9PiB7XG4gIGNvbnN0IHJvdGF0ZSA9IGNvbXBvc2VSb3RhdGUocm90YXRpb25zKTtcblxuICByZXR1cm4gKFxuXG4gICAgPENvbG91clBsYW5lIGNvbG91cj17Y29sb3VyfSBwb3NpdGlvbj17cm90YXRlKGFkZChwb3NpdGlvbiwgWyAwLCBoZWlnaHQsIGxlbmd0aCBdKSl9IHdpZHRoPXt3aWR0aH0gaGVpZ2h0PXtsZW5ndGh9IHJvdGF0aW9ucz17WyAtOTAsIDAsIDAgXX0gLz5cblxuICApO1xufTtcblxuY29uc3Qgc2lkZVdhbGxBID0gKGxlbmd0aCwgcG9zaXRpb24sIHJvdGF0aW9ucykgPT4ge1xuICBjb25zdCByb3RhdGUgPSBjb21wb3NlUm90YXRlKHJvdGF0aW9ucyk7XG5cbiAgcmV0dXJuIChcblxuICAgIDxDb2xvdXJQbGFuZSBjb2xvdXI9e2NvbG91cn0gcG9zaXRpb249e3JvdGF0ZShhZGQocG9zaXRpb24sIFsgMCwgMCwgMCBdKSl9IHdpZHRoPXtsZW5ndGh9IGhlaWdodD17aGVpZ2h0fSByb3RhdGlvbnM9e1sgMCwgLTkwLCAwIF19IC8+XG5cbiAgKTtcbn07XG5cbmNvbnN0IHNpZGVXYWxsQiA9IChsZW5ndGgsIHBvc2l0aW9uLCByb3RhdGlvbnMpID0+IHtcbiAgY29uc3Qgcm90YXRlID0gY29tcG9zZVJvdGF0ZShyb3RhdGlvbnMpO1xuXG4gIHJldHVybiAoXG5cbiAgICA8Q29sb3VyUGxhbmUgY29sb3VyPXtjb2xvdXJ9IHBvc2l0aW9uPXtyb3RhdGUoYWRkKHBvc2l0aW9uLCBbIHdpZHRoLCAwLCBsZW5ndGggXSkpfSB3aWR0aD17bGVuZ3RofSBoZWlnaHQ9e2hlaWdodH0gcm90YXRpb25zPXtbIDAsIDkwLCAwIF19IC8+XG5cbiAgKTtcbn07XG4iXX0=