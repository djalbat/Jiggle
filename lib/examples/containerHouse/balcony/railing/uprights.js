'use strict';

var vec3 = require('../../../../maths/vec3'),
    vec4 = require('../../../../maths/vec4'),
    Upright = require('./upright');

var add = vec3.add,
    composeTransform = vec4.composeTransform;


var Uprights = function Uprights(properties) {
      var offset = properties.offset,
          rotation = properties.rotation,
          height = properties.height,
          length = properties.length,
          thickness = properties.thickness,
          overallOffset = offset,
          elements = [],
          step = 0.5,
          count = length / step;


      for (var index = 1; index < count; index++) {
            var _offset = [step * index, 0, thickness / 2, 1],
                transform = composeTransform(1, 1, 1, [0, 0, 0], rotation);

            transform(_offset);

            elements.push(React.createElement(Upright, { offset: add(overallOffset, _offset), rotation: rotation, height: height }));
      }

      return elements;
};

module.exports = Uprights;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2VzNi9leGFtcGxlcy9jb250YWluZXJIb3VzZS9iYWxjb255L3JhaWxpbmcvdXByaWdodHMuanMiXSwibmFtZXMiOlsidmVjMyIsInJlcXVpcmUiLCJ2ZWM0IiwiVXByaWdodCIsImFkZCIsImNvbXBvc2VUcmFuc2Zvcm0iLCJVcHJpZ2h0cyIsInByb3BlcnRpZXMiLCJvZmZzZXQiLCJyb3RhdGlvbiIsImhlaWdodCIsImxlbmd0aCIsInRoaWNrbmVzcyIsIm92ZXJhbGxPZmZzZXQiLCJlbGVtZW50cyIsInN0ZXAiLCJjb3VudCIsImluZGV4IiwidHJhbnNmb3JtIiwicHVzaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLE9BQU9DLFFBQVEsd0JBQVIsQ0FBYjtBQUFBLElBQ01DLE9BQU9ELFFBQVEsd0JBQVIsQ0FEYjtBQUFBLElBRU1FLFVBQVVGLFFBQVEsV0FBUixDQUZoQjs7QUFJTSxJQUFFRyxHQUFGLEdBQVVKLElBQVYsQ0FBRUksR0FBRjtBQUFBLElBQ0VDLGdCQURGLEdBQ3VCSCxJQUR2QixDQUNFRyxnQkFERjs7O0FBR04sSUFBTUMsV0FBVyxTQUFYQSxRQUFXLENBQUNDLFVBQUQsRUFBZ0I7QUFBQSxVQUN2QkMsTUFEdUIsR0FDeUJELFVBRHpCLENBQ3ZCQyxNQUR1QjtBQUFBLFVBQ2ZDLFFBRGUsR0FDeUJGLFVBRHpCLENBQ2ZFLFFBRGU7QUFBQSxVQUNMQyxNQURLLEdBQ3lCSCxVQUR6QixDQUNMRyxNQURLO0FBQUEsVUFDR0MsTUFESCxHQUN5QkosVUFEekIsQ0FDR0ksTUFESDtBQUFBLFVBQ1dDLFNBRFgsR0FDeUJMLFVBRHpCLENBQ1dLLFNBRFg7QUFBQSxVQUV6QkMsYUFGeUIsR0FFVEwsTUFGUztBQUFBLFVBR3pCTSxRQUh5QixHQUdkLEVBSGM7QUFBQSxVQUl6QkMsSUFKeUIsR0FJbEIsR0FKa0I7QUFBQSxVQUt6QkMsS0FMeUIsR0FLakJMLFNBQVNJLElBTFE7OztBQU8vQixXQUFLLElBQUlFLFFBQVEsQ0FBakIsRUFBb0JBLFFBQVFELEtBQTVCLEVBQW1DQyxPQUFuQyxFQUE0QztBQUMxQyxnQkFBTVQsVUFBUyxDQUFFTyxPQUFPRSxLQUFULEVBQWdCLENBQWhCLEVBQW1CTCxZQUFZLENBQS9CLEVBQWtDLENBQWxDLENBQWY7QUFBQSxnQkFDTU0sWUFBWWIsaUJBQWlCLENBQWpCLEVBQW9CLENBQXBCLEVBQXVCLENBQXZCLEVBQTBCLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFSLENBQTFCLEVBQXVDSSxRQUF2QyxDQURsQjs7QUFHQVMsc0JBQVVWLE9BQVY7O0FBRUFNLHFCQUFTSyxJQUFULENBRUUsb0JBQUMsT0FBRCxJQUFTLFFBQVFmLElBQUlTLGFBQUosRUFBbUJMLE9BQW5CLENBQWpCLEVBQTZDLFVBQVVDLFFBQXZELEVBQWlFLFFBQVFDLE1BQXpFLEdBRkY7QUFLRDs7QUFFRCxhQUFPSSxRQUFQO0FBQ0QsQ0FyQkQ7O0FBdUJBTSxPQUFPQyxPQUFQLEdBQWlCZixRQUFqQiIsImZpbGUiOiJ1cHJpZ2h0cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdmVjMyA9IHJlcXVpcmUoJy4uLy4uLy4uLy4uL21hdGhzL3ZlYzMnKSxcbiAgICAgIHZlYzQgPSByZXF1aXJlKCcuLi8uLi8uLi8uLi9tYXRocy92ZWM0JyksXG4gICAgICBVcHJpZ2h0ID0gcmVxdWlyZSgnLi91cHJpZ2h0Jyk7XG5cbmNvbnN0IHsgYWRkIH0gPSB2ZWMzLFxuICAgICAgeyBjb21wb3NlVHJhbnNmb3JtIH0gPSB2ZWM0O1xuXG5jb25zdCBVcHJpZ2h0cyA9IChwcm9wZXJ0aWVzKSA9PiB7XG4gIGNvbnN0IHsgb2Zmc2V0LCByb3RhdGlvbiwgaGVpZ2h0LCBsZW5ndGgsIHRoaWNrbmVzcyB9ID0gcHJvcGVydGllcyxcbiAgICAgICAgb3ZlcmFsbE9mZnNldCA9IG9mZnNldCxcbiAgICAgICAgZWxlbWVudHMgPSBbXSxcbiAgICAgICAgc3RlcCA9IDAuNSxcbiAgICAgICAgY291bnQgPSBsZW5ndGggLyBzdGVwO1xuXG4gIGZvciAobGV0IGluZGV4ID0gMTsgaW5kZXggPCBjb3VudDsgaW5kZXgrKykge1xuICAgIGNvbnN0IG9mZnNldCA9IFsgc3RlcCAqIGluZGV4LCAwLCB0aGlja25lc3MgLyAyLCAxIF0sXG4gICAgICAgICAgdHJhbnNmb3JtID0gY29tcG9zZVRyYW5zZm9ybSgxLCAxLCAxLCBbIDAsIDAsIDAgXSwgcm90YXRpb24pO1xuXG4gICAgdHJhbnNmb3JtKG9mZnNldCk7XG5cbiAgICBlbGVtZW50cy5wdXNoKFxuXG4gICAgICA8VXByaWdodCBvZmZzZXQ9e2FkZChvdmVyYWxsT2Zmc2V0LCBvZmZzZXQpfSByb3RhdGlvbj17cm90YXRpb259IGhlaWdodD17aGVpZ2h0fSAvPlxuXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIGVsZW1lbnRzO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBVcHJpZ2h0cztcbiJdfQ==