'use strict';

var vec3 = require('../../../../maths/vec3'),
    Upright = require('./upright');

var add = vec3.add;


var Uprights = function Uprights(properties) {
  var position = properties.position,
      rotations = properties.rotations,
      height = properties.height,
      length = properties.length,
      thickness = properties.thickness,
      overallPosition = position,
      elements = [],
      step = 0.5,
      count = length / step;


  for (var index = 1; index < count; index++) {
    var _position = [step * index, 0, thickness / 2, 1];

    elements.push(React.createElement(Upright, { position: add(overallPosition, _position), rotations: rotations, height: height }));
  }

  return elements;
};

module.exports = Uprights;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2VzNi9leGFtcGxlcy9jb250YWluZXJIb3VzZS9iYWxjb255L3JhaWxpbmcvdXByaWdodHMuanMiXSwibmFtZXMiOlsidmVjMyIsInJlcXVpcmUiLCJVcHJpZ2h0IiwiYWRkIiwiVXByaWdodHMiLCJwcm9wZXJ0aWVzIiwicG9zaXRpb24iLCJyb3RhdGlvbnMiLCJoZWlnaHQiLCJsZW5ndGgiLCJ0aGlja25lc3MiLCJvdmVyYWxsUG9zaXRpb24iLCJlbGVtZW50cyIsInN0ZXAiLCJjb3VudCIsImluZGV4IiwicHVzaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLE9BQU9DLFFBQVEsd0JBQVIsQ0FBYjtBQUFBLElBQ01DLFVBQVVELFFBQVEsV0FBUixDQURoQjs7SUFHUUUsRyxHQUFRSCxJLENBQVJHLEc7OztBQUVSLElBQU1DLFdBQVcsU0FBWEEsUUFBVyxDQUFDQyxVQUFELEVBQWdCO0FBQUEsTUFDdkJDLFFBRHVCLEdBQzRCRCxVQUQ1QixDQUN2QkMsUUFEdUI7QUFBQSxNQUNiQyxTQURhLEdBQzRCRixVQUQ1QixDQUNiRSxTQURhO0FBQUEsTUFDRkMsTUFERSxHQUM0QkgsVUFENUIsQ0FDRkcsTUFERTtBQUFBLE1BQ01DLE1BRE4sR0FDNEJKLFVBRDVCLENBQ01JLE1BRE47QUFBQSxNQUNjQyxTQURkLEdBQzRCTCxVQUQ1QixDQUNjSyxTQURkO0FBQUEsTUFFekJDLGVBRnlCLEdBRVBMLFFBRk87QUFBQSxNQUd6Qk0sUUFIeUIsR0FHZCxFQUhjO0FBQUEsTUFJekJDLElBSnlCLEdBSWxCLEdBSmtCO0FBQUEsTUFLekJDLEtBTHlCLEdBS2pCTCxTQUFTSSxJQUxROzs7QUFPL0IsT0FBSyxJQUFJRSxRQUFRLENBQWpCLEVBQW9CQSxRQUFRRCxLQUE1QixFQUFtQ0MsT0FBbkMsRUFBNEM7QUFDMUMsUUFBTVQsWUFBVyxDQUFFTyxPQUFPRSxLQUFULEVBQWdCLENBQWhCLEVBQW1CTCxZQUFZLENBQS9CLEVBQWtDLENBQWxDLENBQWpCOztBQUVBRSxhQUFTSSxJQUFULENBRUUsb0JBQUMsT0FBRCxJQUFTLFVBQVViLElBQUlRLGVBQUosRUFBcUJMLFNBQXJCLENBQW5CLEVBQW1ELFdBQVdDLFNBQTlELEVBQXlFLFFBQVFDLE1BQWpGLEdBRkY7QUFLRDs7QUFFRCxTQUFPSSxRQUFQO0FBQ0QsQ0FsQkQ7O0FBb0JBSyxPQUFPQyxPQUFQLEdBQWlCZCxRQUFqQiIsImZpbGUiOiJ1cHJpZ2h0cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdmVjMyA9IHJlcXVpcmUoJy4uLy4uLy4uLy4uL21hdGhzL3ZlYzMnKSxcbiAgICAgIFVwcmlnaHQgPSByZXF1aXJlKCcuL3VwcmlnaHQnKTtcblxuY29uc3QgeyBhZGQgfSA9IHZlYzM7XG5cbmNvbnN0IFVwcmlnaHRzID0gKHByb3BlcnRpZXMpID0+IHtcbiAgY29uc3QgeyBwb3NpdGlvbiwgcm90YXRpb25zLCBoZWlnaHQsIGxlbmd0aCwgdGhpY2tuZXNzIH0gPSBwcm9wZXJ0aWVzLFxuICAgICAgICBvdmVyYWxsUG9zaXRpb24gPSBwb3NpdGlvbixcbiAgICAgICAgZWxlbWVudHMgPSBbXSxcbiAgICAgICAgc3RlcCA9IDAuNSxcbiAgICAgICAgY291bnQgPSBsZW5ndGggLyBzdGVwO1xuXG4gIGZvciAobGV0IGluZGV4ID0gMTsgaW5kZXggPCBjb3VudDsgaW5kZXgrKykge1xuICAgIGNvbnN0IHBvc2l0aW9uID0gWyBzdGVwICogaW5kZXgsIDAsIHRoaWNrbmVzcyAvIDIsIDEgXTtcblxuICAgIGVsZW1lbnRzLnB1c2goXG5cbiAgICAgIDxVcHJpZ2h0IHBvc2l0aW9uPXthZGQob3ZlcmFsbFBvc2l0aW9uLCBwb3NpdGlvbil9IHJvdGF0aW9ucz17cm90YXRpb25zfSBoZWlnaHQ9e2hlaWdodH0gLz5cblxuICAgIClcbiAgfVxuXG4gIHJldHVybiBlbGVtZW50cztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gVXByaWdodHM7XG4iXX0=