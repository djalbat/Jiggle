'use strict';

var vec3 = require('../../../../maths/vec3'),
    ColouredCuboid = require('../../../common/coloured/cuboid'),
    ColouredCylinder = require('../../../common/coloured/cylinder');

var add = vec3.add,
    overallHeight = 0.25,
    overallThickness = 0.025,
    widthwiseCount = 10,
    depthwiseCount = 5,
    colour = [0.6, 0.6, 0.6, 10];


var OpenMesh = function OpenMesh(properties) {
      var position = properties.position,
          width = properties.width,
          depth = properties.depth,
          overallWidth = width,
          overallDepth = depth,
          elements = [];


      for (var index = 1; index < widthwiseCount; index++) {
            var step = overallWidth / widthwiseCount,
                _width = overallThickness,
                ///
            height = overallHeight,
                _depth = overallDepth;

            elements.push(React.createElement(ColouredCuboid, { colour: colour, position: add(position, [step * index, -height, 0]), width: _width, height: height, depth: _depth }));
      }

      for (var _index = 1; _index < depthwiseCount; _index++) {
            var _step = overallDepth / depthwiseCount,
                diameter = overallHeight / 2,
                ///
            _width2 = diameter,
                ///
            _height = diameter,
                ///
            _depth2 = overallWidth; ///

            elements.push(React.createElement(ColouredCylinder, { colour: colour, position: add(position, [0, -3 * diameter / 2, _step * _index]), width: _width2, height: _height, depth: _depth2, rotations: [0, 90, 0] }));
      }

      return elements;
};

module.exports = OpenMesh;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2VzNi9leGFtcGxlcy9jb250YWluZXJIb3VzZS9iYWxjb255L3NlY3Rpb24vb3Blbk1lc2guanMiXSwibmFtZXMiOlsidmVjMyIsInJlcXVpcmUiLCJDb2xvdXJlZEN1Ym9pZCIsIkNvbG91cmVkQ3lsaW5kZXIiLCJhZGQiLCJvdmVyYWxsSGVpZ2h0Iiwib3ZlcmFsbFRoaWNrbmVzcyIsIndpZHRod2lzZUNvdW50IiwiZGVwdGh3aXNlQ291bnQiLCJjb2xvdXIiLCJPcGVuTWVzaCIsInByb3BlcnRpZXMiLCJwb3NpdGlvbiIsIndpZHRoIiwiZGVwdGgiLCJvdmVyYWxsV2lkdGgiLCJvdmVyYWxsRGVwdGgiLCJlbGVtZW50cyIsImluZGV4Iiwic3RlcCIsImhlaWdodCIsInB1c2giLCJkaWFtZXRlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLE9BQU9DLFFBQVEsd0JBQVIsQ0FBYjtBQUFBLElBQ01DLGlCQUFpQkQsUUFBUSxpQ0FBUixDQUR2QjtBQUFBLElBRU1FLG1CQUFtQkYsUUFBUSxtQ0FBUixDQUZ6Qjs7QUFJTSxJQUFFRyxHQUFGLEdBQVVKLElBQVYsQ0FBRUksR0FBRjtBQUFBLElBQ0FDLGFBREEsR0FDZ0IsSUFEaEI7QUFBQSxJQUVBQyxnQkFGQSxHQUVtQixLQUZuQjtBQUFBLElBR0FDLGNBSEEsR0FHaUIsRUFIakI7QUFBQSxJQUlBQyxjQUpBLEdBSWlCLENBSmpCO0FBQUEsSUFLQUMsTUFMQSxHQUtTLENBQUUsR0FBRixFQUFPLEdBQVAsRUFBWSxHQUFaLEVBQWlCLEVBQWpCLENBTFQ7OztBQU9OLElBQU1DLFdBQVcsU0FBWEEsUUFBVyxDQUFDQyxVQUFELEVBQWdCO0FBQUEsVUFDdkJDLFFBRHVCLEdBQ0lELFVBREosQ0FDdkJDLFFBRHVCO0FBQUEsVUFDYkMsS0FEYSxHQUNJRixVQURKLENBQ2JFLEtBRGE7QUFBQSxVQUNOQyxLQURNLEdBQ0lILFVBREosQ0FDTkcsS0FETTtBQUFBLFVBRXpCQyxZQUZ5QixHQUVWRixLQUZVO0FBQUEsVUFHekJHLFlBSHlCLEdBR1ZGLEtBSFU7QUFBQSxVQUl6QkcsUUFKeUIsR0FJZCxFQUpjOzs7QUFNL0IsV0FBSyxJQUFJQyxRQUFRLENBQWpCLEVBQW9CQSxRQUFRWCxjQUE1QixFQUE0Q1csT0FBNUMsRUFBcUQ7QUFDbkQsZ0JBQU1DLE9BQU9KLGVBQWVSLGNBQTVCO0FBQUEsZ0JBQ01NLFNBQVFQLGdCQURkO0FBQUEsZ0JBQ2lDO0FBQzNCYyxxQkFBU2YsYUFGZjtBQUFBLGdCQUdNUyxTQUFRRSxZQUhkOztBQUtBQyxxQkFBU0ksSUFBVCxDQUVFLG9CQUFDLGNBQUQsSUFBZ0IsUUFBUVosTUFBeEIsRUFBZ0MsVUFBVUwsSUFBSVEsUUFBSixFQUFjLENBQUVPLE9BQU9ELEtBQVQsRUFBZ0IsQ0FBQ0UsTUFBakIsRUFBeUIsQ0FBekIsQ0FBZCxDQUExQyxFQUF1RixPQUFPUCxNQUE5RixFQUFxRyxRQUFRTyxNQUE3RyxFQUFxSCxPQUFPTixNQUE1SCxHQUZGO0FBS0Q7O0FBRUQsV0FBSyxJQUFJSSxTQUFRLENBQWpCLEVBQW9CQSxTQUFRVixjQUE1QixFQUE0Q1UsUUFBNUMsRUFBcUQ7QUFDbkQsZ0JBQU1DLFFBQU9ILGVBQWVSLGNBQTVCO0FBQUEsZ0JBQ01jLFdBQVdqQixnQkFBZ0IsQ0FEakM7QUFBQSxnQkFDb0M7QUFDOUJRLHNCQUFRUyxRQUZkO0FBQUEsZ0JBRXdCO0FBQ2xCRixzQkFBU0UsUUFIZjtBQUFBLGdCQUd5QjtBQUNuQlIsc0JBQVFDLFlBSmQsQ0FEbUQsQ0FLdEI7O0FBRTdCRSxxQkFBU0ksSUFBVCxDQUVFLG9CQUFDLGdCQUFELElBQWtCLFFBQVFaLE1BQTFCLEVBQWtDLFVBQVVMLElBQUlRLFFBQUosRUFBYyxDQUFFLENBQUYsRUFBSyxDQUFDLENBQUQsR0FBR1UsUUFBSCxHQUFZLENBQWpCLEVBQW9CSCxRQUFPRCxNQUEzQixDQUFkLENBQTVDLEVBQStGLE9BQU9MLE9BQXRHLEVBQTZHLFFBQVFPLE9BQXJILEVBQTZILE9BQU9OLE9BQXBJLEVBQTJJLFdBQVcsQ0FBRSxDQUFGLEVBQUssRUFBTCxFQUFTLENBQVQsQ0FBdEosR0FGRjtBQUtEOztBQUVELGFBQU9HLFFBQVA7QUFDRCxDQWxDRDs7QUFvQ0FNLE9BQU9DLE9BQVAsR0FBaUJkLFFBQWpCIiwiZmlsZSI6Im9wZW5NZXNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB2ZWMzID0gcmVxdWlyZSgnLi4vLi4vLi4vLi4vbWF0aHMvdmVjMycpLFxuICAgICAgQ29sb3VyZWRDdWJvaWQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21tb24vY29sb3VyZWQvY3Vib2lkJyksXG4gICAgICBDb2xvdXJlZEN5bGluZGVyID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tbW9uL2NvbG91cmVkL2N5bGluZGVyJyk7XG5cbmNvbnN0IHsgYWRkIH0gPSB2ZWMzLFxuICAgICAgb3ZlcmFsbEhlaWdodCA9IDAuMjUsXG4gICAgICBvdmVyYWxsVGhpY2tuZXNzID0gMC4wMjUsXG4gICAgICB3aWR0aHdpc2VDb3VudCA9IDEwLFxuICAgICAgZGVwdGh3aXNlQ291bnQgPSA1LFxuICAgICAgY29sb3VyID0gWyAwLjYsIDAuNiwgMC42LCAxMCBdO1xuXG5jb25zdCBPcGVuTWVzaCA9IChwcm9wZXJ0aWVzKSA9PiB7XG4gIGNvbnN0IHsgcG9zaXRpb24sIHdpZHRoLCBkZXB0aCB9ID0gcHJvcGVydGllcyxcbiAgICAgICAgb3ZlcmFsbFdpZHRoID0gd2lkdGgsIC8vL1xuICAgICAgICBvdmVyYWxsRGVwdGggPSBkZXB0aCwgLy8vXG4gICAgICAgIGVsZW1lbnRzID0gW107XG5cbiAgZm9yIChsZXQgaW5kZXggPSAxOyBpbmRleCA8IHdpZHRod2lzZUNvdW50OyBpbmRleCsrKSB7XG4gICAgY29uc3Qgc3RlcCA9IG92ZXJhbGxXaWR0aCAvIHdpZHRod2lzZUNvdW50LFxuICAgICAgICAgIHdpZHRoID0gb3ZlcmFsbFRoaWNrbmVzcywgIC8vL1xuICAgICAgICAgIGhlaWdodCA9IG92ZXJhbGxIZWlnaHQsXG4gICAgICAgICAgZGVwdGggPSBvdmVyYWxsRGVwdGg7XG5cbiAgICBlbGVtZW50cy5wdXNoKFxuXG4gICAgICA8Q29sb3VyZWRDdWJvaWQgY29sb3VyPXtjb2xvdXJ9IHBvc2l0aW9uPXthZGQocG9zaXRpb24sIFsgc3RlcCAqIGluZGV4LCAtaGVpZ2h0LCAwIF0pfSB3aWR0aD17d2lkdGh9IGhlaWdodD17aGVpZ2h0fSBkZXB0aD17ZGVwdGh9IC8+XG5cbiAgICApXG4gIH1cblxuICBmb3IgKGxldCBpbmRleCA9IDE7IGluZGV4IDwgZGVwdGh3aXNlQ291bnQ7IGluZGV4KyspIHtcbiAgICBjb25zdCBzdGVwID0gb3ZlcmFsbERlcHRoIC8gZGVwdGh3aXNlQ291bnQsXG4gICAgICAgICAgZGlhbWV0ZXIgPSBvdmVyYWxsSGVpZ2h0IC8gMiwgLy8vXG4gICAgICAgICAgd2lkdGggPSBkaWFtZXRlciwgLy8vXG4gICAgICAgICAgaGVpZ2h0ID0gZGlhbWV0ZXIsIC8vL1xuICAgICAgICAgIGRlcHRoID0gb3ZlcmFsbFdpZHRoOyAgLy8vXG5cbiAgICBlbGVtZW50cy5wdXNoKFxuXG4gICAgICA8Q29sb3VyZWRDeWxpbmRlciBjb2xvdXI9e2NvbG91cn0gcG9zaXRpb249e2FkZChwb3NpdGlvbiwgWyAwLCAtMypkaWFtZXRlci8yLCBzdGVwICogaW5kZXggXSl9IHdpZHRoPXt3aWR0aH0gaGVpZ2h0PXtoZWlnaHR9IGRlcHRoPXtkZXB0aH0gcm90YXRpb25zPXtbIDAsIDkwLCAwIF19IC8+XG5cbiAgICApXG4gIH1cblxuICByZXR1cm4gZWxlbWVudHM7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9wZW5NZXNoO1xuIl19