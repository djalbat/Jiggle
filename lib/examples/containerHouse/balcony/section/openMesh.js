'use strict';

var vec3 = require('../../../../maths/vec3'),
    ColourCuboid = require('../../../common/cuboid/colour'),
    ColourCylinder = require('../../../common/cylinder/colour');

var add = vec3.add,
    overallHeight = 0.25,
    overallThickness = 0.025,
    widthwiseCount = 10,
    depthwiseCount = 5,
    colour = [0.6, 0.6, 0.6, 10];


var OpenMesh = function OpenMesh(properties) {
      var offset = properties.offset,
          width = properties.width,
          depth = properties.depth,
          overallWidth = width,
          overallDepth = depth,
          elements = [];


      for (var index = 1; index < widthwiseCount; index++) {
            var step = overallWidth / widthwiseCount,
                _width = overallThickness,
                ///
            height = overallHeight,
                _depth = overallDepth;

            elements.push(React.createElement(ColourCuboid, { colour: colour, offset: add(offset, [step * index, -height, 0]), width: _width, height: height, depth: _depth }));
      }

      for (var _index = 1; _index < depthwiseCount; _index++) {
            var _step = overallDepth / depthwiseCount,
                diameter = overallHeight / 2,
                ///
            _width2 = diameter,
                ///
            _height = diameter,
                ///
            _depth2 = overallWidth; ///

            elements.push(React.createElement(ColourCylinder, { colour: colour, offset: add(offset, [0, -3 * diameter / 2, _step * _index]), width: _width2, height: _height, depth: _depth2, rotations: [0, 90, 0] }));
      }

      return elements;
};

module.exports = OpenMesh;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2VzNi9leGFtcGxlcy9jb250YWluZXJIb3VzZS9iYWxjb255L3NlY3Rpb24vb3Blbk1lc2guanMiXSwibmFtZXMiOlsidmVjMyIsInJlcXVpcmUiLCJDb2xvdXJDdWJvaWQiLCJDb2xvdXJDeWxpbmRlciIsImFkZCIsIm92ZXJhbGxIZWlnaHQiLCJvdmVyYWxsVGhpY2tuZXNzIiwid2lkdGh3aXNlQ291bnQiLCJkZXB0aHdpc2VDb3VudCIsImNvbG91ciIsIk9wZW5NZXNoIiwicHJvcGVydGllcyIsIm9mZnNldCIsIndpZHRoIiwiZGVwdGgiLCJvdmVyYWxsV2lkdGgiLCJvdmVyYWxsRGVwdGgiLCJlbGVtZW50cyIsImluZGV4Iiwic3RlcCIsImhlaWdodCIsInB1c2giLCJkaWFtZXRlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLE9BQU9DLFFBQVEsd0JBQVIsQ0FBYjtBQUFBLElBQ01DLGVBQWVELFFBQVEsK0JBQVIsQ0FEckI7QUFBQSxJQUVNRSxpQkFBaUJGLFFBQVEsaUNBQVIsQ0FGdkI7O0FBSU0sSUFBRUcsR0FBRixHQUFVSixJQUFWLENBQUVJLEdBQUY7QUFBQSxJQUNBQyxhQURBLEdBQ2dCLElBRGhCO0FBQUEsSUFFQUMsZ0JBRkEsR0FFbUIsS0FGbkI7QUFBQSxJQUdBQyxjQUhBLEdBR2lCLEVBSGpCO0FBQUEsSUFJQUMsY0FKQSxHQUlpQixDQUpqQjtBQUFBLElBS0FDLE1BTEEsR0FLUyxDQUFFLEdBQUYsRUFBTyxHQUFQLEVBQVksR0FBWixFQUFpQixFQUFqQixDQUxUOzs7QUFPTixJQUFNQyxXQUFXLFNBQVhBLFFBQVcsQ0FBQ0MsVUFBRCxFQUFnQjtBQUFBLFVBQ3ZCQyxNQUR1QixHQUNFRCxVQURGLENBQ3ZCQyxNQUR1QjtBQUFBLFVBQ2ZDLEtBRGUsR0FDRUYsVUFERixDQUNmRSxLQURlO0FBQUEsVUFDUkMsS0FEUSxHQUNFSCxVQURGLENBQ1JHLEtBRFE7QUFBQSxVQUV6QkMsWUFGeUIsR0FFVkYsS0FGVTtBQUFBLFVBR3pCRyxZQUh5QixHQUdWRixLQUhVO0FBQUEsVUFJekJHLFFBSnlCLEdBSWQsRUFKYzs7O0FBTS9CLFdBQUssSUFBSUMsUUFBUSxDQUFqQixFQUFvQkEsUUFBUVgsY0FBNUIsRUFBNENXLE9BQTVDLEVBQXFEO0FBQ25ELGdCQUFNQyxPQUFPSixlQUFlUixjQUE1QjtBQUFBLGdCQUNNTSxTQUFRUCxnQkFEZDtBQUFBLGdCQUNpQztBQUMzQmMscUJBQVNmLGFBRmY7QUFBQSxnQkFHTVMsU0FBUUUsWUFIZDs7QUFLQUMscUJBQVNJLElBQVQsQ0FFRSxvQkFBQyxZQUFELElBQWMsUUFBUVosTUFBdEIsRUFBOEIsUUFBUUwsSUFBSVEsTUFBSixFQUFZLENBQUVPLE9BQU9ELEtBQVQsRUFBZ0IsQ0FBQ0UsTUFBakIsRUFBeUIsQ0FBekIsQ0FBWixDQUF0QyxFQUFpRixPQUFPUCxNQUF4RixFQUErRixRQUFRTyxNQUF2RyxFQUErRyxPQUFPTixNQUF0SCxHQUZGO0FBS0Q7O0FBRUQsV0FBSyxJQUFJSSxTQUFRLENBQWpCLEVBQW9CQSxTQUFRVixjQUE1QixFQUE0Q1UsUUFBNUMsRUFBcUQ7QUFDbkQsZ0JBQU1DLFFBQU9ILGVBQWVSLGNBQTVCO0FBQUEsZ0JBQ01jLFdBQVdqQixnQkFBZ0IsQ0FEakM7QUFBQSxnQkFDb0M7QUFDOUJRLHNCQUFRUyxRQUZkO0FBQUEsZ0JBRXdCO0FBQ2xCRixzQkFBU0UsUUFIZjtBQUFBLGdCQUd5QjtBQUNuQlIsc0JBQVFDLFlBSmQsQ0FEbUQsQ0FLdEI7O0FBRTdCRSxxQkFBU0ksSUFBVCxDQUVFLG9CQUFDLGNBQUQsSUFBZ0IsUUFBUVosTUFBeEIsRUFBZ0MsUUFBUUwsSUFBSVEsTUFBSixFQUFZLENBQUUsQ0FBRixFQUFLLENBQUMsQ0FBRCxHQUFHVSxRQUFILEdBQVksQ0FBakIsRUFBb0JILFFBQU9ELE1BQTNCLENBQVosQ0FBeEMsRUFBeUYsT0FBT0wsT0FBaEcsRUFBdUcsUUFBUU8sT0FBL0csRUFBdUgsT0FBT04sT0FBOUgsRUFBcUksV0FBVyxDQUFFLENBQUYsRUFBSyxFQUFMLEVBQVMsQ0FBVCxDQUFoSixHQUZGO0FBS0Q7O0FBRUQsYUFBT0csUUFBUDtBQUNELENBbENEOztBQW9DQU0sT0FBT0MsT0FBUCxHQUFpQmQsUUFBakIiLCJmaWxlIjoib3Blbk1lc2guanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHZlYzMgPSByZXF1aXJlKCcuLi8uLi8uLi8uLi9tYXRocy92ZWMzJyksXG4gICAgICBDb2xvdXJDdWJvaWQgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21tb24vY3Vib2lkL2NvbG91cicpLFxuICAgICAgQ29sb3VyQ3lsaW5kZXIgPSByZXF1aXJlKCcuLi8uLi8uLi9jb21tb24vY3lsaW5kZXIvY29sb3VyJyk7XG5cbmNvbnN0IHsgYWRkIH0gPSB2ZWMzLFxuICAgICAgb3ZlcmFsbEhlaWdodCA9IDAuMjUsXG4gICAgICBvdmVyYWxsVGhpY2tuZXNzID0gMC4wMjUsXG4gICAgICB3aWR0aHdpc2VDb3VudCA9IDEwLFxuICAgICAgZGVwdGh3aXNlQ291bnQgPSA1LFxuICAgICAgY29sb3VyID0gWyAwLjYsIDAuNiwgMC42LCAxMCBdO1xuXG5jb25zdCBPcGVuTWVzaCA9IChwcm9wZXJ0aWVzKSA9PiB7XG4gIGNvbnN0IHsgb2Zmc2V0LCB3aWR0aCwgZGVwdGggfSA9IHByb3BlcnRpZXMsXG4gICAgICAgIG92ZXJhbGxXaWR0aCA9IHdpZHRoLCAvLy9cbiAgICAgICAgb3ZlcmFsbERlcHRoID0gZGVwdGgsIC8vL1xuICAgICAgICBlbGVtZW50cyA9IFtdO1xuXG4gIGZvciAobGV0IGluZGV4ID0gMTsgaW5kZXggPCB3aWR0aHdpc2VDb3VudDsgaW5kZXgrKykge1xuICAgIGNvbnN0IHN0ZXAgPSBvdmVyYWxsV2lkdGggLyB3aWR0aHdpc2VDb3VudCxcbiAgICAgICAgICB3aWR0aCA9IG92ZXJhbGxUaGlja25lc3MsICAvLy9cbiAgICAgICAgICBoZWlnaHQgPSBvdmVyYWxsSGVpZ2h0LFxuICAgICAgICAgIGRlcHRoID0gb3ZlcmFsbERlcHRoO1xuXG4gICAgZWxlbWVudHMucHVzaChcblxuICAgICAgPENvbG91ckN1Ym9pZCBjb2xvdXI9e2NvbG91cn0gb2Zmc2V0PXthZGQob2Zmc2V0LCBbIHN0ZXAgKiBpbmRleCwgLWhlaWdodCwgMCBdKX0gd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0gZGVwdGg9e2RlcHRofSAvPlxuXG4gICAgKVxuICB9XG5cbiAgZm9yIChsZXQgaW5kZXggPSAxOyBpbmRleCA8IGRlcHRod2lzZUNvdW50OyBpbmRleCsrKSB7XG4gICAgY29uc3Qgc3RlcCA9IG92ZXJhbGxEZXB0aCAvIGRlcHRod2lzZUNvdW50LFxuICAgICAgICAgIGRpYW1ldGVyID0gb3ZlcmFsbEhlaWdodCAvIDIsIC8vL1xuICAgICAgICAgIHdpZHRoID0gZGlhbWV0ZXIsIC8vL1xuICAgICAgICAgIGhlaWdodCA9IGRpYW1ldGVyLCAvLy9cbiAgICAgICAgICBkZXB0aCA9IG92ZXJhbGxXaWR0aDsgIC8vL1xuXG4gICAgZWxlbWVudHMucHVzaChcblxuICAgICAgPENvbG91ckN5bGluZGVyIGNvbG91cj17Y29sb3VyfSBvZmZzZXQ9e2FkZChvZmZzZXQsIFsgMCwgLTMqZGlhbWV0ZXIvMiwgc3RlcCAqIGluZGV4IF0pfSB3aWR0aD17d2lkdGh9IGhlaWdodD17aGVpZ2h0fSBkZXB0aD17ZGVwdGh9IHJvdGF0aW9ucz17WyAwLCA5MCwgMCBdfSAvPlxuXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIGVsZW1lbnRzO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBPcGVuTWVzaDtcbiJdfQ==