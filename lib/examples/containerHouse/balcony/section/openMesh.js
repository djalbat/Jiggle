'use strict';

var vec3 = require('../../../../gl/vec3'),
    ColourCuboid = require('../../../common/cuboid/colour'),
    ColourCylinder = require('../../../common/cylinder/colour');

var add = vec3.add,
    overallHeight = 0.25,
    overallThickness = 0.025,
    widthwiseCount = 10,
    depthwiseCount = 5,
    colour = [0.6, 0.6, 0.6, 10];


var OpenMesh = function OpenMesh(properties) {
      var offset = properties.offset,
          width = properties.width,
          depth = properties.depth,
          overallWidth = width,
          overallDepth = depth,
          elements = [];


      for (var index = 1; index < widthwiseCount; index++) {
            var step = overallWidth / widthwiseCount,
                _width = overallThickness,
                ///
            _depth = overallDepth,
                height = overallHeight;

            elements.push(React.createElement(ColourCuboid, { colour: colour, offset: add(offset, [step * index, 0, -height]), width: _width, depth: _depth, height: height }));
      }

      for (var _index = 1; _index < depthwiseCount; _index++) {
            var _step = overallDepth / depthwiseCount,
                diameter = overallHeight / 2,
                ///
            _width2 = diameter,
                ///
            _depth2 = diameter,
                ///
            _height = overallWidth; ///

            elements.push(React.createElement(ColourCylinder, { colour: colour, offset: add(offset, [0, _step * _index, -diameter / 2]), width: _width2, depth: _depth2, height: _height, rotation: [0, 90, 0] }));
      }

      return elements;
};

module.exports = OpenMesh;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2VzNi9leGFtcGxlcy9jb250YWluZXJIb3VzZS9iYWxjb255L3NlY3Rpb24vb3Blbk1lc2guanMiXSwibmFtZXMiOlsidmVjMyIsInJlcXVpcmUiLCJDb2xvdXJDdWJvaWQiLCJDb2xvdXJDeWxpbmRlciIsImFkZCIsIm92ZXJhbGxIZWlnaHQiLCJvdmVyYWxsVGhpY2tuZXNzIiwid2lkdGh3aXNlQ291bnQiLCJkZXB0aHdpc2VDb3VudCIsImNvbG91ciIsIk9wZW5NZXNoIiwicHJvcGVydGllcyIsIm9mZnNldCIsIndpZHRoIiwiZGVwdGgiLCJvdmVyYWxsV2lkdGgiLCJvdmVyYWxsRGVwdGgiLCJlbGVtZW50cyIsImluZGV4Iiwic3RlcCIsImhlaWdodCIsInB1c2giLCJkaWFtZXRlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLE9BQU9DLFFBQVEscUJBQVIsQ0FBYjtBQUFBLElBQ01DLGVBQWVELFFBQVEsK0JBQVIsQ0FEckI7QUFBQSxJQUVNRSxpQkFBaUJGLFFBQVEsaUNBQVIsQ0FGdkI7O0FBSU0sSUFBRUcsR0FBRixHQUFVSixJQUFWLENBQUVJLEdBQUY7QUFBQSxJQUNBQyxhQURBLEdBQ2dCLElBRGhCO0FBQUEsSUFFQUMsZ0JBRkEsR0FFbUIsS0FGbkI7QUFBQSxJQUdBQyxjQUhBLEdBR2lCLEVBSGpCO0FBQUEsSUFJQUMsY0FKQSxHQUlpQixDQUpqQjtBQUFBLElBS0FDLE1BTEEsR0FLUyxDQUFFLEdBQUYsRUFBTyxHQUFQLEVBQVksR0FBWixFQUFpQixFQUFqQixDQUxUOzs7QUFPTixJQUFNQyxXQUFXLFNBQVhBLFFBQVcsQ0FBQ0MsVUFBRCxFQUFnQjtBQUFBLFVBQ3ZCQyxNQUR1QixHQUNFRCxVQURGLENBQ3ZCQyxNQUR1QjtBQUFBLFVBQ2ZDLEtBRGUsR0FDRUYsVUFERixDQUNmRSxLQURlO0FBQUEsVUFDUkMsS0FEUSxHQUNFSCxVQURGLENBQ1JHLEtBRFE7QUFBQSxVQUV6QkMsWUFGeUIsR0FFVkYsS0FGVTtBQUFBLFVBR3pCRyxZQUh5QixHQUdWRixLQUhVO0FBQUEsVUFJekJHLFFBSnlCLEdBSWQsRUFKYzs7O0FBTS9CLFdBQUssSUFBSUMsUUFBUSxDQUFqQixFQUFvQkEsUUFBUVgsY0FBNUIsRUFBNENXLE9BQTVDLEVBQXFEO0FBQ25ELGdCQUFNQyxPQUFPSixlQUFlUixjQUE1QjtBQUFBLGdCQUNNTSxTQUFRUCxnQkFEZDtBQUFBLGdCQUNpQztBQUMzQlEscUJBQVFFLFlBRmQ7QUFBQSxnQkFHTUksU0FBU2YsYUFIZjs7QUFLQVkscUJBQVNJLElBQVQsQ0FFRSxvQkFBQyxZQUFELElBQWMsUUFBUVosTUFBdEIsRUFBOEIsUUFBUUwsSUFBSVEsTUFBSixFQUFZLENBQUVPLE9BQU9ELEtBQVQsRUFBZ0IsQ0FBaEIsRUFBbUIsQ0FBQ0UsTUFBcEIsQ0FBWixDQUF0QyxFQUFpRixPQUFPUCxNQUF4RixFQUErRixPQUFPQyxNQUF0RyxFQUE2RyxRQUFRTSxNQUFySCxHQUZGO0FBS0Q7O0FBRUQsV0FBSyxJQUFJRixTQUFRLENBQWpCLEVBQW9CQSxTQUFRVixjQUE1QixFQUE0Q1UsUUFBNUMsRUFBcUQ7QUFDbkQsZ0JBQU1DLFFBQU9ILGVBQWVSLGNBQTVCO0FBQUEsZ0JBQ01jLFdBQVdqQixnQkFBZ0IsQ0FEakM7QUFBQSxnQkFDb0M7QUFDOUJRLHNCQUFRUyxRQUZkO0FBQUEsZ0JBRXdCO0FBQ2xCUixzQkFBUVEsUUFIZDtBQUFBLGdCQUd3QjtBQUNsQkYsc0JBQVNMLFlBSmYsQ0FEbUQsQ0FLckI7O0FBRTlCRSxxQkFBU0ksSUFBVCxDQUVFLG9CQUFDLGNBQUQsSUFBZ0IsUUFBUVosTUFBeEIsRUFBZ0MsUUFBUUwsSUFBSVEsTUFBSixFQUFZLENBQUUsQ0FBRixFQUFLTyxRQUFPRCxNQUFaLEVBQW1CLENBQUNJLFFBQUQsR0FBVSxDQUE3QixDQUFaLENBQXhDLEVBQXVGLE9BQU9ULE9BQTlGLEVBQXFHLE9BQU9DLE9BQTVHLEVBQW1ILFFBQVFNLE9BQTNILEVBQW1JLFVBQVUsQ0FBRSxDQUFGLEVBQUssRUFBTCxFQUFTLENBQVQsQ0FBN0ksR0FGRjtBQUtEOztBQUVELGFBQU9ILFFBQVA7QUFDRCxDQWxDRDs7QUFvQ0FNLE9BQU9DLE9BQVAsR0FBaUJkLFFBQWpCIiwiZmlsZSI6Im9wZW5NZXNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB2ZWMzID0gcmVxdWlyZSgnLi4vLi4vLi4vLi4vZ2wvdmVjMycpLFxuICAgICAgQ29sb3VyQ3Vib2lkID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tbW9uL2N1Ym9pZC9jb2xvdXInKSxcbiAgICAgIENvbG91ckN5bGluZGVyID0gcmVxdWlyZSgnLi4vLi4vLi4vY29tbW9uL2N5bGluZGVyL2NvbG91cicpO1xuXG5jb25zdCB7IGFkZCB9ID0gdmVjMyxcbiAgICAgIG92ZXJhbGxIZWlnaHQgPSAwLjI1LFxuICAgICAgb3ZlcmFsbFRoaWNrbmVzcyA9IDAuMDI1LFxuICAgICAgd2lkdGh3aXNlQ291bnQgPSAxMCxcbiAgICAgIGRlcHRod2lzZUNvdW50ID0gNSxcbiAgICAgIGNvbG91ciA9IFsgMC42LCAwLjYsIDAuNiwgMTAgXTtcblxuY29uc3QgT3Blbk1lc2ggPSAocHJvcGVydGllcykgPT4ge1xuICBjb25zdCB7IG9mZnNldCwgd2lkdGgsIGRlcHRoIH0gPSBwcm9wZXJ0aWVzLFxuICAgICAgICBvdmVyYWxsV2lkdGggPSB3aWR0aCwgLy8vXG4gICAgICAgIG92ZXJhbGxEZXB0aCA9IGRlcHRoLCAvLy9cbiAgICAgICAgZWxlbWVudHMgPSBbXTtcblxuICBmb3IgKGxldCBpbmRleCA9IDE7IGluZGV4IDwgd2lkdGh3aXNlQ291bnQ7IGluZGV4KyspIHtcbiAgICBjb25zdCBzdGVwID0gb3ZlcmFsbFdpZHRoIC8gd2lkdGh3aXNlQ291bnQsXG4gICAgICAgICAgd2lkdGggPSBvdmVyYWxsVGhpY2tuZXNzLCAgLy8vXG4gICAgICAgICAgZGVwdGggPSBvdmVyYWxsRGVwdGgsXG4gICAgICAgICAgaGVpZ2h0ID0gb3ZlcmFsbEhlaWdodDtcblxuICAgIGVsZW1lbnRzLnB1c2goXG5cbiAgICAgIDxDb2xvdXJDdWJvaWQgY29sb3VyPXtjb2xvdXJ9IG9mZnNldD17YWRkKG9mZnNldCwgWyBzdGVwICogaW5kZXgsIDAsIC1oZWlnaHQgXSl9IHdpZHRoPXt3aWR0aH0gZGVwdGg9e2RlcHRofSBoZWlnaHQ9e2hlaWdodH0gLz5cblxuICAgIClcbiAgfVxuXG4gIGZvciAobGV0IGluZGV4ID0gMTsgaW5kZXggPCBkZXB0aHdpc2VDb3VudDsgaW5kZXgrKykge1xuICAgIGNvbnN0IHN0ZXAgPSBvdmVyYWxsRGVwdGggLyBkZXB0aHdpc2VDb3VudCxcbiAgICAgICAgICBkaWFtZXRlciA9IG92ZXJhbGxIZWlnaHQgLyAyLCAvLy9cbiAgICAgICAgICB3aWR0aCA9IGRpYW1ldGVyLCAvLy9cbiAgICAgICAgICBkZXB0aCA9IGRpYW1ldGVyLCAvLy9cbiAgICAgICAgICBoZWlnaHQgPSBvdmVyYWxsV2lkdGg7ICAvLy9cblxuICAgIGVsZW1lbnRzLnB1c2goXG5cbiAgICAgIDxDb2xvdXJDeWxpbmRlciBjb2xvdXI9e2NvbG91cn0gb2Zmc2V0PXthZGQob2Zmc2V0LCBbIDAsIHN0ZXAgKiBpbmRleCwgLWRpYW1ldGVyLzIgXSl9IHdpZHRoPXt3aWR0aH0gZGVwdGg9e2RlcHRofSBoZWlnaHQ9e2hlaWdodH0gcm90YXRpb249e1sgMCwgOTAsIDAgXX0gLz5cblxuICAgIClcbiAgfVxuXG4gIHJldHVybiBlbGVtZW50cztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gT3Blbk1lc2g7XG4iXX0=