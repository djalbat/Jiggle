'use strict';

var vec3 = require('../../../../maths/vec3'),
    ColourCuboid = require('../../../common/cuboid/colour'),
    ColourCylinder = require('../../../common/cylinder/colour');

var add = vec3.add,
    overallHeight = 0.25,
    overallThickness = 0.025,
    widthwiseCount = 10,
    depthwiseCount = 5,
    colour = [0.6, 0.6, 0.6, 10];


var OpenMesh = function OpenMesh(properties) {
      var position = properties.position,
          width = properties.width,
          depth = properties.depth,
          overallWidth = width,
          overallDepth = depth,
          elements = [];


      for (var index = 1; index < widthwiseCount; index++) {
            var step = overallWidth / widthwiseCount,
                _width = overallThickness,
                ///
            height = overallHeight,
                _depth = overallDepth;

            elements.push(React.createElement(ColourCuboid, { colour: colour, position: add(position, [step * index, -height, 0]), width: _width, height: height, depth: _depth }));
      }

      for (var _index = 1; _index < depthwiseCount; _index++) {
            var _step = overallDepth / depthwiseCount,
                diameter = overallHeight / 2,
                ///
            _width2 = diameter,
                ///
            _height = diameter,
                ///
            _depth2 = overallWidth; ///

            elements.push(React.createElement(ColourCylinder, { colour: colour, position: add(position, [0, -3 * diameter / 2, _step * _index]), width: _width2, height: _height, depth: _depth2, rotations: [0, 90, 0] }));
      }

      return elements;
};

module.exports = OpenMesh;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2VzNi9leGFtcGxlcy9jb250YWluZXJIb3VzZS9iYWxjb255L3NlY3Rpb24vb3Blbk1lc2guanMiXSwibmFtZXMiOlsidmVjMyIsInJlcXVpcmUiLCJDb2xvdXJDdWJvaWQiLCJDb2xvdXJDeWxpbmRlciIsImFkZCIsIm92ZXJhbGxIZWlnaHQiLCJvdmVyYWxsVGhpY2tuZXNzIiwid2lkdGh3aXNlQ291bnQiLCJkZXB0aHdpc2VDb3VudCIsImNvbG91ciIsIk9wZW5NZXNoIiwicHJvcGVydGllcyIsInBvc2l0aW9uIiwid2lkdGgiLCJkZXB0aCIsIm92ZXJhbGxXaWR0aCIsIm92ZXJhbGxEZXB0aCIsImVsZW1lbnRzIiwiaW5kZXgiLCJzdGVwIiwiaGVpZ2h0IiwicHVzaCIsImRpYW1ldGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsT0FBT0MsUUFBUSx3QkFBUixDQUFiO0FBQUEsSUFDTUMsZUFBZUQsUUFBUSwrQkFBUixDQURyQjtBQUFBLElBRU1FLGlCQUFpQkYsUUFBUSxpQ0FBUixDQUZ2Qjs7QUFJTSxJQUFFRyxHQUFGLEdBQVVKLElBQVYsQ0FBRUksR0FBRjtBQUFBLElBQ0FDLGFBREEsR0FDZ0IsSUFEaEI7QUFBQSxJQUVBQyxnQkFGQSxHQUVtQixLQUZuQjtBQUFBLElBR0FDLGNBSEEsR0FHaUIsRUFIakI7QUFBQSxJQUlBQyxjQUpBLEdBSWlCLENBSmpCO0FBQUEsSUFLQUMsTUFMQSxHQUtTLENBQUUsR0FBRixFQUFPLEdBQVAsRUFBWSxHQUFaLEVBQWlCLEVBQWpCLENBTFQ7OztBQU9OLElBQU1DLFdBQVcsU0FBWEEsUUFBVyxDQUFDQyxVQUFELEVBQWdCO0FBQUEsVUFDdkJDLFFBRHVCLEdBQ0lELFVBREosQ0FDdkJDLFFBRHVCO0FBQUEsVUFDYkMsS0FEYSxHQUNJRixVQURKLENBQ2JFLEtBRGE7QUFBQSxVQUNOQyxLQURNLEdBQ0lILFVBREosQ0FDTkcsS0FETTtBQUFBLFVBRXpCQyxZQUZ5QixHQUVWRixLQUZVO0FBQUEsVUFHekJHLFlBSHlCLEdBR1ZGLEtBSFU7QUFBQSxVQUl6QkcsUUFKeUIsR0FJZCxFQUpjOzs7QUFNL0IsV0FBSyxJQUFJQyxRQUFRLENBQWpCLEVBQW9CQSxRQUFRWCxjQUE1QixFQUE0Q1csT0FBNUMsRUFBcUQ7QUFDbkQsZ0JBQU1DLE9BQU9KLGVBQWVSLGNBQTVCO0FBQUEsZ0JBQ01NLFNBQVFQLGdCQURkO0FBQUEsZ0JBQ2lDO0FBQzNCYyxxQkFBU2YsYUFGZjtBQUFBLGdCQUdNUyxTQUFRRSxZQUhkOztBQUtBQyxxQkFBU0ksSUFBVCxDQUVFLG9CQUFDLFlBQUQsSUFBYyxRQUFRWixNQUF0QixFQUE4QixVQUFVTCxJQUFJUSxRQUFKLEVBQWMsQ0FBRU8sT0FBT0QsS0FBVCxFQUFnQixDQUFDRSxNQUFqQixFQUF5QixDQUF6QixDQUFkLENBQXhDLEVBQXFGLE9BQU9QLE1BQTVGLEVBQW1HLFFBQVFPLE1BQTNHLEVBQW1ILE9BQU9OLE1BQTFILEdBRkY7QUFLRDs7QUFFRCxXQUFLLElBQUlJLFNBQVEsQ0FBakIsRUFBb0JBLFNBQVFWLGNBQTVCLEVBQTRDVSxRQUE1QyxFQUFxRDtBQUNuRCxnQkFBTUMsUUFBT0gsZUFBZVIsY0FBNUI7QUFBQSxnQkFDTWMsV0FBV2pCLGdCQUFnQixDQURqQztBQUFBLGdCQUNvQztBQUM5QlEsc0JBQVFTLFFBRmQ7QUFBQSxnQkFFd0I7QUFDbEJGLHNCQUFTRSxRQUhmO0FBQUEsZ0JBR3lCO0FBQ25CUixzQkFBUUMsWUFKZCxDQURtRCxDQUt0Qjs7QUFFN0JFLHFCQUFTSSxJQUFULENBRUUsb0JBQUMsY0FBRCxJQUFnQixRQUFRWixNQUF4QixFQUFnQyxVQUFVTCxJQUFJUSxRQUFKLEVBQWMsQ0FBRSxDQUFGLEVBQUssQ0FBQyxDQUFELEdBQUdVLFFBQUgsR0FBWSxDQUFqQixFQUFvQkgsUUFBT0QsTUFBM0IsQ0FBZCxDQUExQyxFQUE2RixPQUFPTCxPQUFwRyxFQUEyRyxRQUFRTyxPQUFuSCxFQUEySCxPQUFPTixPQUFsSSxFQUF5SSxXQUFXLENBQUUsQ0FBRixFQUFLLEVBQUwsRUFBUyxDQUFULENBQXBKLEdBRkY7QUFLRDs7QUFFRCxhQUFPRyxRQUFQO0FBQ0QsQ0FsQ0Q7O0FBb0NBTSxPQUFPQyxPQUFQLEdBQWlCZCxRQUFqQiIsImZpbGUiOiJvcGVuTWVzaC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdmVjMyA9IHJlcXVpcmUoJy4uLy4uLy4uLy4uL21hdGhzL3ZlYzMnKSxcbiAgICAgIENvbG91ckN1Ym9pZCA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbW1vbi9jdWJvaWQvY29sb3VyJyksXG4gICAgICBDb2xvdXJDeWxpbmRlciA9IHJlcXVpcmUoJy4uLy4uLy4uL2NvbW1vbi9jeWxpbmRlci9jb2xvdXInKTtcblxuY29uc3QgeyBhZGQgfSA9IHZlYzMsXG4gICAgICBvdmVyYWxsSGVpZ2h0ID0gMC4yNSxcbiAgICAgIG92ZXJhbGxUaGlja25lc3MgPSAwLjAyNSxcbiAgICAgIHdpZHRod2lzZUNvdW50ID0gMTAsXG4gICAgICBkZXB0aHdpc2VDb3VudCA9IDUsXG4gICAgICBjb2xvdXIgPSBbIDAuNiwgMC42LCAwLjYsIDEwIF07XG5cbmNvbnN0IE9wZW5NZXNoID0gKHByb3BlcnRpZXMpID0+IHtcbiAgY29uc3QgeyBwb3NpdGlvbiwgd2lkdGgsIGRlcHRoIH0gPSBwcm9wZXJ0aWVzLFxuICAgICAgICBvdmVyYWxsV2lkdGggPSB3aWR0aCwgLy8vXG4gICAgICAgIG92ZXJhbGxEZXB0aCA9IGRlcHRoLCAvLy9cbiAgICAgICAgZWxlbWVudHMgPSBbXTtcblxuICBmb3IgKGxldCBpbmRleCA9IDE7IGluZGV4IDwgd2lkdGh3aXNlQ291bnQ7IGluZGV4KyspIHtcbiAgICBjb25zdCBzdGVwID0gb3ZlcmFsbFdpZHRoIC8gd2lkdGh3aXNlQ291bnQsXG4gICAgICAgICAgd2lkdGggPSBvdmVyYWxsVGhpY2tuZXNzLCAgLy8vXG4gICAgICAgICAgaGVpZ2h0ID0gb3ZlcmFsbEhlaWdodCxcbiAgICAgICAgICBkZXB0aCA9IG92ZXJhbGxEZXB0aDtcblxuICAgIGVsZW1lbnRzLnB1c2goXG5cbiAgICAgIDxDb2xvdXJDdWJvaWQgY29sb3VyPXtjb2xvdXJ9IHBvc2l0aW9uPXthZGQocG9zaXRpb24sIFsgc3RlcCAqIGluZGV4LCAtaGVpZ2h0LCAwIF0pfSB3aWR0aD17d2lkdGh9IGhlaWdodD17aGVpZ2h0fSBkZXB0aD17ZGVwdGh9IC8+XG5cbiAgICApXG4gIH1cblxuICBmb3IgKGxldCBpbmRleCA9IDE7IGluZGV4IDwgZGVwdGh3aXNlQ291bnQ7IGluZGV4KyspIHtcbiAgICBjb25zdCBzdGVwID0gb3ZlcmFsbERlcHRoIC8gZGVwdGh3aXNlQ291bnQsXG4gICAgICAgICAgZGlhbWV0ZXIgPSBvdmVyYWxsSGVpZ2h0IC8gMiwgLy8vXG4gICAgICAgICAgd2lkdGggPSBkaWFtZXRlciwgLy8vXG4gICAgICAgICAgaGVpZ2h0ID0gZGlhbWV0ZXIsIC8vL1xuICAgICAgICAgIGRlcHRoID0gb3ZlcmFsbFdpZHRoOyAgLy8vXG5cbiAgICBlbGVtZW50cy5wdXNoKFxuXG4gICAgICA8Q29sb3VyQ3lsaW5kZXIgY29sb3VyPXtjb2xvdXJ9IHBvc2l0aW9uPXthZGQocG9zaXRpb24sIFsgMCwgLTMqZGlhbWV0ZXIvMiwgc3RlcCAqIGluZGV4IF0pfSB3aWR0aD17d2lkdGh9IGhlaWdodD17aGVpZ2h0fSBkZXB0aD17ZGVwdGh9IHJvdGF0aW9ucz17WyAwLCA5MCwgMCBdfSAvPlxuXG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIGVsZW1lbnRzO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBPcGVuTWVzaDtcbiJdfQ==