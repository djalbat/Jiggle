'use strict';

require('../jiggle');

var Canvas = require('../canvas'),
    Mask = require('../element/mask'),
    Scene = require('../element/scene'),
    Camera = require('../element/camera'),
    ColouredCuboid = require('./common/coloured/cuboid'),
    imageMapUtilities = require('../utilities/imageMap');

var preloadImageMap = imageMapUtilities.preloadImageMap;


var masking = function masking() {
  var canvas = new Canvas();

  preloadImageMap(function (imageMap) {
    return React.createElement(
      Scene,
      { imageMap: imageMap, canvas: canvas },
      React.createElement(Camera, { initialDistance: 5, initialOffset: [0, 0, 0], canvas: canvas }),
      React.createElement(
        ColouredCuboid,
        { colour: [1, 1, 0, 1], position: [-0.5, -0.5, -0.5] },
        React.createElement(
          Mask,
          null,
          React.createElement(
            ColouredCuboid,
            { colour: [1, 1, 0, 1], width: 0.5, height: 0.5, depth: 0.5, position: [0.25, 0.25, 0.25] },
            React.createElement(
              Mask,
              null,
              React.createElement(ColouredCuboid, { colour: [1, 1, 0, 1], width: 0.5, height: 0.5, depth: 0.5, position: [0.25, 0.25, 0.25] })
            )
          )
        )
      )
    );
  });
};

module.exports = masking;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9leGFtcGxlcy9tYXNraW5nLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJDYW52YXMiLCJNYXNrIiwiU2NlbmUiLCJDYW1lcmEiLCJDb2xvdXJlZEN1Ym9pZCIsImltYWdlTWFwVXRpbGl0aWVzIiwicHJlbG9hZEltYWdlTWFwIiwibWFza2luZyIsImNhbnZhcyIsImltYWdlTWFwIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLFFBQVEsV0FBUjs7QUFFQSxJQUFNQyxTQUFTRCxRQUFRLFdBQVIsQ0FBZjtBQUFBLElBQ01FLE9BQU9GLFFBQVEsaUJBQVIsQ0FEYjtBQUFBLElBRU1HLFFBQVFILFFBQVEsa0JBQVIsQ0FGZDtBQUFBLElBR01JLFNBQVNKLFFBQVEsbUJBQVIsQ0FIZjtBQUFBLElBSU1LLGlCQUFpQkwsUUFBUSwwQkFBUixDQUp2QjtBQUFBLElBS01NLG9CQUFvQk4sUUFBUSx1QkFBUixDQUwxQjs7SUFPUU8sZSxHQUFvQkQsaUIsQ0FBcEJDLGU7OztBQUVSLElBQU1DLFVBQVUsU0FBVkEsT0FBVSxHQUFNO0FBQ3BCLE1BQU1DLFNBQVMsSUFBSVIsTUFBSixFQUFmOztBQUVBTSxrQkFBZ0IsVUFBQ0csUUFBRDtBQUFBLFdBRWQ7QUFBQyxXQUFEO0FBQUEsUUFBTyxVQUFVQSxRQUFqQixFQUEyQixRQUFRRCxNQUFuQztBQUNFLDBCQUFDLE1BQUQsSUFBUSxpQkFBaUIsQ0FBekIsRUFBNEIsZUFBZSxDQUFFLENBQUYsRUFBSyxDQUFMLEVBQVEsQ0FBUixDQUEzQyxFQUF3RCxRQUFRQSxNQUFoRSxHQURGO0FBRUU7QUFBQyxzQkFBRDtBQUFBLFVBQWdCLFFBQVEsQ0FBRSxDQUFGLEVBQUssQ0FBTCxFQUFRLENBQVIsRUFBVyxDQUFYLENBQXhCLEVBQXdDLFVBQVUsQ0FBRSxDQUFDLEdBQUgsRUFBUSxDQUFDLEdBQVQsRUFBYyxDQUFDLEdBQWYsQ0FBbEQ7QUFDRTtBQUFDLGNBQUQ7QUFBQTtBQUNFO0FBQUMsMEJBQUQ7QUFBQSxjQUFnQixRQUFRLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFSLEVBQVcsQ0FBWCxDQUF4QixFQUF3QyxPQUFPLEdBQS9DLEVBQW9ELFFBQVEsR0FBNUQsRUFBaUUsT0FBTyxHQUF4RSxFQUE2RSxVQUFVLENBQUUsSUFBRixFQUFRLElBQVIsRUFBYyxJQUFkLENBQXZGO0FBQ0U7QUFBQyxrQkFBRDtBQUFBO0FBQ0Usa0NBQUMsY0FBRCxJQUFnQixRQUFRLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFSLEVBQVcsQ0FBWCxDQUF4QixFQUF3QyxPQUFPLEdBQS9DLEVBQW9ELFFBQVEsR0FBNUQsRUFBaUUsT0FBTyxHQUF4RSxFQUE2RSxVQUFVLENBQUUsSUFBRixFQUFRLElBQVIsRUFBYyxJQUFkLENBQXZGO0FBREY7QUFERjtBQURGO0FBREY7QUFGRixLQUZjO0FBQUEsR0FBaEI7QUFnQkQsQ0FuQkQ7O0FBcUJBRSxPQUFPQyxPQUFQLEdBQWlCSixPQUFqQiIsImZpbGUiOiJtYXNraW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5yZXF1aXJlKCcuLi9qaWdnbGUnKTtcblxuY29uc3QgQ2FudmFzID0gcmVxdWlyZSgnLi4vY2FudmFzJyksXG4gICAgICBNYXNrID0gcmVxdWlyZSgnLi4vZWxlbWVudC9tYXNrJyksXG4gICAgICBTY2VuZSA9IHJlcXVpcmUoJy4uL2VsZW1lbnQvc2NlbmUnKSxcbiAgICAgIENhbWVyYSA9IHJlcXVpcmUoJy4uL2VsZW1lbnQvY2FtZXJhJyksXG4gICAgICBDb2xvdXJlZEN1Ym9pZCA9IHJlcXVpcmUoJy4vY29tbW9uL2NvbG91cmVkL2N1Ym9pZCcpLFxuICAgICAgaW1hZ2VNYXBVdGlsaXRpZXMgPSByZXF1aXJlKCcuLi91dGlsaXRpZXMvaW1hZ2VNYXAnKTtcblxuY29uc3QgeyBwcmVsb2FkSW1hZ2VNYXAgfSA9IGltYWdlTWFwVXRpbGl0aWVzO1xuXG5jb25zdCBtYXNraW5nID0gKCkgPT4ge1xuICBjb25zdCBjYW52YXMgPSBuZXcgQ2FudmFzKCk7XG5cbiAgcHJlbG9hZEltYWdlTWFwKChpbWFnZU1hcCkgPT5cblxuICAgIDxTY2VuZSBpbWFnZU1hcD17aW1hZ2VNYXB9IGNhbnZhcz17Y2FudmFzfT5cbiAgICAgIDxDYW1lcmEgaW5pdGlhbERpc3RhbmNlPXs1fSBpbml0aWFsT2Zmc2V0PXtbIDAsIDAsIDAgXX0gY2FudmFzPXtjYW52YXN9IC8+XG4gICAgICA8Q29sb3VyZWRDdWJvaWQgY29sb3VyPXtbIDEsIDEsIDAsIDEgXX0gcG9zaXRpb249e1sgLTAuNSwgLTAuNSwgLTAuNSBdfT5cbiAgICAgICAgPE1hc2s+XG4gICAgICAgICAgPENvbG91cmVkQ3Vib2lkIGNvbG91cj17WyAxLCAxLCAwLCAxIF19IHdpZHRoPXswLjV9IGhlaWdodD17MC41fSBkZXB0aD17MC41fSBwb3NpdGlvbj17WyAwLjI1LCAwLjI1LCAwLjI1IF19PlxuICAgICAgICAgICAgPE1hc2s+XG4gICAgICAgICAgICAgIDxDb2xvdXJlZEN1Ym9pZCBjb2xvdXI9e1sgMSwgMSwgMCwgMSBdfSB3aWR0aD17MC41fSBoZWlnaHQ9ezAuNX0gZGVwdGg9ezAuNX0gcG9zaXRpb249e1sgMC4yNSwgMC4yNSwgMC4yNSBdfSAvPlxuICAgICAgICAgICAgPC9NYXNrPlxuICAgICAgICAgIDwvQ29sb3VyZWRDdWJvaWQ+XG4gICAgICAgIDwvTWFzaz5cbiAgICAgIDwvQ29sb3VyZWRDdWJvaWQ+XG4gICAgPC9TY2VuZT5cblxuICApO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBtYXNraW5nO1xuIl19