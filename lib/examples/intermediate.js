'use strict';

var necessary = require('necessary');

var Canvas = require('../canvas'),
    Normal = require('../normal'),
    Rotation = require('../rotation'),
    Position = require('../position'),
    Perspective = require('../perspective'),
    colourCube = require('./intermediate/colourCube'),
    textureCube = require('./intermediate/textureCube');

var arrayUtilities = necessary.arrayUtilities,
    asynchronousUtilities = necessary.asynchronousUtilities,
    first = arrayUtilities.first,
    repeatedly = asynchronousUtilities.repeatedly;


function intermediate() {
  var canvas = new Canvas();

  canvas.enableDepthTesting();
  canvas.enableDepthFunction();

  // loadImages(function(images) {
  //   const firstImage = first(images),
  //         image = firstImage; ///
  //
  //   textureCube(image, canvas, function(count, shader) {
  //     const render = createRender(canvas, count, shader);
  //
  //     requestAnimationFrame(render);
  //   });
  // });

  var position = [-1, 0, 0];

  colourCube(position, canvas, function (count, shader) {
    var render = createRender(canvas, count, shader);

    requestAnimationFrame(render);
  });
}

module.exports = intermediate;

function loadImages(callback) {
  var imageSources = ['texture/bricks.jpg'],
      images = [],
      context = {
    imageSources: imageSources,
    images: images
  },
      length = imageSources.length; ///

  repeatedly(loadImageCallback, length, function () {
    var images = context.images;


    callback(images);
  }, context);
}

function createRender(canvas, count, shader) {
  var initialTime = null;

  var clientWidth = canvas.getClientWidth(),
      clientHeight = canvas.getClientHeight(),
      zCoordinate = -10,
      ///
  position = Position.fromZCoordinate(zCoordinate),
      perspective = Perspective.fromClientWidthAndClientHeight(clientWidth, clientHeight);

  var render = function render(time) {
    if (initialTime === null) {
      initialTime = time;
    }

    var elapsedTime = time - initialTime,

    // xAngle = elapsedTime / 1000,
    // yAngle = elapsedTime / 1000,
    // rotation = Rotation.fromXAngleAndYAngle(xAngle, yAngle),
    rotation = Rotation.fromNothing(),
        normal = Normal.fromRotation(rotation);

    canvas.render(normal, rotation, position, perspective, shader);

    canvas.drawElements(count);

    requestAnimationFrame(render);
  };

  return render;
}

function loadImageCallback(next, done, context, index) {
  var imageSources = context.imageSources,
      images = context.images,
      imageSource = imageSources[index],
      image = new Image();


  images[index] = image;

  image.onload = next; ///

  image.src = imageSource; ///
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9leGFtcGxlcy9pbnRlcm1lZGlhdGUuanMiXSwibmFtZXMiOlsibmVjZXNzYXJ5IiwicmVxdWlyZSIsIkNhbnZhcyIsIk5vcm1hbCIsIlJvdGF0aW9uIiwiUG9zaXRpb24iLCJQZXJzcGVjdGl2ZSIsImNvbG91ckN1YmUiLCJ0ZXh0dXJlQ3ViZSIsImFycmF5VXRpbGl0aWVzIiwiYXN5bmNocm9ub3VzVXRpbGl0aWVzIiwiZmlyc3QiLCJyZXBlYXRlZGx5IiwiaW50ZXJtZWRpYXRlIiwiY2FudmFzIiwiZW5hYmxlRGVwdGhUZXN0aW5nIiwiZW5hYmxlRGVwdGhGdW5jdGlvbiIsInBvc2l0aW9uIiwiY291bnQiLCJzaGFkZXIiLCJyZW5kZXIiLCJjcmVhdGVSZW5kZXIiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb2R1bGUiLCJleHBvcnRzIiwibG9hZEltYWdlcyIsImNhbGxiYWNrIiwiaW1hZ2VTb3VyY2VzIiwiaW1hZ2VzIiwiY29udGV4dCIsImxlbmd0aCIsImxvYWRJbWFnZUNhbGxiYWNrIiwiaW5pdGlhbFRpbWUiLCJjbGllbnRXaWR0aCIsImdldENsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwiZ2V0Q2xpZW50SGVpZ2h0IiwiekNvb3JkaW5hdGUiLCJmcm9tWkNvb3JkaW5hdGUiLCJwZXJzcGVjdGl2ZSIsImZyb21DbGllbnRXaWR0aEFuZENsaWVudEhlaWdodCIsInRpbWUiLCJlbGFwc2VkVGltZSIsInJvdGF0aW9uIiwiZnJvbU5vdGhpbmciLCJub3JtYWwiLCJmcm9tUm90YXRpb24iLCJkcmF3RWxlbWVudHMiLCJuZXh0IiwiZG9uZSIsImluZGV4IiwiaW1hZ2VTb3VyY2UiLCJpbWFnZSIsIkltYWdlIiwib25sb2FkIiwic3JjIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxZQUFZQyxRQUFRLFdBQVIsQ0FBbEI7O0FBRUEsSUFBTUMsU0FBU0QsUUFBUSxXQUFSLENBQWY7QUFBQSxJQUNNRSxTQUFTRixRQUFR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LFlBRDZDLEdBQ3BCRSxPQURvQixDQUM3Q0YsWUFENkM7QUFBQSxNQUMvQkMsTUFEK0IsR0FDcEJDLE9BRG9CLENBQy9CRCxNQUQrQjtBQUFBLE1BRS9DdUIsV0FGK0MsR0FFakN4QixhQUFhdUIsS0FBYixDQUZpQztBQUFBLE1BRy9DRSxLQUgrQyxHQUd2QyxJQUFJQyxLQUFKLEVBSHVDOzs7QUFLckR6QixTQUFPc0IsS0FBUCxJQUFnQkUsS0FBaEI7O0FBRUFBLFFBQU1FLE1BQU4sR0FBZU4sSUFBZixDQVBxRCxDQU8vQjs7QUFFdEJJLFFBQU1HLEdBQU4sR0FBWUosV0FBWixDQVRxRCxDQVMzQjtBQUMzQiIsImZpbGUiOiJpbnRlcm1lZGlhdGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IG5lY2Vzc2FyeSA9IHJlcXVpcmUoJ25lY2Vzc2FyeScpO1xuXG5jb25zdCBDYW52YXMgPSByZXF1aXJlKCcuLi9jYW52YXMnKSxcbiAgICAgIE5vcm1hbCA9IHJlcXVpcmUoJy4uL25vcm1hbCcpLFxuICAgICAgUm90YXRpb24gPSByZXF1aXJlKCcuLi9yb3RhdGlvbicpLFxuICAgICAgUG9zaXRpb24gPSByZXF1aXJlKCcuLi9wb3NpdGlvbicpLFxuICAgICAgUGVyc3BlY3RpdmUgPSByZXF1aXJlKCcuLi9wZXJzcGVjdGl2ZScpLFxuICAgICAgY29sb3VyQ3ViZSA9IHJlcXVpcmUoJy4vaW50ZXJtZWRpYXRlL2NvbG91ckN1YmUnKSxcbiAgICAgIHRleHR1cmVDdWJlID0gcmVxdWlyZSgnLi9pbnRlcm1lZGlhdGUvdGV4dHVyZUN1YmUnKTtcblxuY29uc3QgeyBhcnJheVV0aWxpdGllcywgYXN5bmNocm9ub3VzVXRpbGl0aWVzIH0gPSBuZWNlc3NhcnksXG4gICAgICB7IGZpcnN0IH0gPSBhcnJheVV0aWxpdGllcyxcbiAgICAgIHsgcmVwZWF0ZWRseSB9ID0gYXN5bmNocm9ub3VzVXRpbGl0aWVzO1xuXG5mdW5jdGlvbiBpbnRlcm1lZGlhdGUoKSB7XG4gIGNvbnN0IGNhbnZhcyA9IG5ldyBDYW52YXMoKTtcblxuICBjYW52YXMuZW5hYmxlRGVwdGhUZXN0aW5nKCk7XG4gIGNhbnZhcy5lbmFibGVEZXB0aEZ1bmN0aW9uKCk7XG5cbiAgLy8gbG9hZEltYWdlcyhmdW5jdGlvbihpbWFnZXMpIHtcbiAgLy8gICBjb25zdCBmaXJzdEltYWdlID0gZmlyc3QoaW1hZ2VzKSxcbiAgLy8gICAgICAgICBpbWFnZSA9IGZpcnN0SW1hZ2U7IC8vL1xuICAvL1xuICAvLyAgIHRleHR1cmVDdWJlKGltYWdlLCBjYW52YXMsIGZ1bmN0aW9uKGNvdW50LCBzaGFkZXIpIHtcbiAgLy8gICAgIGNvbnN0IHJlbmRlciA9IGNyZWF0ZVJlbmRlcihjYW52YXMsIGNvdW50LCBzaGFkZXIpO1xuICAvL1xuICAvLyAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlbmRlcik7XG4gIC8vICAgfSk7XG4gIC8vIH0pO1xuXG4gIGNvbnN0IHBvc2l0aW9uID0gWy0xLCAwLCAwXTtcblxuICBjb2xvdXJDdWJlKHBvc2l0aW9uLCBjYW52YXMsIGZ1bmN0aW9uKGNvdW50LCBzaGFkZXIpIHtcbiAgICBjb25zdCByZW5kZXIgPSBjcmVhdGVSZW5kZXIoY2FudmFzLCBjb3VudCwgc2hhZGVyKTtcblxuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXIpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnRlcm1lZGlhdGU7XG5cbmZ1bmN0aW9uIGxvYWRJbWFnZXMoY2FsbGJhY2spIHtcbiAgY29uc3QgaW1hZ2VTb3VyY2VzID0gW1xuICAgICAgICAgICd0ZXh0dXJlL2JyaWNrcy5qcGcnXG4gICAgICAgIF0sXG4gICAgICAgIGltYWdlcyA9IFtdLFxuICAgICAgICBjb250ZXh0ID0ge1xuICAgICAgICAgIGltYWdlU291cmNlczogaW1hZ2VTb3VyY2VzLFxuICAgICAgICAgIGltYWdlczogaW1hZ2VzXG4gICAgICAgIH0sXG4gICAgICAgIGxlbmd0aCA9IGltYWdlU291cmNlcy5sZW5ndGg7IC8vL1xuXG4gIHJlcGVhdGVkbHkobG9hZEltYWdlQ2FsbGJhY2ssIGxlbmd0aCwgZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgeyBpbWFnZXMgfSA9IGNvbnRleHQ7XG5cbiAgICBjYWxsYmFjayhpbWFnZXMpXG4gIH0sIGNvbnRleHQpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSZW5kZXIoY2FudmFzLCBjb3VudCwgc2hhZGVyKSB7XG4gIGxldCBpbml0aWFsVGltZSA9IG51bGw7XG5cbiAgY29uc3QgY2xpZW50V2lkdGggPSBjYW52YXMuZ2V0Q2xpZW50V2lkdGgoKSxcbiAgICAgICAgY2xpZW50SGVpZ2h0ID0gY2FudmFzLmdldENsaWVudEhlaWdodCgpLFxuICAgICAgICB6Q29vcmRpbmF0ZSA9IC0xMCwgLy8vXG4gICAgICAgIHBvc2l0aW9uID0gUG9zaXRpb24uZnJvbVpDb29yZGluYXRlKHpDb29yZGluYXRlKSxcbiAgICAgICAgcGVyc3BlY3RpdmUgPSBQZXJzcGVjdGl2ZS5mcm9tQ2xpZW50V2lkdGhBbmRDbGllbnRIZWlnaHQoY2xpZW50V2lkdGgsIGNsaWVudEhlaWdodCk7XG5cbiAgY29uc3QgcmVuZGVyID0gKHRpbWUpID0+IHtcbiAgICBpZiAoaW5pdGlhbFRpbWUgPT09IG51bGwpIHtcbiAgICAgIGluaXRpYWxUaW1lID0gdGltZTtcbiAgICB9XG5cbiAgICBjb25zdCBlbGFwc2VkVGltZSA9IHRpbWUgLSBpbml0aWFsVGltZSxcbiAgICAgICAgICAvLyB4QW5nbGUgPSBlbGFwc2VkVGltZSAvIDEwMDAsXG4gICAgICAgICAgLy8geUFuZ2xlID0gZWxhcHNlZFRpbWUgLyAxMDAwLFxuICAgICAgICAgIC8vIHJvdGF0aW9uID0gUm90YXRpb24uZnJvbVhBbmdsZUFuZFlBbmdsZSh4QW5nbGUsIHlBbmdsZSksXG4gICAgICAgICAgcm90YXRpb24gPSBSb3RhdGlvbi5mcm9tTm90aGluZygpLFxuICAgICAgICAgIG5vcm1hbCA9IE5vcm1hbC5mcm9tUm90YXRpb24ocm90YXRpb24pO1xuXG4gICAgY2FudmFzLnJlbmRlcihub3JtYWwsIHJvdGF0aW9uLCBwb3NpdGlvbiwgcGVyc3BlY3RpdmUsIHNoYWRlcik7XG5cbiAgICBjYW52YXMuZHJhd0VsZW1lbnRzKGNvdW50KTtcblxuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXIpO1xuICB9O1xuXG4gIHJldHVybiByZW5kZXI7XG59XG5cbmZ1bmN0aW9uIGxvYWRJbWFnZUNhbGxiYWNrKG5leHQsIGRvbmUsIGNvbnRleHQsIGluZGV4KSB7XG4gIGNvbnN0IHsgaW1hZ2VTb3VyY2VzLCBpbWFnZXMgfSA9IGNvbnRleHQsXG4gICAgICAgIGltYWdlU291cmNlID0gaW1hZ2VTb3VyY2VzW2luZGV4XSxcbiAgICAgICAgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcblxuICBpbWFnZXNbaW5kZXhdID0gaW1hZ2U7XG5cbiAgaW1hZ2Uub25sb2FkID0gbmV4dDsgIC8vL1xuXG4gIGltYWdlLnNyYyA9IGltYWdlU291cmNlOyAgLy8vXG59XG4iXX0=