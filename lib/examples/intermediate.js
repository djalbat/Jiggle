'use strict';

var necessary = require('necessary');

var Canvas = require('../canvas'),
    Normal = require('../normal'),
    Rotation = require('../rotation'),
    Position = require('../position'),
    Perspective = require('../perspective'),
    colourCube = require('./intermediate/colourCube'),
    textureCube = require('./intermediate/textureCube');

var arrayUtilities = necessary.arrayUtilities,
    asynchronousUtilities = necessary.asynchronousUtilities,
    first = arrayUtilities.first,
    repeatedly = asynchronousUtilities.repeatedly;


function intermediate() {
  var canvas = new Canvas();

  canvas.enableDepthTesting();
  canvas.enableDepthFunction();

  // loadImages(function(images) {
  //   const firstImage = first(images),
  //         image = firstImage; ///
  //
  //   textureCube(image, canvas, function(count, shader) {
  //     const render = createRender(canvas, count, shader);
  //
  //     requestAnimationFrame(render);
  //   });
  // });

  colourCube(canvas, function (count, shader) {
    var render = createRender(canvas, count, shader);

    requestAnimationFrame(render);
  });
}

module.exports = intermediate;

function loadImages(callback) {
  var imageSources = ['texture/bricks.jpg'],
      images = [],
      context = {
    imageSources: imageSources,
    images: images
  },
      length = imageSources.length; ///

  repeatedly(loadImageCallback, length, function () {
    var images = context.images;


    callback(images);
  }, context);
}

function createRender(canvas, count, shader) {
  var initialTime = null;

  var clientWidth = canvas.getClientWidth(),
      clientHeight = canvas.getClientHeight(),
      zCoordinate = -5,
      ///
  position = Position.fromZCoordinate(zCoordinate),
      perspective = Perspective.fromClientWidthAndClientHeight(clientWidth, clientHeight);

  var render = function render(time) {
    if (initialTime === null) {
      initialTime = time;
    }

    var elapsedTime = time - initialTime,
        xAngle = elapsedTime / 1000,
        yAngle = elapsedTime / 1000,
        rotation = Rotation.fromXAngleAndYAngle(xAngle, yAngle),
        normal = Normal.fromRotation(rotation);

    canvas.render(normal, rotation, position, perspective, shader);

    canvas.drawElements(count);

    requestAnimationFrame(render);
  };

  return render;
}

function loadImageCallback(next, done, context, index) {
  var imageSources = context.imageSources,
      images = context.images,
      imageSource = imageSources[index],
      image = new Image();


  images[index] = image;

  image.onload = next; ///

  image.src = imageSource; ///
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9leGFtcGxlcy9pbnRlcm1lZGlhdGUuanMiXSwibmFtZXMiOlsibmVjZXNzYXJ5IiwicmVxdWlyZSIsIkNhbnZhcyIsIk5vcm1hbCIsIlJvdGF0aW9uIiwiUG9zaXRpb24iLCJQZXJzcGVjdGl2ZSIsImNvbG91ckN1YmUiLCJ0ZXh0dXJlQ3ViZSIsImFycmF5VXRpbGl0aWVzIiwiYXN5bmNocm9ub3VzVXRpbGl0aWVzIiwiZmlyc3QiLCJyZXBlYXRlZGx5IiwiaW50ZXJtZWRpYXRlIiwiY2FudmFzIiwiZW5hYmxlRGVwdGhUZXN0aW5nIiwiZW5hYmxlRGVwdGhGdW5jdGlvbiIsImNvdW50Iiwic2hhZGVyIiwicmVuZGVyIiwiY3JlYXRlUmVuZGVyIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibW9kdWxlIiwiZXhwb3J0cyIsImxvYWRJbWFnZXMiLCJjYWxsYmFjayIsImltYWdlU291cmNlcyIsImltYWdlcyIsImNvbnRleHQiLCJsZW5ndGgiLCJsb2FkSW1hZ2VDYWxsYmFjayIsImluaXRpYWxUaW1lIiwiY2xpZW50V2lkdGgiLCJnZXRDbGllbnRXaWR0aCIsImNsaWVudEhlaWdodCIsImdldENsaWVudEhlaWdodCIsInpDb29yZGluYXRlIiwicG9zaXRpb24iLCJmcm9tWkNvb3JkaW5hdGUiLCJwZXJzcGVjdGl2ZSIsImZyb21DbGllbnRXaWR0aEFuZENsaWVudEhlaWdodCIsInRpbWUiLCJlbGFwc2VkVGltZSIsInhBbmdsZSIsInlBbmdsZSIsInJvdGF0aW9uIiwiZnJvbVhBbmdsZUFuZFlBbmdsZSIsIm5vcm1hbCIsImZyb21Sb3RhdGlvbiIsImRyYXdFbGVtZW50cyIsIm5leHQiLCJkb25lIiwiaW5kZXgiLCJpbWFnZVNvdXJjZSIsImltYWdlIiwiSW1hZ2UiLCJvbmxvYWQiLCJzcmMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFlBQVlDLFFBQVEsV0FBUixDQUFsQjs7QUFFQSxJQUFNQyxTQUFTRCxRQUFRLFdBQVIs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LEtBQWhELEVBQXVEO0FBQUEsTUFDN0MxQixZQUQ2QyxHQUNwQkUsT0FEb0IsQ0FDN0NGLFlBRDZDO0FBQUEsTUFDL0JDLE1BRCtCLEdBQ3BCQyxPQURvQixDQUMvQkQsTUFEK0I7QUFBQSxNQUUvQzBCLFdBRitDLEdBRWpDM0IsYUFBYTBCLEtBQWIsQ0FGaUM7QUFBQSxNQUcvQ0UsS0FIK0MsR0FHdkMsSUFBSUMsS0FBSixFQUh1Qzs7O0FBS3JENUIsU0FBT3lCLEtBQVAsSUFBZ0JFLEtBQWhCOztBQUVBQSxRQUFNRSxNQUFOLEdBQWVOLElBQWYsQ0FQcUQsQ0FPL0I7O0FBRXRCSSxRQUFNRyxHQUFOLEdBQVlKLFdBQVosQ0FUcUQsQ0FTM0I7QUFDM0IiLCJmaWxlIjoiaW50ZXJtZWRpYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBuZWNlc3NhcnkgPSByZXF1aXJlKCduZWNlc3NhcnknKTtcblxuY29uc3QgQ2FudmFzID0gcmVxdWlyZSgnLi4vY2FudmFzJyksXG4gICAgICBOb3JtYWwgPSByZXF1aXJlKCcuLi9ub3JtYWwnKSxcbiAgICAgIFJvdGF0aW9uID0gcmVxdWlyZSgnLi4vcm90YXRpb24nKSxcbiAgICAgIFBvc2l0aW9uID0gcmVxdWlyZSgnLi4vcG9zaXRpb24nKSxcbiAgICAgIFBlcnNwZWN0aXZlID0gcmVxdWlyZSgnLi4vcGVyc3BlY3RpdmUnKSxcbiAgICAgIGNvbG91ckN1YmUgPSByZXF1aXJlKCcuL2ludGVybWVkaWF0ZS9jb2xvdXJDdWJlJyksXG4gICAgICB0ZXh0dXJlQ3ViZSA9IHJlcXVpcmUoJy4vaW50ZXJtZWRpYXRlL3RleHR1cmVDdWJlJyk7XG5cbmNvbnN0IHsgYXJyYXlVdGlsaXRpZXMsIGFzeW5jaHJvbm91c1V0aWxpdGllcyB9ID0gbmVjZXNzYXJ5LFxuICAgICAgeyBmaXJzdCB9ID0gYXJyYXlVdGlsaXRpZXMsXG4gICAgICB7IHJlcGVhdGVkbHkgfSA9IGFzeW5jaHJvbm91c1V0aWxpdGllcztcblxuZnVuY3Rpb24gaW50ZXJtZWRpYXRlKCkge1xuICBjb25zdCBjYW52YXMgPSBuZXcgQ2FudmFzKCk7XG5cbiAgY2FudmFzLmVuYWJsZURlcHRoVGVzdGluZygpO1xuICBjYW52YXMuZW5hYmxlRGVwdGhGdW5jdGlvbigpO1xuXG4gIC8vIGxvYWRJbWFnZXMoZnVuY3Rpb24oaW1hZ2VzKSB7XG4gIC8vICAgY29uc3QgZmlyc3RJbWFnZSA9IGZpcnN0KGltYWdlcyksXG4gIC8vICAgICAgICAgaW1hZ2UgPSBmaXJzdEltYWdlOyAvLy9cbiAgLy9cbiAgLy8gICB0ZXh0dXJlQ3ViZShpbWFnZSwgY2FudmFzLCBmdW5jdGlvbihjb3VudCwgc2hhZGVyKSB7XG4gIC8vICAgICBjb25zdCByZW5kZXIgPSBjcmVhdGVSZW5kZXIoY2FudmFzLCBjb3VudCwgc2hhZGVyKTtcbiAgLy9cbiAgLy8gICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXIpO1xuICAvLyAgIH0pO1xuICAvLyB9KTtcblxuICBjb2xvdXJDdWJlKGNhbnZhcywgZnVuY3Rpb24oY291bnQsIHNoYWRlcikge1xuICAgIGNvbnN0IHJlbmRlciA9IGNyZWF0ZVJlbmRlcihjYW52YXMsIGNvdW50LCBzaGFkZXIpO1xuXG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlbmRlcik7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGludGVybWVkaWF0ZTtcblxuZnVuY3Rpb24gbG9hZEltYWdlcyhjYWxsYmFjaykge1xuICBjb25zdCBpbWFnZVNvdXJjZXMgPSBbXG4gICAgICAgICAgJ3RleHR1cmUvYnJpY2tzLmpwZydcbiAgICAgICAgXSxcbiAgICAgICAgaW1hZ2VzID0gW10sXG4gICAgICAgIGNvbnRleHQgPSB7XG4gICAgICAgICAgaW1hZ2VTb3VyY2VzOiBpbWFnZVNvdXJjZXMsXG4gICAgICAgICAgaW1hZ2VzOiBpbWFnZXNcbiAgICAgICAgfSxcbiAgICAgICAgbGVuZ3RoID0gaW1hZ2VTb3VyY2VzLmxlbmd0aDsgLy8vXG5cbiAgcmVwZWF0ZWRseShsb2FkSW1hZ2VDYWxsYmFjaywgbGVuZ3RoLCBmdW5jdGlvbigpIHtcbiAgICBjb25zdCB7IGltYWdlcyB9ID0gY29udGV4dDtcblxuICAgIGNhbGxiYWNrKGltYWdlcylcbiAgfSwgY29udGV4dCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlbmRlcihjYW52YXMsIGNvdW50LCBzaGFkZXIpIHtcbiAgbGV0IGluaXRpYWxUaW1lID0gbnVsbDtcblxuICBjb25zdCBjbGllbnRXaWR0aCA9IGNhbnZhcy5nZXRDbGllbnRXaWR0aCgpLFxuICAgICAgICBjbGllbnRIZWlnaHQgPSBjYW52YXMuZ2V0Q2xpZW50SGVpZ2h0KCksXG4gICAgICAgIHpDb29yZGluYXRlID0gLTUsIC8vL1xuICAgICAgICBwb3NpdGlvbiA9IFBvc2l0aW9uLmZyb21aQ29vcmRpbmF0ZSh6Q29vcmRpbmF0ZSksXG4gICAgICAgIHBlcnNwZWN0aXZlID0gUGVyc3BlY3RpdmUuZnJvbUNsaWVudFdpZHRoQW5kQ2xpZW50SGVpZ2h0KGNsaWVudFdpZHRoLCBjbGllbnRIZWlnaHQpO1xuXG4gIGNvbnN0IHJlbmRlciA9ICh0aW1lKSA9PiB7XG4gICAgaWYgKGluaXRpYWxUaW1lID09PSBudWxsKSB7XG4gICAgICBpbml0aWFsVGltZSA9IHRpbWU7XG4gICAgfVxuXG4gICAgY29uc3QgZWxhcHNlZFRpbWUgPSB0aW1lIC0gaW5pdGlhbFRpbWUsXG4gICAgICAgICAgeEFuZ2xlID0gZWxhcHNlZFRpbWUgLyAxMDAwLFxuICAgICAgICAgIHlBbmdsZSA9IGVsYXBzZWRUaW1lIC8gMTAwMCxcbiAgICAgICAgICByb3RhdGlvbiA9IFJvdGF0aW9uLmZyb21YQW5nbGVBbmRZQW5nbGUoeEFuZ2xlLCB5QW5nbGUpLFxuICAgICAgICAgIG5vcm1hbCA9IE5vcm1hbC5mcm9tUm90YXRpb24ocm90YXRpb24pO1xuXG4gICAgY2FudmFzLnJlbmRlcihub3JtYWwsIHJvdGF0aW9uLCBwb3NpdGlvbiwgcGVyc3BlY3RpdmUsIHNoYWRlcik7XG5cbiAgICBjYW52YXMuZHJhd0VsZW1lbnRzKGNvdW50KTtcblxuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShyZW5kZXIpO1xuICB9O1xuXG4gIHJldHVybiByZW5kZXI7XG59XG5cbmZ1bmN0aW9uIGxvYWRJbWFnZUNhbGxiYWNrKG5leHQsIGRvbmUsIGNvbnRleHQsIGluZGV4KSB7XG4gIGNvbnN0IHsgaW1hZ2VTb3VyY2VzLCBpbWFnZXMgfSA9IGNvbnRleHQsXG4gICAgICAgIGltYWdlU291cmNlID0gaW1hZ2VTb3VyY2VzW2luZGV4XSxcbiAgICAgICAgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcblxuICBpbWFnZXNbaW5kZXhdID0gaW1hZ2U7XG5cbiAgaW1hZ2Uub25sb2FkID0gbmV4dDsgIC8vL1xuXG4gIGltYWdlLnNyYyA9IGltYWdlU291cmNlOyAgLy8vXG59XG4iXX0=