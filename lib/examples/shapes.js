'use strict';

require('../jiggle');

var Scene = require('../scene'),
    Canvas = require('../canvas'),
    Camera = require('../camera'),
    TexturePlane = require('./common/texture/plane'),
    TextureCuboid = require('./common/texture/cuboid'),
    ColourCylinder = require('./common/colour/cylinder'),
    TextureCylinder = require('./common/texture/cylinder'),
    imageMapUtilities = require('../utilities/imageMap');

var preloadImageMap = imageMapUtilities.preloadImageMap;


var shapes = function shapes() {

  var canvas = new Canvas();

  preloadImageMap(function (imageMap) {
    return React.createElement(
      Scene,
      { imageMap: imageMap, canvas: canvas },
      React.createElement(Camera, { initialDistance: 10, initialOffset: [0, 0, 0], canvas: canvas }),
      React.createElement(TextureCuboid, { width: 1, height: 1, depth: 1, position: [0, 2, 0], imageName: 'bricks.jpg' }),
      React.createElement(TexturePlane, { width: 1, height: 1, position: [-1, -1, -1], imageName: 'gravel.jpg' }),
      React.createElement(ColourCylinder, { width: 1, height: 1, depth: 1, position: [0, -1, 1], rotations: [0, 0, 0], colour: [1, 0, 0, 1] }),
      React.createElement(TextureCylinder, { width: 1, height: 1, depth: 1, position: [0, 1, -1], rotations: [0, 90, 90], imageName: 'grass.jpg' })
    );
  });
};

module.exports = shapes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9leGFtcGxlcy9zaGFwZXMuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsIlNjZW5lIiwiQ2FudmFzIiwiQ2FtZXJhIiwiVGV4dHVyZVBsYW5lIiwiVGV4dHVyZUN1Ym9pZCIsIkNvbG91ckN5bGluZGVyIiwiVGV4dHVyZUN5bGluZGVyIiwiaW1hZ2VNYXBVdGlsaXRpZXMiLCJwcmVsb2FkSW1hZ2VNYXAiLCJzaGFwZXMiLCJjYW52YXMiLCJpbWFnZU1hcCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxRQUFRLFdBQVI7O0FBRUEsSUFBTUMsUUFBUUQsUUFBUSxVQUFSLENBQWQ7QUFBQSxJQUNNRSxTQUFTRixRQUFRLFdBQVIsQ0FEZjtBQUFBLElBRU1HLFNBQVNILFFBQVEsV0FBUixDQUZmO0FBQUEsSUFHTUksZUFBZUosUUFBUSx3QkFBUixDQUhyQjtBQUFBLElBSU1LLGdCQUFnQkwsUUFBUSx5QkFBUixDQUp0QjtBQUFBLElBS01NLGlCQUFpQk4sUUFBUSwwQkFBUixDQUx2QjtBQUFBLElBTU1PLGtCQUFrQlAsUUFBUSwyQkFBUixDQU54QjtBQUFBLElBT01RLG9CQUFvQlIsUUFBUSx1QkFBUixDQVAxQjs7SUFTUVMsZSxHQUFvQkQsaUIsQ0FBcEJDLGU7OztBQUVSLElBQU1DLFNBQVMsU0FBVEEsTUFBUyxHQUFNOztBQUVuQixNQUFNQyxTQUFTLElBQUlULE1BQUosRUFBZjs7QUFFQU8sa0JBQWdCLFVBQUNHLFFBQUQ7QUFBQSxXQUVkO0FBQUMsV0FBRDtBQUFBLFFBQU8sVUFBVUEsUUFBakIsRUFBMkIsUUFBUUQsTUFBbkM7QUFDRSwwQkFBQyxNQUFELElBQVEsaUJBQWlCLEVBQXpCLEVBQTZCLGVBQWUsQ0FBRSxDQUFGLEVBQUssQ0FBTCxFQUFRLENBQVIsQ0FBNUMsRUFBeUQsUUFBUUEsTUFBakUsR0FERjtBQUVFLDBCQUFDLGFBQUQsSUFBZSxPQUFPLENBQXRCLEVBQXlCLFFBQVEsQ0FBakMsRUFBb0MsT0FBTyxDQUEzQyxFQUE4QyxVQUFVLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFSLENBQXhELEVBQXFFLFdBQVUsWUFBL0UsR0FGRjtBQUdFLDBCQUFDLFlBQUQsSUFBYyxPQUFPLENBQXJCLEVBQXdCLFFBQVEsQ0FBaEMsRUFBbUMsVUFBVSxDQUFFLENBQUMsQ0FBSCxFQUFNLENBQUMsQ0FBUCxFQUFVLENBQUMsQ0FBWCxDQUE3QyxFQUE2RCxXQUFVLFlBQXZFLEdBSEY7QUFJRSwwQkFBQyxjQUFELElBQWdCLE9BQU8sQ0FBdkIsRUFBMEIsUUFBUSxDQUFsQyxFQUFxQyxPQUFPLENBQTVDLEVBQStDLFVBQVUsQ0FBRSxDQUFGLEVBQUssQ0FBQyxDQUFOLEVBQVMsQ0FBVCxDQUF6RCxFQUF1RSxXQUFXLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFSLENBQWxGLEVBQStGLFFBQVEsQ0FBRSxDQUFGLEVBQUssQ0FBTCxFQUFRLENBQVIsRUFBVyxDQUFYLENBQXZHLEdBSkY7QUFLRSwwQkFBQyxlQUFELElBQWlCLE9BQU8sQ0FBeEIsRUFBMkIsUUFBUSxDQUFuQyxFQUFzQyxPQUFPLENBQTdDLEVBQWdELFVBQVUsQ0FBRSxDQUFGLEVBQUssQ0FBTCxFQUFRLENBQUMsQ0FBVCxDQUExRCxFQUF3RSxXQUFXLENBQUUsQ0FBRixFQUFLLEVBQUwsRUFBUyxFQUFULENBQW5GLEVBQWtHLFdBQVUsV0FBNUc7QUFMRixLQUZjO0FBQUEsR0FBaEI7QUFXRCxDQWZEOztBQWlCQUUsT0FBT0MsT0FBUCxHQUFpQkosTUFBakIiLCJmaWxlIjoic2hhcGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5yZXF1aXJlKCcuLi9qaWdnbGUnKTtcblxuY29uc3QgU2NlbmUgPSByZXF1aXJlKCcuLi9zY2VuZScpLFxuICAgICAgQ2FudmFzID0gcmVxdWlyZSgnLi4vY2FudmFzJyksXG4gICAgICBDYW1lcmEgPSByZXF1aXJlKCcuLi9jYW1lcmEnKSxcbiAgICAgIFRleHR1cmVQbGFuZSA9IHJlcXVpcmUoJy4vY29tbW9uL3RleHR1cmUvcGxhbmUnKSxcbiAgICAgIFRleHR1cmVDdWJvaWQgPSByZXF1aXJlKCcuL2NvbW1vbi90ZXh0dXJlL2N1Ym9pZCcpLFxuICAgICAgQ29sb3VyQ3lsaW5kZXIgPSByZXF1aXJlKCcuL2NvbW1vbi9jb2xvdXIvY3lsaW5kZXInKSxcbiAgICAgIFRleHR1cmVDeWxpbmRlciA9IHJlcXVpcmUoJy4vY29tbW9uL3RleHR1cmUvY3lsaW5kZXInKSxcbiAgICAgIGltYWdlTWFwVXRpbGl0aWVzID0gcmVxdWlyZSgnLi4vdXRpbGl0aWVzL2ltYWdlTWFwJyk7XG5cbmNvbnN0IHsgcHJlbG9hZEltYWdlTWFwIH0gPSBpbWFnZU1hcFV0aWxpdGllcztcblxuY29uc3Qgc2hhcGVzID0gKCkgPT4ge1xuXG4gIGNvbnN0IGNhbnZhcyA9IG5ldyBDYW52YXMoKTtcblxuICBwcmVsb2FkSW1hZ2VNYXAoKGltYWdlTWFwKSA9PlxuXG4gICAgPFNjZW5lIGltYWdlTWFwPXtpbWFnZU1hcH0gY2FudmFzPXtjYW52YXN9PlxuICAgICAgPENhbWVyYSBpbml0aWFsRGlzdGFuY2U9ezEwfSBpbml0aWFsT2Zmc2V0PXtbIDAsIDAsIDAgXX0gY2FudmFzPXtjYW52YXN9IC8+XG4gICAgICA8VGV4dHVyZUN1Ym9pZCB3aWR0aD17MX0gaGVpZ2h0PXsxfSBkZXB0aD17MX0gcG9zaXRpb249e1sgMCwgMiwgMCBdfSBpbWFnZU5hbWU9XCJicmlja3MuanBnXCIgLz5cbiAgICAgIDxUZXh0dXJlUGxhbmUgd2lkdGg9ezF9IGhlaWdodD17MX0gcG9zaXRpb249e1sgLTEsIC0xLCAtMSBdfSBpbWFnZU5hbWU9XCJncmF2ZWwuanBnXCIgLz5cbiAgICAgIDxDb2xvdXJDeWxpbmRlciB3aWR0aD17MX0gaGVpZ2h0PXsxfSBkZXB0aD17MX0gcG9zaXRpb249e1sgMCwgLTEsIDEgXX0gcm90YXRpb25zPXtbIDAsIDAsIDAgXX0gY29sb3VyPXtbIDEsIDAsIDAsIDEgXX0gLz5cbiAgICAgIDxUZXh0dXJlQ3lsaW5kZXIgd2lkdGg9ezF9IGhlaWdodD17MX0gZGVwdGg9ezF9IHBvc2l0aW9uPXtbIDAsIDEsIC0xIF19IHJvdGF0aW9ucz17WyAwLCA5MCwgOTAgXX0gaW1hZ2VOYW1lPVwiZ3Jhc3MuanBnXCIgLz5cbiAgICA8L1NjZW5lPlxuXG4gICk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHNoYXBlcztcblxuIl19