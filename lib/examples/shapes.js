'use strict';

require('../jiggle');

var Scene = require('../scene'),
    Canvas = require('../canvas'),
    Camera = require('../camera'),
    TexturedPlane = require('./common/textured/plane'),
    TexturedCuboid = require('./common/textured/cuboid'),
    ColouredCylinder = require('./common/coloured/cylinder'),
    TexturedCylinder = require('./common/textured/cylinder'),
    imageMapUtilities = require('../utilities/imageMap');

var preloadImageMap = imageMapUtilities.preloadImageMap;


var shapes = function shapes() {

  var canvas = new Canvas();

  preloadImageMap(function (imageMap) {
    return React.createElement(
      Scene,
      { imageMap: imageMap, canvas: canvas },
      React.createElement(Camera, { initialDistance: 10, initialOffset: [0, 0, 0], canvas: canvas }),
      React.createElement(TexturedCuboid, { width: 1, height: 1, depth: 1, position: [0, 2, 0], imageName: 'bricks.jpg' }),
      React.createElement(TexturedPlane, { width: 1, height: 1, position: [-1, -1, -1], imageName: 'gravel.jpg' }),
      React.createElement(ColouredCylinder, { width: 1, height: 1, depth: 1, position: [0, -1, 1], rotations: [0, 0, 0], colour: [1, 0, 0, 1] }),
      React.createElement(TexturedCylinder, { width: 1, height: 1, depth: 1, position: [0, 1, -1], rotations: [0, 90, 90], imageName: 'grass.jpg' })
    );
  });
};

module.exports = shapes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9leGFtcGxlcy9zaGFwZXMuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsIlNjZW5lIiwiQ2FudmFzIiwiQ2FtZXJhIiwiVGV4dHVyZWRQbGFuZSIsIlRleHR1cmVkQ3Vib2lkIiwiQ29sb3VyZWRDeWxpbmRlciIsIlRleHR1cmVkQ3lsaW5kZXIiLCJpbWFnZU1hcFV0aWxpdGllcyIsInByZWxvYWRJbWFnZU1hcCIsInNoYXBlcyIsImNhbnZhcyIsImltYWdlTWFwIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLFFBQVEsV0FBUjs7QUFFQSxJQUFNQyxRQUFRRCxRQUFRLFVBQVIsQ0FBZDtBQUFBLElBQ01FLFNBQVNGLFFBQVEsV0FBUixDQURmO0FBQUEsSUFFTUcsU0FBU0gsUUFBUSxXQUFSLENBRmY7QUFBQSxJQUdNSSxnQkFBZ0JKLFFBQVEseUJBQVIsQ0FIdEI7QUFBQSxJQUlNSyxpQkFBaUJMLFFBQVEsMEJBQVIsQ0FKdkI7QUFBQSxJQUtNTSxtQkFBbUJOLFFBQVEsNEJBQVIsQ0FMekI7QUFBQSxJQU1NTyxtQkFBbUJQLFFBQVEsNEJBQVIsQ0FOekI7QUFBQSxJQU9NUSxvQkFBb0JSLFFBQVEsdUJBQVIsQ0FQMUI7O0lBU1FTLGUsR0FBb0JELGlCLENBQXBCQyxlOzs7QUFFUixJQUFNQyxTQUFTLFNBQVRBLE1BQVMsR0FBTTs7QUFFbkIsTUFBTUMsU0FBUyxJQUFJVCxNQUFKLEVBQWY7O0FBRUFPLGtCQUFnQixVQUFDRyxRQUFEO0FBQUEsV0FFZDtBQUFDLFdBQUQ7QUFBQSxRQUFPLFVBQVVBLFFBQWpCLEVBQTJCLFFBQVFELE1BQW5DO0FBQ0UsMEJBQUMsTUFBRCxJQUFRLGlCQUFpQixFQUF6QixFQUE2QixlQUFlLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFSLENBQTVDLEVBQXlELFFBQVFBLE1BQWpFLEdBREY7QUFFRSwwQkFBQyxjQUFELElBQWdCLE9BQU8sQ0FBdkIsRUFBMEIsUUFBUSxDQUFsQyxFQUFxQyxPQUFPLENBQTVDLEVBQStDLFVBQVUsQ0FBRSxDQUFGLEVBQUssQ0FBTCxFQUFRLENBQVIsQ0FBekQsRUFBc0UsV0FBVSxZQUFoRixHQUZGO0FBR0UsMEJBQUMsYUFBRCxJQUFlLE9BQU8sQ0FBdEIsRUFBeUIsUUFBUSxDQUFqQyxFQUFvQyxVQUFVLENBQUUsQ0FBQyxDQUFILEVBQU0sQ0FBQyxDQUFQLEVBQVUsQ0FBQyxDQUFYLENBQTlDLEVBQThELFdBQVUsWUFBeEUsR0FIRjtBQUlFLDBCQUFDLGdCQUFELElBQWtCLE9BQU8sQ0FBekIsRUFBNEIsUUFBUSxDQUFwQyxFQUF1QyxPQUFPLENBQTlDLEVBQWlELFVBQVUsQ0FBRSxDQUFGLEVBQUssQ0FBQyxDQUFOLEVBQVMsQ0FBVCxDQUEzRCxFQUF5RSxXQUFXLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFSLENBQXBGLEVBQWlHLFFBQVEsQ0FBRSxDQUFGLEVBQUssQ0FBTCxFQUFRLENBQVIsRUFBVyxDQUFYLENBQXpHLEdBSkY7QUFLRSwwQkFBQyxnQkFBRCxJQUFrQixPQUFPLENBQXpCLEVBQTRCLFFBQVEsQ0FBcEMsRUFBdUMsT0FBTyxDQUE5QyxFQUFpRCxVQUFVLENBQUUsQ0FBRixFQUFLLENBQUwsRUFBUSxDQUFDLENBQVQsQ0FBM0QsRUFBeUUsV0FBVyxDQUFFLENBQUYsRUFBSyxFQUFMLEVBQVMsRUFBVCxDQUFwRixFQUFtRyxXQUFVLFdBQTdHO0FBTEYsS0FGYztBQUFBLEdBQWhCO0FBV0QsQ0FmRDs7QUFpQkFFLE9BQU9DLE9BQVAsR0FBaUJKLE1BQWpCIiwiZmlsZSI6InNoYXBlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxucmVxdWlyZSgnLi4vamlnZ2xlJyk7XG5cbmNvbnN0IFNjZW5lID0gcmVxdWlyZSgnLi4vc2NlbmUnKSxcbiAgICAgIENhbnZhcyA9IHJlcXVpcmUoJy4uL2NhbnZhcycpLFxuICAgICAgQ2FtZXJhID0gcmVxdWlyZSgnLi4vY2FtZXJhJyksXG4gICAgICBUZXh0dXJlZFBsYW5lID0gcmVxdWlyZSgnLi9jb21tb24vdGV4dHVyZWQvcGxhbmUnKSxcbiAgICAgIFRleHR1cmVkQ3Vib2lkID0gcmVxdWlyZSgnLi9jb21tb24vdGV4dHVyZWQvY3Vib2lkJyksXG4gICAgICBDb2xvdXJlZEN5bGluZGVyID0gcmVxdWlyZSgnLi9jb21tb24vY29sb3VyZWQvY3lsaW5kZXInKSxcbiAgICAgIFRleHR1cmVkQ3lsaW5kZXIgPSByZXF1aXJlKCcuL2NvbW1vbi90ZXh0dXJlZC9jeWxpbmRlcicpLFxuICAgICAgaW1hZ2VNYXBVdGlsaXRpZXMgPSByZXF1aXJlKCcuLi91dGlsaXRpZXMvaW1hZ2VNYXAnKTtcblxuY29uc3QgeyBwcmVsb2FkSW1hZ2VNYXAgfSA9IGltYWdlTWFwVXRpbGl0aWVzO1xuXG5jb25zdCBzaGFwZXMgPSAoKSA9PiB7XG5cbiAgY29uc3QgY2FudmFzID0gbmV3IENhbnZhcygpO1xuXG4gIHByZWxvYWRJbWFnZU1hcCgoaW1hZ2VNYXApID0+XG5cbiAgICA8U2NlbmUgaW1hZ2VNYXA9e2ltYWdlTWFwfSBjYW52YXM9e2NhbnZhc30+XG4gICAgICA8Q2FtZXJhIGluaXRpYWxEaXN0YW5jZT17MTB9IGluaXRpYWxPZmZzZXQ9e1sgMCwgMCwgMCBdfSBjYW52YXM9e2NhbnZhc30gLz5cbiAgICAgIDxUZXh0dXJlZEN1Ym9pZCB3aWR0aD17MX0gaGVpZ2h0PXsxfSBkZXB0aD17MX0gcG9zaXRpb249e1sgMCwgMiwgMCBdfSBpbWFnZU5hbWU9XCJicmlja3MuanBnXCIgLz5cbiAgICAgIDxUZXh0dXJlZFBsYW5lIHdpZHRoPXsxfSBoZWlnaHQ9ezF9IHBvc2l0aW9uPXtbIC0xLCAtMSwgLTEgXX0gaW1hZ2VOYW1lPVwiZ3JhdmVsLmpwZ1wiIC8+XG4gICAgICA8Q29sb3VyZWRDeWxpbmRlciB3aWR0aD17MX0gaGVpZ2h0PXsxfSBkZXB0aD17MX0gcG9zaXRpb249e1sgMCwgLTEsIDEgXX0gcm90YXRpb25zPXtbIDAsIDAsIDAgXX0gY29sb3VyPXtbIDEsIDAsIDAsIDEgXX0gLz5cbiAgICAgIDxUZXh0dXJlZEN5bGluZGVyIHdpZHRoPXsxfSBoZWlnaHQ9ezF9IGRlcHRoPXsxfSBwb3NpdGlvbj17WyAwLCAxLCAtMSBdfSByb3RhdGlvbnM9e1sgMCwgOTAsIDkwIF19IGltYWdlTmFtZT1cImdyYXNzLmpwZ1wiIC8+XG4gICAgPC9TY2VuZT5cblxuICApO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBzaGFwZXM7XG5cbiJdfQ==