'use strict';

var Canvas = require('../canvas'),
    ModelView = require('../modelView'),
    Perspective = require('../projection');

var containerHouse = function containerHouse() {
      var canvas = new Canvas(),
          shaderProgram = canvas.createShaderProgram(),
          positions = [+1.0, +1.0, -1.0, +1.0, +1.0, -1.0, -1.0, -1.0],
          positionsBuffer = canvas.createBuffer(positions),
          clientWidth = canvas.getClientWidth(),
          clientHeight = canvas.getClientHeight(),
          modelView = new ModelView(),
          perspective = new Perspective(clientWidth, clientHeight),
          vertexPositionLocation = canvas.getProgramAttributeLocation(shaderProgram, 'aVertexPosition'),
          projectionMatrixLocation = canvas.getProgramUniformLocation(shaderProgram, 'uProjectionMatrix'),
          modelViewMatrixLocation = canvas.getProgramUniformLocation(shaderProgram, 'uModelViewMatrix');

      canvas.clearDepth();
      canvas.clearColour();
      canvas.clearDepthBuffer();
      canvas.clearColourBuffer();

      canvas.enableDepthTesting();
      canvas.enableDepthFunction();

      canvas.useProgram(shaderProgram);
      canvas.usePerspective(projectionMatrixLocation, perspective); ///
      canvas.useModelView(modelViewMatrixLocation, modelView);

      canvas.useBuffer(vertexPositionLocation, positionsBuffer); ///

      var offset = 0,
          vertexCount = 4;

      canvas.render(offset, vertexCount);
};

module.exports = containerHouse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9leGFtcGxlcy9jb250YWluZXJIb3VzZS5qcyJdLCJuYW1lcyI6WyJDYW52YXMiLCJyZXF1aXJlIiwiTW9kZWxWaWV3IiwiUGVyc3BlY3RpdmUiLCJjb250YWluZXJIb3VzZSIsImNhbnZhcyIsInNoYWRlclByb2dyYW0iLCJjcmVhdGVTaGFkZXJQcm9ncmFtIiwicG9zaXRpb25zIiwicG9zaXRpb25zQnVmZmVyIiwiY3JlYXRlQnVmZmVyIiwiY2xpZW50V2lkdGgiLCJnZXRDbGllbnRXaWR0aCIsImNsaWVudEhlaWdodCIsImdldENsaWVudEhlaWdodCIsIm1vZGVsVmlldyIsInBlcnNwZWN0aXZlIiwidmVydGV4UG9zaXRpb25Mb2NhdGlvbiIsImdldFByb2dyYW1BdHRyaWJ1dGVMb2NhdGlvbiIsInByb2plY3Rpb25NYXRyaXhMb2NhdGlvbiIsImdldFByb2dyYW1Vbmlmb3JtTG9jYXRpb24iLCJtb2RlbFZpZXdNYXRyaXhMb2NhdGlvbiIsImNsZWFyRGVwdGgiLCJjbGVhckNvbG91ciIsImNsZWFyRGVwdGhCdWZmZXIiLCJjbGVhckNvbG91ckJ1ZmZlciIsImVuYWJsZURlcHRoVGVzdGluZyIsImVuYWJsZURlcHRoRnVuY3Rpb24iLCJ1c2VQcm9ncmFtIiwidXNlUGVyc3BlY3RpdmUiLCJ1c2VNb2RlbFZpZXciLCJ1c2VCdWZmZXIiLCJvZmZzZXQiLCJ2ZXJ0ZXhDb3VudCIsInJlbmRlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFNBQVNDLFFBQVEsV0FBUixDQUFmO0FBQUEsSUFDTUMsWUFBWUQsUUFBUSxjQUFSLENBRGxCO0FBQUEsSUFFTUUsY0FBY0YsUUFBUSxlQUFSLENBRnBCOztBQUlBLElBQU1HLGlCQUFpQixTQUFqQkEsY0FBaUIsR0FBTTtBQUMzQixVQUFNQyxTQUFTLElBQUlMLE1BQUosRUFBZjtBQUFBLFVBQ01NLGdCQUFnQkQsT0FBT0UsbUJBQVAsRUFEdEI7QUFBQSxVQUVNQyxZQUFZLENBQ1YsQ0FBQyxHQURTLEVBQ0osQ0FBQyxHQURHLEVBRVYsQ0FBQyxHQUZTLEVBRUosQ0FBQyxHQUZHLEVBR1YsQ0FBQyxHQUhTLEVBR0osQ0FBQyxHQUhHLEVBSVYsQ0FBQyxHQUpTLEVBSUosQ0FBQyxHQUpHLENBRmxCO0FBQUEsVUFRTUMsa0JBQWtCSixPQUFPSyxZQUFQLENBQW9CRixTQUFwQixDQVJ4QjtBQUFBLFVBU01HLGNBQWNOLE9BQU9PLGNBQVAsRUFUcEI7QUFBQSxVQVVNQyxlQUFlUixPQUFPUyxlQUFQLEVBVnJCO0FBQUEsVUFXTUMsWUFBWSxJQUFJYixTQUFKLEVBWGxCO0FBQUEsVUFZTWMsY0FBYyxJQUFJYixXQUFKLENBQWdCUSxXQUFoQixFQUE2QkUsWUFBN0IsQ0FacEI7QUFBQSxVQWFNSSx5QkFBeUJaLE9BQU9hLDJCQUFQLENBQW1DWixhQUFuQyxFQUFrRCxpQkFBbEQsQ0FiL0I7QUFBQSxVQWNNYSwyQkFBMkJkLE9BQU9lLHlCQUFQLENBQWlDZCxhQUFqQyxFQUFnRCxtQkFBaEQsQ0FkakM7QUFBQSxVQWVNZSwwQkFBMEJoQixPQUFPZSx5QkFBUCxDQUFpQ2QsYUFBakMsRUFBZ0Qsa0JBQWhELENBZmhDOztBQWlCQUQsYUFBT2lCLFVBQVA7QUFDQWpCLGFBQU9rQixXQUFQO0FBQ0FsQixhQUFPbUIsZ0JBQVA7QUFDQW5CLGFBQU9vQixpQkFBUDs7QUFFQXBCLGFBQU9xQixrQkFBUDtBQUNBckIsYUFBT3NCLG1CQUFQOztBQUVBdEIsYUFBT3VCLFVBQVAsQ0FBa0J0QixhQUFsQjtBQUNBRCxhQUFPd0IsY0FBUCxDQUFzQlYsd0JBQXRCLEVBQWdESCxXQUFoRCxFQTNCMkIsQ0EyQm1DO0FBQzlEWCxhQUFPeUIsWUFBUCxDQUFvQlQsdUJBQXBCLEVBQTZDTixTQUE3Qzs7QUFFQVYsYUFBTzBCLFNBQVAsQ0FBaUJkLHNCQUFqQixFQUF5Q1IsZUFBekMsRUE5QjJCLENBOEJnQzs7QUFFM0QsVUFBTXVCLFNBQVMsQ0FBZjtBQUFBLFVBQ01DLGNBQWMsQ0FEcEI7O0FBR0E1QixhQUFPNkIsTUFBUCxDQUFjRixNQUFkLEVBQXNCQyxXQUF0QjtBQUNELENBcENEOztBQXNDQUUsT0FBT0MsT0FBUCxHQUFpQmhDLGNBQWpCIiwiZmlsZSI6ImNvbnRhaW5lckhvdXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBDYW52YXMgPSByZXF1aXJlKCcuLi9jYW52YXMnKSxcbiAgICAgIE1vZGVsVmlldyA9IHJlcXVpcmUoJy4uL21vZGVsVmlldycpLFxuICAgICAgUGVyc3BlY3RpdmUgPSByZXF1aXJlKCcuLi9wcm9qZWN0aW9uJyk7XG5cbmNvbnN0IGNvbnRhaW5lckhvdXNlID0gKCkgPT4ge1xuICBjb25zdCBjYW52YXMgPSBuZXcgQ2FudmFzKCksXG4gICAgICAgIHNoYWRlclByb2dyYW0gPSBjYW52YXMuY3JlYXRlU2hhZGVyUHJvZ3JhbSgpLFxuICAgICAgICBwb3NpdGlvbnMgPSBbXG4gICAgICAgICAgKzEuMCwgKzEuMCxcbiAgICAgICAgICAtMS4wLCArMS4wLFxuICAgICAgICAgICsxLjAsIC0xLjAsXG4gICAgICAgICAgLTEuMCwgLTEuMFxuICAgICAgICBdLFxuICAgICAgICBwb3NpdGlvbnNCdWZmZXIgPSBjYW52YXMuY3JlYXRlQnVmZmVyKHBvc2l0aW9ucyksXG4gICAgICAgIGNsaWVudFdpZHRoID0gY2FudmFzLmdldENsaWVudFdpZHRoKCksXG4gICAgICAgIGNsaWVudEhlaWdodCA9IGNhbnZhcy5nZXRDbGllbnRIZWlnaHQoKSxcbiAgICAgICAgbW9kZWxWaWV3ID0gbmV3IE1vZGVsVmlldygpLFxuICAgICAgICBwZXJzcGVjdGl2ZSA9IG5ldyBQZXJzcGVjdGl2ZShjbGllbnRXaWR0aCwgY2xpZW50SGVpZ2h0KSxcbiAgICAgICAgdmVydGV4UG9zaXRpb25Mb2NhdGlvbiA9IGNhbnZhcy5nZXRQcm9ncmFtQXR0cmlidXRlTG9jYXRpb24oc2hhZGVyUHJvZ3JhbSwgJ2FWZXJ0ZXhQb3NpdGlvbicpLFxuICAgICAgICBwcm9qZWN0aW9uTWF0cml4TG9jYXRpb24gPSBjYW52YXMuZ2V0UHJvZ3JhbVVuaWZvcm1Mb2NhdGlvbihzaGFkZXJQcm9ncmFtLCAndVByb2plY3Rpb25NYXRyaXgnKSxcbiAgICAgICAgbW9kZWxWaWV3TWF0cml4TG9jYXRpb24gPSBjYW52YXMuZ2V0UHJvZ3JhbVVuaWZvcm1Mb2NhdGlvbihzaGFkZXJQcm9ncmFtLCAndU1vZGVsVmlld01hdHJpeCcpO1xuXG4gIGNhbnZhcy5jbGVhckRlcHRoKCk7XG4gIGNhbnZhcy5jbGVhckNvbG91cigpO1xuICBjYW52YXMuY2xlYXJEZXB0aEJ1ZmZlcigpO1xuICBjYW52YXMuY2xlYXJDb2xvdXJCdWZmZXIoKTtcblxuICBjYW52YXMuZW5hYmxlRGVwdGhUZXN0aW5nKCk7XG4gIGNhbnZhcy5lbmFibGVEZXB0aEZ1bmN0aW9uKCk7XG5cbiAgY2FudmFzLnVzZVByb2dyYW0oc2hhZGVyUHJvZ3JhbSk7XG4gIGNhbnZhcy51c2VQZXJzcGVjdGl2ZShwcm9qZWN0aW9uTWF0cml4TG9jYXRpb24sIHBlcnNwZWN0aXZlKTsgLy8vXG4gIGNhbnZhcy51c2VNb2RlbFZpZXcobW9kZWxWaWV3TWF0cml4TG9jYXRpb24sIG1vZGVsVmlldyk7XG4gIFxuICBjYW52YXMudXNlQnVmZmVyKHZlcnRleFBvc2l0aW9uTG9jYXRpb24sIHBvc2l0aW9uc0J1ZmZlcik7IC8vL1xuXG4gIGNvbnN0IG9mZnNldCA9IDAsXG4gICAgICAgIHZlcnRleENvdW50ID0gNDtcblxuICBjYW52YXMucmVuZGVyKG9mZnNldCwgdmVydGV4Q291bnQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBjb250YWluZXJIb3VzZTtcbiJdfQ==