'use strict';

var Canvas = require('../canvas'),
    ModelView = require('../modelView'),
    Perspective = require('../perspective');

var containerHouse = function containerHouse() {
      var canvas = new Canvas(),
          shaderProgram = canvas.createShaderProgram(),
          positions = [+1.0, +1.0, -1.0, +1.0, +1.0, -1.0, -1.0, -1.0],
          positionsBuffer = canvas.createBuffer(positions),
          clientWidth = canvas.getClientWidth(),
          clientHeight = canvas.getClientHeight(),
          modelView = new ModelView(),
          perspective = new Perspective(clientWidth, clientHeight),
          vertexPositionLocation = canvas.getProgramAttributeLocation(shaderProgram, 'aVertexPosition'),
          projectionMatrixLocation = canvas.getProgramUniformLocation(shaderProgram, 'uProjectionMatrix'),
          modelViewMatrixLocation = canvas.getProgramUniformLocation(shaderProgram, 'uModelViewMatrix');

      canvas.clearDepth();
      canvas.clearColour();
      canvas.clearDepthBuffer();
      canvas.clearColourBuffer();

      canvas.enableDepthTesting();
      canvas.enableDepthFunction();

      canvas.useProgram(shaderProgram);
      canvas.usePerspective(projectionMatrixLocation, perspective); ///
      canvas.useModelView(modelViewMatrixLocation, modelView);

      canvas.useBuffer(vertexPositionLocation, positionsBuffer); ///

      var offset = 0,
          vertexCount = 4;

      canvas.render(offset, vertexCount);
};

module.exports = containerHouse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9leGFtcGxlcy9jb250YWluZXJIb3VzZS5qcyJdLCJuYW1lcyI6WyJDYW52YXMiLCJyZXF1aXJlIiwiTW9kZWxWaWV3IiwiUGVyc3BlY3RpdmUiLCJjb250YWluZXJIb3VzZSIsImNhbnZhcyIsInNoYWRlclByb2dyYW0iLCJjcmVhdGVTaGFkZXJQcm9ncmFtIiwicG9zaXRpb25zIiwicG9zaXRpb25zQnVmZmVyIiwiY3JlYXRlQnVmZmVyIiwiY2xpZW50V2lkdGgiLCJnZXRDbGllbnRXaWR0aCIsImNsaWVudEhlaWdodCIsImdldENsaWVudEhlaWdodCIsIm1vZGVsVmlldyIsInBlcnNwZWN0aXZlIiwidmVydGV4UG9zaXRpb25Mb2NhdGlvbiIsImdldFByb2dyYW1BdHRyaWJ1dGVMb2NhdGlvbiIsInByb2plY3Rpb25NYXRyaXhMb2NhdGlvbiIsImdldFByb2dyYW1Vbmlmb3JtTG9jYXRpb24iLCJtb2RlbFZpZXdNYXRyaXhMb2NhdGlvbiIsImNsZWFyRGVwdGgiLCJjbGVhckNvbG91ciIsImNsZWFyRGVwdGhCdWZmZXIiLCJjbGVhckNvbG91ckJ1ZmZlciIsImVuYWJsZURlcHRoVGVzdGluZyIsImVuYWJsZURlcHRoRnVuY3Rpb24iLCJ1c2VQcm9ncmFtIiwidXNlUGVyc3BlY3RpdmUiLCJ1c2VNb2RlbFZpZXciLCJ1c2VCdWZmZXIiLCJvZmZzZXQiLCJ2ZXJ0ZXhDb3VudCIsInJlbmRlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFNBQVNDLFFBQVEsV0FBUixDQUFmO0FBQUEsSUFDTUMsWUFBWUQsUUFBUSxjQUFSLENBRGxCO0FBQUEsSUFFTUUsY0FBY0YsUUFBUSxnQkFBUixDQUZwQjs7QUFJQSxJQUFNRyxpQkFBaUIsU0FBakJBLGNBQWlCLEdBQU07QUFDM0IsVUFBTUMsU0FBUyxJQUFJTCxNQUFKLEVBQWY7QUFBQSxVQUNNTSxnQkFBZ0JELE9BQU9FLG1CQUFQLEVBRHRCO0FBQUEsVUFFTUMsWUFBWSxDQUNWLENBQUMsR0FEUyxFQUNKLENBQUMsR0FERyxFQUVWLENBQUMsR0FGUyxFQUVKLENBQUMsR0FGRyxFQUdWLENBQUMsR0FIUyxFQUdKLENBQUMsR0FIRyxFQUlWLENBQUMsR0FKUyxFQUlKLENBQUMsR0FKRyxDQUZsQjtBQUFBLFVBUU1DLGtCQUFrQkosT0FBT0ssWUFBUCxDQUFvQkYsU0FBcEIsQ0FSeEI7QUFBQSxVQVNNRyxjQUFjTixPQUFPTyxjQUFQLEVBVHBCO0FBQUEsVUFVTUMsZUFBZVIsT0FBT1MsZUFBUCxFQVZyQjtBQUFBLFVBV01DLFlBQVksSUFBSWIsU0FBSixFQVhsQjtBQUFBLFVBWU1jLGNBQWMsSUFBSWIsV0FBSixDQUFnQlEsV0FBaEIsRUFBNkJFLFlBQTdCLENBWnBCO0FBQUEsVUFhTUkseUJBQXlCWixPQUFPYSwyQkFBUCxDQUFtQ1osYUFBbkMsRUFBa0QsaUJBQWxELENBYi9CO0FBQUEsVUFjTWEsMkJBQTJCZCxPQUFPZSx5QkFBUCxDQUFpQ2QsYUFBakMsRUFBZ0QsbUJBQWhELENBZGpDO0FBQUEsVUFlTWUsMEJBQTBCaEIsT0FBT2UseUJBQVAsQ0FBaUNkLGFBQWpDLEVBQWdELGtCQUFoRCxDQWZoQzs7QUFpQkFELGFBQU9pQixVQUFQO0FBQ0FqQixhQUFPa0IsV0FBUDtBQUNBbEIsYUFBT21CLGdCQUFQO0FBQ0FuQixhQUFPb0IsaUJBQVA7O0FBRUFwQixhQUFPcUIsa0JBQVA7QUFDQXJCLGFBQU9zQixtQkFBUDs7QUFFQXRCLGFBQU91QixVQUFQLENBQWtCdEIsYUFBbEI7QUFDQUQsYUFBT3dCLGNBQVAsQ0FBc0JWLHdCQUF0QixFQUFnREgsV0FBaEQsRUEzQjJCLENBMkJtQztBQUM5RFgsYUFBT3lCLFlBQVAsQ0FBb0JULHVCQUFwQixFQUE2Q04sU0FBN0M7O0FBRUFWLGFBQU8wQixTQUFQLENBQWlCZCxzQkFBakIsRUFBeUNSLGVBQXpDLEVBOUIyQixDQThCZ0M7O0FBRTNELFVBQU11QixTQUFTLENBQWY7QUFBQSxVQUNNQyxjQUFjLENBRHBCOztBQUdBNUIsYUFBTzZCLE1BQVAsQ0FBY0YsTUFBZCxFQUFzQkMsV0FBdEI7QUFDRCxDQXBDRDs7QUFzQ0FFLE9BQU9DLE9BQVAsR0FBaUJoQyxjQUFqQiIsImZpbGUiOiJjb250YWluZXJIb3VzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgQ2FudmFzID0gcmVxdWlyZSgnLi4vY2FudmFzJyksXG4gICAgICBNb2RlbFZpZXcgPSByZXF1aXJlKCcuLi9tb2RlbFZpZXcnKSxcbiAgICAgIFBlcnNwZWN0aXZlID0gcmVxdWlyZSgnLi4vcGVyc3BlY3RpdmUnKTtcblxuY29uc3QgY29udGFpbmVySG91c2UgPSAoKSA9PiB7XG4gIGNvbnN0IGNhbnZhcyA9IG5ldyBDYW52YXMoKSxcbiAgICAgICAgc2hhZGVyUHJvZ3JhbSA9IGNhbnZhcy5jcmVhdGVTaGFkZXJQcm9ncmFtKCksXG4gICAgICAgIHBvc2l0aW9ucyA9IFtcbiAgICAgICAgICArMS4wLCArMS4wLFxuICAgICAgICAgIC0xLjAsICsxLjAsXG4gICAgICAgICAgKzEuMCwgLTEuMCxcbiAgICAgICAgICAtMS4wLCAtMS4wXG4gICAgICAgIF0sXG4gICAgICAgIHBvc2l0aW9uc0J1ZmZlciA9IGNhbnZhcy5jcmVhdGVCdWZmZXIocG9zaXRpb25zKSxcbiAgICAgICAgY2xpZW50V2lkdGggPSBjYW52YXMuZ2V0Q2xpZW50V2lkdGgoKSxcbiAgICAgICAgY2xpZW50SGVpZ2h0ID0gY2FudmFzLmdldENsaWVudEhlaWdodCgpLFxuICAgICAgICBtb2RlbFZpZXcgPSBuZXcgTW9kZWxWaWV3KCksXG4gICAgICAgIHBlcnNwZWN0aXZlID0gbmV3IFBlcnNwZWN0aXZlKGNsaWVudFdpZHRoLCBjbGllbnRIZWlnaHQpLFxuICAgICAgICB2ZXJ0ZXhQb3NpdGlvbkxvY2F0aW9uID0gY2FudmFzLmdldFByb2dyYW1BdHRyaWJ1dGVMb2NhdGlvbihzaGFkZXJQcm9ncmFtLCAnYVZlcnRleFBvc2l0aW9uJyksXG4gICAgICAgIHByb2plY3Rpb25NYXRyaXhMb2NhdGlvbiA9IGNhbnZhcy5nZXRQcm9ncmFtVW5pZm9ybUxvY2F0aW9uKHNoYWRlclByb2dyYW0sICd1UHJvamVjdGlvbk1hdHJpeCcpLFxuICAgICAgICBtb2RlbFZpZXdNYXRyaXhMb2NhdGlvbiA9IGNhbnZhcy5nZXRQcm9ncmFtVW5pZm9ybUxvY2F0aW9uKHNoYWRlclByb2dyYW0sICd1TW9kZWxWaWV3TWF0cml4Jyk7XG5cbiAgY2FudmFzLmNsZWFyRGVwdGgoKTtcbiAgY2FudmFzLmNsZWFyQ29sb3VyKCk7XG4gIGNhbnZhcy5jbGVhckRlcHRoQnVmZmVyKCk7XG4gIGNhbnZhcy5jbGVhckNvbG91ckJ1ZmZlcigpO1xuXG4gIGNhbnZhcy5lbmFibGVEZXB0aFRlc3RpbmcoKTtcbiAgY2FudmFzLmVuYWJsZURlcHRoRnVuY3Rpb24oKTtcblxuICBjYW52YXMudXNlUHJvZ3JhbShzaGFkZXJQcm9ncmFtKTtcbiAgY2FudmFzLnVzZVBlcnNwZWN0aXZlKHByb2plY3Rpb25NYXRyaXhMb2NhdGlvbiwgcGVyc3BlY3RpdmUpOyAvLy9cbiAgY2FudmFzLnVzZU1vZGVsVmlldyhtb2RlbFZpZXdNYXRyaXhMb2NhdGlvbiwgbW9kZWxWaWV3KTtcbiAgXG4gIGNhbnZhcy51c2VCdWZmZXIodmVydGV4UG9zaXRpb25Mb2NhdGlvbiwgcG9zaXRpb25zQnVmZmVyKTsgLy8vXG5cbiAgY29uc3Qgb2Zmc2V0ID0gMCxcbiAgICAgICAgdmVydGV4Q291bnQgPSA0O1xuXG4gIGNhbnZhcy5yZW5kZXIob2Zmc2V0LCB2ZXJ0ZXhDb3VudCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRhaW5lckhvdXNlO1xuIl19