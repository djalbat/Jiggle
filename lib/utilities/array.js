'use strict';

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var necessary = require('necessary');

var arrayUtilities = necessary.arrayUtilities;


function chop(elements, arrayLength) {
  var arrays = [],
      elementsLength = elements.length,
      arraysLength = elementsLength / arrayLength;

  for (var index = 0; index < arraysLength; index++) {
    var array = [];

    for (var offset = 0; offset < arrayLength; offset++) {
      array[offset] = elements[index * arrayLength + offset];
    }

    arrays[index] = array;
  }

  return arrays;
}

function permute(elements, places) {
  var length = elements.length,
      cut = length - places,
      leadingElements = elements.slice(0, cut),
      trailingElements = elements.slice(cut);

  elements = [].concat(_toConsumableArray(trailingElements), _toConsumableArray(leadingElements));

  return elements;
}

function flatten(arrays) {
  return arrays.reduce(function (elements, array) {
    return elements.concat(array);
  }, []);
}

function guarantee(arrayOrElement) {
  return arrayOrElement instanceof Array ? arrayOrElement : [arrayOrElement];
}

module.exports = Object.assign(arrayUtilities, {
  chop: chop,
  permute: permute,
  flatten: flatten,
  guarantee: guarantee
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvYXJyYXkuanMiXSwibmFtZXMiOlsibmVjZXNzYXJ5IiwicmVxdWlyZSIsImFycmF5VXRpbGl0aWVzIiwiY2hvcCIsImVsZW1lbnRzIiwiYXJyYXlMZW5ndGgiLCJhcnJheXMiLCJlbGVtZW50c0xlbmd0aCIsImxlbmd0aCIsImFycmF5c0xlbmd0aCIsImluZGV4IiwiYXJyYXkiLCJvZmZzZXQiLCJwZXJtdXRlIiwicGxhY2VzIiwiY3V0IiwibGVhZGluZ0VsZW1lbnRzIiwic2xpY2UiLCJ0cmFpbGluZ0VsZW1lbnRzIiwiZmxhdHRlbiIsInJlZHVjZSIsImNvbmNhdCIsImd1YXJhbnRlZSIsImFycmF5T3JFbGVtZW50IiwiQXJyYXkiLCJtb2R1bGUiLCJleHBvcnRzIiwiT2JqZWN0IiwiYXNzaWduIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLElBQU1BLFlBQVlDLFFBQVEsV0FBUixDQUFsQjs7SUFFUUMsYyxHQUFtQkYsUyxDQUFuQkUsYzs7O0FBRVIsU0FBU0MsSUFBVCxDQUFjQyxRQUFkLEVBQXdCQyxXQUF4QixFQUFxQztBQUNuQyxNQUFNQyxTQUFTLEVBQWY7QUFBQSxNQUNNQyxpQkFBaUJILFNBQVNJLE1BRGhDO0FBQUEsTUFFTUMsZUFBZUYsaUJBQWlCRixXQUZ0Qzs7QUFJQSxPQUFLLElBQUlLLFFBQVEsQ0FBakIsRUFBb0JBLFFBQVFELFlBQTVCLEVBQTBDQyxPQUExQyxFQUFtRDtBQUNqRCxRQUFNQyxRQUFRLEVBQWQ7O0FBRUEsU0FBSyxJQUFJQyxTQUFTLENBQWxCLEVBQXFCQSxTQUFTUCxXQUE5QixFQUEyQ08sUUFBM0MsRUFBcUQ7QUFDbkRELFlBQU1DLE1BQU4sSUFBZ0JSLFNBQVNNLFFBQVFMLFdBQVIsR0FBc0JPLE1BQS9CLENBQWhCO0FBQ0Q7O0FBRUROLFdBQU9JLEtBQVAsSUFBZ0JDLEtBQWhCO0FBQ0Q7O0FBRUQsU0FBT0wsTUFBUDtBQUNEOztBQUVELFNBQVNPLE9BQVQsQ0FBaUJULFFBQWpCLEVBQTJCVSxNQUEzQixFQUFtQztBQUNqQyxNQUFNTixTQUFTSixTQUFTSSxNQUF4QjtBQUFBLE1BQ01PLE1BQU1QLFNBQVNNLE1BRHJCO0FBQUEsTUFFTUUsa0JBQWtCWixTQUFTYSxLQUFULENBQWUsQ0FBZixFQUFrQkYsR0FBbEIsQ0FGeEI7QUFBQSxNQUdNRyxtQkFBbUJkLFNBQVNhLEtBQVQsQ0FBZUYsR0FBZixDQUh6Qjs7QUFLQVgsMENBQWVjLGdCQUFmLHNCQUFvQ0YsZUFBcEM7O0FBRUEsU0FBT1osUUFBUDtBQUNEOztBQUVELFNBQVNlLE9BQVQsQ0FBaUJiLE1BQWpCLEVBQXlCO0FBQ3ZCLFNBQU9BLE9BQU9jLE1BQVAsQ0FBYyxVQUFTaEIsUUFBVCxFQUFtQk8sS0FBbkIsRUFBMEI7QUFDN0MsV0FBT1AsU0FBU2lCLE1BQVQsQ0FBZ0JWLEtBQWhCLENBQVA7QUFDRCxHQUZNLEVBRUosRUFGSSxDQUFQO0FBR0Q7O0FBRUQsU0FBU1csU0FBVCxDQUFtQkMsY0FBbkIsRUFBbUM7QUFDakMsU0FBUUEsMEJBQTBCQyxLQUEzQixHQUNHRCxjQURILEdBRUksQ0FBQ0EsY0FBRCxDQUZYO0FBR0Q7O0FBRURFLE9BQU9DLE9BQVAsR0FBaUJDLE9BQU9DLE1BQVAsQ0FBYzFCLGNBQWQsRUFBOEI7QUFDN0NDLFFBQU1BLElBRHVDO0FBRTdDVSxXQUFTQSxPQUZvQztBQUc3Q00sV0FBU0EsT0FIb0M7QUFJN0NHLGFBQVdBO0FBSmtDLENBQTlCLENBQWpCIiwiZmlsZSI6ImFycmF5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBuZWNlc3NhcnkgPSByZXF1aXJlKCduZWNlc3NhcnknKTtcblxuY29uc3QgeyBhcnJheVV0aWxpdGllcyB9ID0gbmVjZXNzYXJ5O1xuXG5mdW5jdGlvbiBjaG9wKGVsZW1lbnRzLCBhcnJheUxlbmd0aCkge1xuICBjb25zdCBhcnJheXMgPSBbXSxcbiAgICAgICAgZWxlbWVudHNMZW5ndGggPSBlbGVtZW50cy5sZW5ndGgsXG4gICAgICAgIGFycmF5c0xlbmd0aCA9IGVsZW1lbnRzTGVuZ3RoIC8gYXJyYXlMZW5ndGg7XG5cbiAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGFycmF5c0xlbmd0aDsgaW5kZXgrKykge1xuICAgIGNvbnN0IGFycmF5ID0gW107XG5cbiAgICBmb3IgKGxldCBvZmZzZXQgPSAwOyBvZmZzZXQgPCBhcnJheUxlbmd0aDsgb2Zmc2V0KyspIHtcbiAgICAgIGFycmF5W29mZnNldF0gPSBlbGVtZW50c1tpbmRleCAqIGFycmF5TGVuZ3RoICsgb2Zmc2V0XTtcbiAgICB9XG5cbiAgICBhcnJheXNbaW5kZXhdID0gYXJyYXk7XG4gIH1cblxuICByZXR1cm4gYXJyYXlzO1xufVxuXG5mdW5jdGlvbiBwZXJtdXRlKGVsZW1lbnRzLCBwbGFjZXMpIHtcbiAgY29uc3QgbGVuZ3RoID0gZWxlbWVudHMubGVuZ3RoLFxuICAgICAgICBjdXQgPSBsZW5ndGggLSBwbGFjZXMsXG4gICAgICAgIGxlYWRpbmdFbGVtZW50cyA9IGVsZW1lbnRzLnNsaWNlKDAsIGN1dCksXG4gICAgICAgIHRyYWlsaW5nRWxlbWVudHMgPSBlbGVtZW50cy5zbGljZShjdXQpO1xuXG4gIGVsZW1lbnRzID0gWy4uLnRyYWlsaW5nRWxlbWVudHMsIC4uLmxlYWRpbmdFbGVtZW50c107XG5cbiAgcmV0dXJuIGVsZW1lbnRzO1xufVxuXG5mdW5jdGlvbiBmbGF0dGVuKGFycmF5cykge1xuICByZXR1cm4gYXJyYXlzLnJlZHVjZShmdW5jdGlvbihlbGVtZW50cywgYXJyYXkpIHtcbiAgICByZXR1cm4gZWxlbWVudHMuY29uY2F0KGFycmF5KTtcbiAgfSwgW10pO1xufVxuXG5mdW5jdGlvbiBndWFyYW50ZWUoYXJyYXlPckVsZW1lbnQpIHtcbiAgcmV0dXJuIChhcnJheU9yRWxlbWVudCBpbnN0YW5jZW9mIEFycmF5KSA/XG4gICAgICAgICAgICBhcnJheU9yRWxlbWVudCA6XG4gICAgICAgICAgICAgW2FycmF5T3JFbGVtZW50XTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuYXNzaWduKGFycmF5VXRpbGl0aWVzLCB7XG4gIGNob3A6IGNob3AsXG4gIHBlcm11dGU6IHBlcm11dGUsXG4gIGZsYXR0ZW46IGZsYXR0ZW4sXG4gIGd1YXJhbnRlZTogZ3VhcmFudGVlXG59KTtcbiJdfQ==