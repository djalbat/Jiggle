'use strict';

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var necessary = require('necessary');

var arrayUtilities = necessary.arrayUtilities;


function chop(elements, arrayLength) {
  var arrays = [],
      elementsLength = elements.length,
      arraysLength = elementsLength / arrayLength;

  for (var index = 0; index < arraysLength; index++) {
    var array = [];

    for (var offset = 0; offset < arrayLength; offset++) {
      array[offset] = elements[index * arrayLength + offset];
    }

    arrays[index] = array;
  }

  return arrays;
}

function dilute(elements, array, test) {
  elements.forEach(function (element, index) {
    var passed = test(element, index);

    if (passed) {
      array.push(element);
    }
  });
}

function permute(elements, places) {
  var length = elements.length,
      cut = length - places,
      leadingElements = elements.slice(0, cut),
      trailingElements = elements.slice(cut);

  elements = [].concat(_toConsumableArray(trailingElements), _toConsumableArray(leadingElements));

  return elements;
}

function flatten(arrays) {
  return arrays.reduce(function (elements, array) {
    return elements.concat(array);
  }, []);
}

module.exports = Object.assign(arrayUtilities, {
  chop: chop,
  dilute: dilute,
  permute: permute,
  flatten: flatten
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvYXJyYXkuanMiXSwibmFtZXMiOlsibmVjZXNzYXJ5IiwicmVxdWlyZSIsImFycmF5VXRpbGl0aWVzIiwiY2hvcCIsImVsZW1lbnRzIiwiYXJyYXlMZW5ndGgiLCJhcnJheXMiLCJlbGVtZW50c0xlbmd0aCIsImxlbmd0aCIsImFycmF5c0xlbmd0aCIsImluZGV4IiwiYXJyYXkiLCJvZmZzZXQiLCJkaWx1dGUiLCJ0ZXN0IiwiZm9yRWFjaCIsImVsZW1lbnQiLCJwYXNzZWQiLCJwdXNoIiwicGVybXV0ZSIsInBsYWNlcyIsImN1dCIsImxlYWRpbmdFbGVtZW50cyIsInNsaWNlIiwidHJhaWxpbmdFbGVtZW50cyIsImZsYXR0ZW4iLCJyZWR1Y2UiLCJjb25jYXQiLCJtb2R1bGUiLCJleHBvcnRzIiwiT2JqZWN0IiwiYXNzaWduIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLElBQU1BLFlBQVlDLFFBQVEsV0FBUixDQUFsQjs7SUFFUUMsYyxHQUFtQkYsUyxDQUFuQkUsYzs7O0FBRVIsU0FBU0MsSUFBVCxDQUFjQyxRQUFkLEVBQXdCQyxXQUF4QixFQUFxQztBQUNuQyxNQUFNQyxTQUFTLEVBQWY7QUFBQSxNQUNNQyxpQkFBaUJILFNBQVNJLE1BRGhDO0FBQUEsTUFFTUMsZUFBZUYsaUJBQWlCRixXQUZ0Qzs7QUFJQSxPQUFLLElBQUlLLFFBQVEsQ0FBakIsRUFBb0JBLFFBQVFELFlBQTVCLEVBQTBDQyxPQUExQyxFQUFtRDtBQUNqRCxRQUFNQyxRQUFRLEVBQWQ7O0FBRUEsU0FBSyxJQUFJQyxTQUFTLENBQWxCLEVBQXFCQSxTQUFTUCxXQUE5QixFQUEyQ08sUUFBM0MsRUFBcUQ7QUFDbkRELFlBQU1DLE1BQU4sSUFBZ0JSLFNBQVNNLFFBQVFMLFdBQVIsR0FBc0JPLE1BQS9CLENBQWhCO0FBQ0Q7O0FBRUROLFdBQU9JLEtBQVAsSUFBZ0JDLEtBQWhCO0FBQ0Q7O0FBRUQsU0FBT0wsTUFBUDtBQUNEOztBQUVELFNBQVNPLE1BQVQsQ0FBZ0JULFFBQWhCLEVBQTBCTyxLQUExQixFQUFpQ0csSUFBakMsRUFBdUM7QUFDckNWLFdBQVNXLE9BQVQsQ0FBaUIsVUFBU0MsT0FBVCxFQUFrQk4sS0FBbEIsRUFBeUI7QUFDeEMsUUFBTU8sU0FBU0gsS0FBS0UsT0FBTCxFQUFjTixLQUFkLENBQWY7O0FBRUEsUUFBSU8sTUFBSixFQUFZO0FBQ1ZOLFlBQU1PLElBQU4sQ0FBV0YsT0FBWDtBQUNEO0FBQ0YsR0FORDtBQU9EOztBQUVELFNBQVNHLE9BQVQsQ0FBaUJmLFFBQWpCLEVBQTJCZ0IsTUFBM0IsRUFBbUM7QUFDakMsTUFBTVosU0FBU0osU0FBU0ksTUFBeEI7QUFBQSxNQUNNYSxNQUFNYixTQUFTWSxNQURyQjtBQUFBLE1BRU1FLGtCQUFrQmxCLFNBQVNtQixLQUFULENBQWUsQ0FBZixFQUFrQkYsR0FBbEIsQ0FGeEI7QUFBQSxNQUdNRyxtQkFBbUJwQixTQUFTbUIsS0FBVCxDQUFlRixHQUFmLENBSHpCOztBQUtBakIsMENBQWVvQixnQkFBZixzQkFBb0NGLGVBQXBDOztBQUVBLFNBQU9sQixRQUFQO0FBQ0Q7O0FBRUQsU0FBU3FCLE9BQVQsQ0FBaUJuQixNQUFqQixFQUF5QjtBQUN2QixTQUFPQSxPQUFPb0IsTUFBUCxDQUFjLFVBQVN0QixRQUFULEVBQW1CTyxLQUFuQixFQUEwQjtBQUM3QyxXQUFPUCxTQUFTdUIsTUFBVCxDQUFnQmhCLEtBQWhCLENBQVA7QUFDRCxHQUZNLEVBRUosRUFGSSxDQUFQO0FBR0Q7O0FBRURpQixPQUFPQyxPQUFQLEdBQWlCQyxPQUFPQyxNQUFQLENBQWM3QixjQUFkLEVBQThCO0FBQzdDQyxRQUFNQSxJQUR1QztBQUU3Q1UsVUFBUUEsTUFGcUM7QUFHN0NNLFdBQVNBLE9BSG9DO0FBSTdDTSxXQUFTQTtBQUpvQyxDQUE5QixDQUFqQiIsImZpbGUiOiJhcnJheS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgbmVjZXNzYXJ5ID0gcmVxdWlyZSgnbmVjZXNzYXJ5Jyk7XG5cbmNvbnN0IHsgYXJyYXlVdGlsaXRpZXMgfSA9IG5lY2Vzc2FyeTtcblxuZnVuY3Rpb24gY2hvcChlbGVtZW50cywgYXJyYXlMZW5ndGgpIHtcbiAgY29uc3QgYXJyYXlzID0gW10sXG4gICAgICAgIGVsZW1lbnRzTGVuZ3RoID0gZWxlbWVudHMubGVuZ3RoLFxuICAgICAgICBhcnJheXNMZW5ndGggPSBlbGVtZW50c0xlbmd0aCAvIGFycmF5TGVuZ3RoO1xuXG4gIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBhcnJheXNMZW5ndGg7IGluZGV4KyspIHtcbiAgICBjb25zdCBhcnJheSA9IFtdO1xuXG4gICAgZm9yIChsZXQgb2Zmc2V0ID0gMDsgb2Zmc2V0IDwgYXJyYXlMZW5ndGg7IG9mZnNldCsrKSB7XG4gICAgICBhcnJheVtvZmZzZXRdID0gZWxlbWVudHNbaW5kZXggKiBhcnJheUxlbmd0aCArIG9mZnNldF07XG4gICAgfVxuXG4gICAgYXJyYXlzW2luZGV4XSA9IGFycmF5O1xuICB9XG5cbiAgcmV0dXJuIGFycmF5cztcbn1cblxuZnVuY3Rpb24gZGlsdXRlKGVsZW1lbnRzLCBhcnJheSwgdGVzdCkge1xuICBlbGVtZW50cy5mb3JFYWNoKGZ1bmN0aW9uKGVsZW1lbnQsIGluZGV4KSB7XG4gICAgY29uc3QgcGFzc2VkID0gdGVzdChlbGVtZW50LCBpbmRleCk7XG5cbiAgICBpZiAocGFzc2VkKSB7XG4gICAgICBhcnJheS5wdXNoKGVsZW1lbnQpO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHBlcm11dGUoZWxlbWVudHMsIHBsYWNlcykge1xuICBjb25zdCBsZW5ndGggPSBlbGVtZW50cy5sZW5ndGgsXG4gICAgICAgIGN1dCA9IGxlbmd0aCAtIHBsYWNlcyxcbiAgICAgICAgbGVhZGluZ0VsZW1lbnRzID0gZWxlbWVudHMuc2xpY2UoMCwgY3V0KSxcbiAgICAgICAgdHJhaWxpbmdFbGVtZW50cyA9IGVsZW1lbnRzLnNsaWNlKGN1dCk7XG5cbiAgZWxlbWVudHMgPSBbLi4udHJhaWxpbmdFbGVtZW50cywgLi4ubGVhZGluZ0VsZW1lbnRzXTtcblxuICByZXR1cm4gZWxlbWVudHM7XG59XG5cbmZ1bmN0aW9uIGZsYXR0ZW4oYXJyYXlzKSB7XG4gIHJldHVybiBhcnJheXMucmVkdWNlKGZ1bmN0aW9uKGVsZW1lbnRzLCBhcnJheSkge1xuICAgIHJldHVybiBlbGVtZW50cy5jb25jYXQoYXJyYXkpO1xuICB9LCBbXSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmFzc2lnbihhcnJheVV0aWxpdGllcywge1xuICBjaG9wOiBjaG9wLFxuICBkaWx1dGU6IGRpbHV0ZSxcbiAgcGVybXV0ZTogcGVybXV0ZSxcbiAgZmxhdHRlbjogZmxhdHRlbiAgXG59KTtcbiJdfQ==