"use strict";

var _constants = require("../constants");

function isApproximatelyEqualToOne(value) {
  var marginOfError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants.DEFAULT_MARGIN_OF_ERROR;
  return isApproximatelyEqualTo(value, 1, marginOfError);
}

function isApproximatelyEqualToZero(value) {
  var marginOfError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants.DEFAULT_MARGIN_OF_ERROR;
  return isApproximatelyEqualTo(value, 0, marginOfError);
}

module.exports = {
  isApproximatelyEqualToOne: isApproximatelyEqualToOne,
  isApproximatelyEqualToZero: isApproximatelyEqualToZero
};

function isApproximatelyEqualTo(valueA, valueB) {
  var marginOfError = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.DEFAULT_MARGIN_OF_ERROR;
  var difference = valueA - valueB,
      absoluteDifference = Math.abs(difference),
      approximatelyEqual = absoluteDifference < marginOfError;
  return approximatelyEqual;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcHJveGltYXRlLmpzIl0sIm5hbWVzIjpbImlzQXBwcm94aW1hdGVseUVxdWFsVG9PbmUiLCJ2YWx1ZSIsIm1hcmdpbk9mRXJyb3IiLCJERUZBVUxUX01BUkdJTl9PRl9FUlJPUiIsImlzQXBwcm94aW1hdGVseUVxdWFsVG8iLCJpc0FwcHJveGltYXRlbHlFcXVhbFRvWmVybyIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWx1ZUEiLCJ2YWx1ZUIiLCJkaWZmZXJlbmNlIiwiYWJzb2x1dGVEaWZmZXJlbmNlIiwiTWF0aCIsImFicyIsImFwcHJveGltYXRlbHlFcXVhbCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUEsU0FBU0EseUJBQVQsQ0FBbUNDLEtBQW5DLEVBQW1GO0FBQUEsTUFBekNDLGFBQXlDLHVFQUF6QkMsa0NBQXlCO0FBQUUsU0FBT0Msc0JBQXNCLENBQUNILEtBQUQsRUFBUSxDQUFSLEVBQVdDLGFBQVgsQ0FBN0I7QUFBeUQ7O0FBRTlJLFNBQVNHLDBCQUFULENBQW9DSixLQUFwQyxFQUFvRjtBQUFBLE1BQXpDQyxhQUF5Qyx1RUFBekJDLGtDQUF5QjtBQUFFLFNBQU9DLHNCQUFzQixDQUFDSCxLQUFELEVBQVEsQ0FBUixFQUFXQyxhQUFYLENBQTdCO0FBQXlEOztBQUUvSUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZQLEVBQUFBLHlCQUF5QixFQUF6QkEseUJBRGU7QUFFZkssRUFBQUEsMEJBQTBCLEVBQTFCQTtBQUZlLENBQWpCOztBQUtBLFNBQVNELHNCQUFULENBQWdDSSxNQUFoQyxFQUF3Q0MsTUFBeEMsRUFBeUY7QUFBQSxNQUF6Q1AsYUFBeUMsdUVBQXpCQyxrQ0FBeUI7QUFDdkYsTUFBTU8sVUFBVSxHQUFHRixNQUFNLEdBQUdDLE1BQTVCO0FBQUEsTUFDTUUsa0JBQWtCLEdBQUdDLElBQUksQ0FBQ0MsR0FBTCxDQUFTSCxVQUFULENBRDNCO0FBQUEsTUFFTUksa0JBQWtCLEdBQUlILGtCQUFrQixHQUFHVCxhQUZqRDtBQUlBLFNBQU9ZLGtCQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgREVGQVVMVF9NQVJHSU5fT0ZfRVJST1IgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5cbmZ1bmN0aW9uIGlzQXBwcm94aW1hdGVseUVxdWFsVG9PbmUodmFsdWUsIG1hcmdpbk9mRXJyb3IgPSBERUZBVUxUX01BUkdJTl9PRl9FUlJPUikgeyByZXR1cm4gaXNBcHByb3hpbWF0ZWx5RXF1YWxUbyh2YWx1ZSwgMSwgbWFyZ2luT2ZFcnJvcik7IH1cblxuZnVuY3Rpb24gaXNBcHByb3hpbWF0ZWx5RXF1YWxUb1plcm8odmFsdWUsIG1hcmdpbk9mRXJyb3IgPSBERUZBVUxUX01BUkdJTl9PRl9FUlJPUikgeyByZXR1cm4gaXNBcHByb3hpbWF0ZWx5RXF1YWxUbyh2YWx1ZSwgMCwgbWFyZ2luT2ZFcnJvcik7IH1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzQXBwcm94aW1hdGVseUVxdWFsVG9PbmUsXG4gIGlzQXBwcm94aW1hdGVseUVxdWFsVG9aZXJvXG59O1xuXG5mdW5jdGlvbiBpc0FwcHJveGltYXRlbHlFcXVhbFRvKHZhbHVlQSwgdmFsdWVCLCBtYXJnaW5PZkVycm9yID0gREVGQVVMVF9NQVJHSU5fT0ZfRVJST1IpIHtcbiAgY29uc3QgZGlmZmVyZW5jZSA9IHZhbHVlQSAtIHZhbHVlQixcbiAgICAgICAgYWJzb2x1dGVEaWZmZXJlbmNlID0gTWF0aC5hYnMoZGlmZmVyZW5jZSksXG4gICAgICAgIGFwcHJveGltYXRlbHlFcXVhbCA9IChhYnNvbHV0ZURpZmZlcmVuY2UgPCBtYXJnaW5PZkVycm9yKTtcblxuICByZXR1cm4gYXBwcm94aW1hdGVseUVxdWFsO1xufVxuIl19