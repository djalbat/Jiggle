"use strict";

function rotateVertices(vertices, rotationQuaternion) {
  var rotatedVertices = vertices.map(function (vertex) {
    var rotatedVertex = vertex.clone(); ///

    rotatedVertex.rotate(rotationQuaternion);
    return rotatedVertex;
  });
  return rotatedVertices;
}

function verticesFromCoordinateTuplesAndIndexTuple(coordinateTuples, indexTuple, Vertex) {
  ///
  var indexes = indexTuple,
      ///
  vertices = indexes.map(function (index) {
    var coordinateTuple = coordinateTuples[index],
        vertex = Vertex.fromCoordinateTuple(coordinateTuple);
    return vertex;
  });
  return vertices;
}

module.exports = {
  rotateVertices: rotateVertices,
  verticesFromCoordinateTuplesAndIndexTuple: verticesFromCoordinateTuplesAndIndexTuple
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcnRpY2VzLmpzIl0sIm5hbWVzIjpbInJvdGF0ZVZlcnRpY2VzIiwidmVydGljZXMiLCJyb3RhdGlvblF1YXRlcm5pb24iLCJyb3RhdGVkVmVydGljZXMiLCJtYXAiLCJ2ZXJ0ZXgiLCJyb3RhdGVkVmVydGV4IiwiY2xvbmUiLCJyb3RhdGUiLCJ2ZXJ0aWNlc0Zyb21Db29yZGluYXRlVHVwbGVzQW5kSW5kZXhUdXBsZSIsImNvb3JkaW5hdGVUdXBsZXMiLCJpbmRleFR1cGxlIiwiVmVydGV4IiwiaW5kZXhlcyIsImluZGV4IiwiY29vcmRpbmF0ZVR1cGxlIiwiZnJvbUNvb3JkaW5hdGVUdXBsZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLFNBQVNBLGNBQVQsQ0FBd0JDLFFBQXhCLEVBQWtDQyxrQkFBbEMsRUFBc0Q7QUFDcEQsTUFBTUMsZUFBZSxHQUFHRixRQUFRLENBQUNHLEdBQVQsQ0FBYSxVQUFDQyxNQUFELEVBQVk7QUFDL0MsUUFBTUMsYUFBYSxHQUFHRCxNQUFNLENBQUNFLEtBQVAsRUFBdEIsQ0FEK0MsQ0FDUjs7QUFFdkNELElBQUFBLGFBQWEsQ0FBQ0UsTUFBZCxDQUFxQk4sa0JBQXJCO0FBRUEsV0FBT0ksYUFBUDtBQUNELEdBTnVCLENBQXhCO0FBUUEsU0FBT0gsZUFBUDtBQUNEOztBQUVELFNBQVNNLHlDQUFULENBQW1EQyxnQkFBbkQsRUFBcUVDLFVBQXJFLEVBQWlGQyxNQUFqRixFQUF5RjtBQUFHO0FBQzFGLE1BQU1DLE9BQU8sR0FBR0YsVUFBaEI7QUFBQSxNQUE0QjtBQUN0QlYsRUFBQUEsUUFBUSxHQUFHWSxPQUFPLENBQUNULEdBQVIsQ0FBWSxVQUFDVSxLQUFELEVBQVc7QUFDaEMsUUFBTUMsZUFBZSxHQUFHTCxnQkFBZ0IsQ0FBQ0ksS0FBRCxDQUF4QztBQUFBLFFBQ01ULE1BQU0sR0FBR08sTUFBTSxDQUFDSSxtQkFBUCxDQUEyQkQsZUFBM0IsQ0FEZjtBQUdBLFdBQU9WLE1BQVA7QUFDRCxHQUxVLENBRGpCO0FBUUEsU0FBT0osUUFBUDtBQUNEOztBQUVEZ0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZsQixFQUFBQSxjQUFjLEVBQWRBLGNBRGU7QUFFZlMsRUFBQUEseUNBQXlDLEVBQXpDQTtBQUZlLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIHJvdGF0ZVZlcnRpY2VzKHZlcnRpY2VzLCByb3RhdGlvblF1YXRlcm5pb24pIHtcbiAgY29uc3Qgcm90YXRlZFZlcnRpY2VzID0gdmVydGljZXMubWFwKCh2ZXJ0ZXgpID0+IHtcbiAgICBjb25zdCByb3RhdGVkVmVydGV4ID0gdmVydGV4LmNsb25lKCk7ICAvLy9cblxuICAgIHJvdGF0ZWRWZXJ0ZXgucm90YXRlKHJvdGF0aW9uUXVhdGVybmlvbik7XG5cbiAgICByZXR1cm4gcm90YXRlZFZlcnRleDtcbiAgfSk7XG5cbiAgcmV0dXJuIHJvdGF0ZWRWZXJ0aWNlcztcbn1cblxuZnVuY3Rpb24gdmVydGljZXNGcm9tQ29vcmRpbmF0ZVR1cGxlc0FuZEluZGV4VHVwbGUoY29vcmRpbmF0ZVR1cGxlcywgaW5kZXhUdXBsZSwgVmVydGV4KSB7ICAvLy9cbiAgY29uc3QgaW5kZXhlcyA9IGluZGV4VHVwbGUsIC8vL1xuICAgICAgICB2ZXJ0aWNlcyA9IGluZGV4ZXMubWFwKChpbmRleCkgPT4ge1xuICAgICAgICAgIGNvbnN0IGNvb3JkaW5hdGVUdXBsZSA9IGNvb3JkaW5hdGVUdXBsZXNbaW5kZXhdLFxuICAgICAgICAgICAgICAgIHZlcnRleCA9IFZlcnRleC5mcm9tQ29vcmRpbmF0ZVR1cGxlKGNvb3JkaW5hdGVUdXBsZSk7XG5cbiAgICAgICAgICByZXR1cm4gdmVydGV4O1xuICAgICAgICB9KTtcblxuICByZXR1cm4gdmVydGljZXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICByb3RhdGVWZXJ0aWNlcyxcbiAgdmVydGljZXNGcm9tQ29vcmRpbmF0ZVR1cGxlc0FuZEluZGV4VHVwbGVcbn07XG4iXX0=