'use strict';

function rotateVertices(vertices, rotationQuaternion) {
  var rotatedVertices = vertices.map(function (vertex) {
    var rotatedVertex = vertex.clone(); ///

    rotatedVertex.rotate(rotationQuaternion);
    return rotatedVertex;
  });
  return rotatedVertices;
}

function verticesFromCoordinateTuplesAndIndexTuple(coordinateTuples, indexTuple, Vertex) {
  ///
  var indexes = indexTuple,
      ///
  vertices = indexes.map(function (index) {
    var coordinateTuple = coordinateTuples[index],
        vertex = Vertex.fromCoordinateTuple(coordinateTuple);
    return vertex;
  });
  return vertices;
}

module.exports = {
  rotateVertices: rotateVertices,
  verticesFromCoordinateTuplesAndIndexTuple: verticesFromCoordinateTuplesAndIndexTuple
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcnRpY2VzLmpzIl0sIm5hbWVzIjpbInJvdGF0ZVZlcnRpY2VzIiwidmVydGljZXMiLCJyb3RhdGlvblF1YXRlcm5pb24iLCJyb3RhdGVkVmVydGljZXMiLCJtYXAiLCJ2ZXJ0ZXgiLCJyb3RhdGVkVmVydGV4IiwiY2xvbmUiLCJyb3RhdGUiLCJ2ZXJ0aWNlc0Zyb21Db29yZGluYXRlVHVwbGVzQW5kSW5kZXhUdXBsZSIsImNvb3JkaW5hdGVUdXBsZXMiLCJpbmRleFR1cGxlIiwiVmVydGV4IiwiaW5kZXhlcyIsImluZGV4IiwiY29vcmRpbmF0ZVR1cGxlIiwiZnJvbUNvb3JkaW5hdGVUdXBsZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLFNBQVNBLGNBQVQsQ0FBd0JDLFFBQXhCLEVBQWtDQyxrQkFBbEMsRUFBc0Q7QUFDcEQsTUFBTUMsZUFBZSxHQUFHRixRQUFRLENBQUNHLEdBQVQsQ0FBYSxVQUFDQyxNQUFELEVBQVk7QUFDL0MsUUFBTUMsYUFBYSxHQUFHRCxNQUFNLENBQUNFLEtBQVAsRUFBdEIsQ0FEK0MsQ0FDUjs7QUFFdkNELElBQUFBLGFBQWEsQ0FBQ0UsTUFBZCxDQUFxQk4sa0JBQXJCO0FBRUEsV0FBT0ksYUFBUDtBQUNELEdBTnVCLENBQXhCO0FBUUEsU0FBT0gsZUFBUDtBQUNEOztBQUVELFNBQVNNLHlDQUFULENBQW1EQyxnQkFBbkQsRUFBcUVDLFVBQXJFLEVBQWlGQyxNQUFqRixFQUF5RjtBQUFHO0FBQzFGLE1BQU1DLE9BQU8sR0FBR0YsVUFBaEI7QUFBQSxNQUE0QjtBQUN0QlYsRUFBQUEsUUFBUSxHQUFHWSxPQUFPLENBQUNULEdBQVIsQ0FBWSxVQUFDVSxLQUFELEVBQVc7QUFDaEMsUUFBTUMsZUFBZSxHQUFHTCxnQkFBZ0IsQ0FBQ0ksS0FBRCxDQUF4QztBQUFBLFFBQ01ULE1BQU0sR0FBR08sTUFBTSxDQUFDSSxtQkFBUCxDQUEyQkQsZUFBM0IsQ0FEZjtBQUdBLFdBQU9WLE1BQVA7QUFDRCxHQUxVLENBRGpCO0FBUUEsU0FBT0osUUFBUDtBQUNEOztBQUVEZ0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZsQixFQUFBQSxjQUFjLEVBQWRBLGNBRGU7QUFFZlMsRUFBQUEseUNBQXlDLEVBQXpDQTtBQUZlLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiByb3RhdGVWZXJ0aWNlcyh2ZXJ0aWNlcywgcm90YXRpb25RdWF0ZXJuaW9uKSB7XG4gIGNvbnN0IHJvdGF0ZWRWZXJ0aWNlcyA9IHZlcnRpY2VzLm1hcCgodmVydGV4KSA9PiB7XG4gICAgY29uc3Qgcm90YXRlZFZlcnRleCA9IHZlcnRleC5jbG9uZSgpOyAgLy8vXG5cbiAgICByb3RhdGVkVmVydGV4LnJvdGF0ZShyb3RhdGlvblF1YXRlcm5pb24pO1xuXG4gICAgcmV0dXJuIHJvdGF0ZWRWZXJ0ZXg7XG4gIH0pO1xuXG4gIHJldHVybiByb3RhdGVkVmVydGljZXM7XG59XG5cbmZ1bmN0aW9uIHZlcnRpY2VzRnJvbUNvb3JkaW5hdGVUdXBsZXNBbmRJbmRleFR1cGxlKGNvb3JkaW5hdGVUdXBsZXMsIGluZGV4VHVwbGUsIFZlcnRleCkgeyAgLy8vXG4gIGNvbnN0IGluZGV4ZXMgPSBpbmRleFR1cGxlLCAvLy9cbiAgICAgICAgdmVydGljZXMgPSBpbmRleGVzLm1hcCgoaW5kZXgpID0+IHtcbiAgICAgICAgICBjb25zdCBjb29yZGluYXRlVHVwbGUgPSBjb29yZGluYXRlVHVwbGVzW2luZGV4XSxcbiAgICAgICAgICAgICAgICB2ZXJ0ZXggPSBWZXJ0ZXguZnJvbUNvb3JkaW5hdGVUdXBsZShjb29yZGluYXRlVHVwbGUpO1xuXG4gICAgICAgICAgcmV0dXJuIHZlcnRleDtcbiAgICAgICAgfSk7XG5cbiAgcmV0dXJuIHZlcnRpY2VzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcm90YXRlVmVydGljZXMsXG4gIHZlcnRpY2VzRnJvbUNvb3JkaW5hdGVUdXBsZXNBbmRJbmRleFR1cGxlXG59O1xuIl19