'use strict';

function rotateVertices(vertices, rotationQuaternion) {
  vertices = vertices.map(function (vertex) {
    vertex = rotateVertex(vertex, rotationQuaternion);

    return vertex;
  });

  return vertices;
}

function verticesFromVertexCoordinatesAndIndexes(vertexCoordinates, indexes, Vertex) {
  ///
  var vertices = indexes.map(function (index) {
    var coordinates = vertexCoordinates[index],
        ///
    vertex = Vertex.fromCoordinates(coordinates);

    return vertex;
  });

  return vertices;
}

module.exports = {
  rotateVertices: rotateVertices,
  verticesFromVertexCoordinatesAndIndexes: verticesFromVertexCoordinatesAndIndexes
};

function rotateVertex(vertex, rotationQuaternion) {
  vertex = vertex.clone(); ///

  vertex.rotate(rotationQuaternion);

  return vertex;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvdmVydGljZXMuanMiXSwibmFtZXMiOlsicm90YXRlVmVydGljZXMiLCJ2ZXJ0aWNlcyIsInJvdGF0aW9uUXVhdGVybmlvbiIsIm1hcCIsInZlcnRleCIsInJvdGF0ZVZlcnRleCIsInZlcnRpY2VzRnJvbVZlcnRleENvb3JkaW5hdGVzQW5kSW5kZXhlcyIsInZlcnRleENvb3JkaW5hdGVzIiwiaW5kZXhlcyIsIlZlcnRleCIsImluZGV4IiwiY29vcmRpbmF0ZXMiLCJmcm9tQ29vcmRpbmF0ZXMiLCJtb2R1bGUiLCJleHBvcnRzIiwiY2xvbmUiLCJyb3RhdGUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLFNBQVNBLGNBQVQsQ0FBd0JDLFFBQXhCLEVBQWtDQyxrQkFBbEMsRUFBc0Q7QUFDcERELGFBQVdBLFNBQVNFLEdBQVQsQ0FBYSxVQUFDQyxNQUFELEVBQVk7QUFDbENBLGFBQVNDLGFBQWFELE1BQWIsRUFBcUJGLGtCQUFyQixDQUFUOztBQUVBLFdBQU9FLE1BQVA7QUFDRCxHQUpVLENBQVg7O0FBTUEsU0FBT0gsUUFBUDtBQUNEOztBQUVELFNBQVNLLHVDQUFULENBQWlEQyxpQkFBakQsRUFBb0VDLE9BQXBFLEVBQTZFQyxNQUE3RSxFQUFxRjtBQUFHO0FBQ3RGLE1BQU1SLFdBQVdPLFFBQVFMLEdBQVIsQ0FBWSxVQUFDTyxLQUFELEVBQVc7QUFDdEMsUUFBTUMsY0FBY0osa0JBQWtCRyxLQUFsQixDQUFwQjtBQUFBLFFBQThDO0FBQ3hDTixhQUFTSyxPQUFPRyxlQUFQLENBQXVCRCxXQUF2QixDQURmOztBQUdBLFdBQU9QLE1BQVA7QUFDRCxHQUxnQixDQUFqQjs7QUFPQSxTQUFPSCxRQUFQO0FBQ0Q7O0FBRURZLE9BQU9DLE9BQVAsR0FBaUI7QUFDZmQsZ0NBRGU7QUFFZk07QUFGZSxDQUFqQjs7QUFLQSxTQUFTRCxZQUFULENBQXNCRCxNQUF0QixFQUE4QkYsa0JBQTlCLEVBQWtEO0FBQ2hERSxXQUFTQSxPQUFPVyxLQUFQLEVBQVQsQ0FEZ0QsQ0FDdEI7O0FBRTFCWCxTQUFPWSxNQUFQLENBQWNkLGtCQUFkOztBQUVBLFNBQU9FLE1BQVA7QUFDRCIsImZpbGUiOiJ2ZXJ0aWNlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gcm90YXRlVmVydGljZXModmVydGljZXMsIHJvdGF0aW9uUXVhdGVybmlvbikge1xuICB2ZXJ0aWNlcyA9IHZlcnRpY2VzLm1hcCgodmVydGV4KSA9PiB7XG4gICAgdmVydGV4ID0gcm90YXRlVmVydGV4KHZlcnRleCwgcm90YXRpb25RdWF0ZXJuaW9uKTtcblxuICAgIHJldHVybiB2ZXJ0ZXg7XG4gIH0pO1xuXG4gIHJldHVybiB2ZXJ0aWNlcztcbn1cblxuZnVuY3Rpb24gdmVydGljZXNGcm9tVmVydGV4Q29vcmRpbmF0ZXNBbmRJbmRleGVzKHZlcnRleENvb3JkaW5hdGVzLCBpbmRleGVzLCBWZXJ0ZXgpIHsgIC8vL1xuICBjb25zdCB2ZXJ0aWNlcyA9IGluZGV4ZXMubWFwKChpbmRleCkgPT4ge1xuICAgIGNvbnN0IGNvb3JkaW5hdGVzID0gdmVydGV4Q29vcmRpbmF0ZXNbaW5kZXhdLCAvLy9cbiAgICAgICAgICB2ZXJ0ZXggPSBWZXJ0ZXguZnJvbUNvb3JkaW5hdGVzKGNvb3JkaW5hdGVzKTtcblxuICAgIHJldHVybiB2ZXJ0ZXg7XG4gIH0pO1xuXG4gIHJldHVybiB2ZXJ0aWNlcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJvdGF0ZVZlcnRpY2VzLFxuICB2ZXJ0aWNlc0Zyb21WZXJ0ZXhDb29yZGluYXRlc0FuZEluZGV4ZXNcbn07XG5cbmZ1bmN0aW9uIHJvdGF0ZVZlcnRleCh2ZXJ0ZXgsIHJvdGF0aW9uUXVhdGVybmlvbikge1xuICB2ZXJ0ZXggPSB2ZXJ0ZXguY2xvbmUoKTsgIC8vL1xuXG4gIHZlcnRleC5yb3RhdGUocm90YXRpb25RdWF0ZXJuaW9uKTtcblxuICByZXR1cm4gdmVydGV4O1xufVxuIl19