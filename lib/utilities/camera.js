'use strict';

var constants = require('../constants'),
    matrixMaths = require('../maths/matrix'),
    arrayUtilities = require('../utilities/array');

var first = arrayUtilities.first,
    second = arrayUtilities.second,
    third = arrayUtilities.third,
    FIELD_OF_VIEW = constants.FIELD_OF_VIEW,
    Z_NEAR = constants.Z_NEAR,
    Z_FAR = constants.Z_FAR,
    identity4 = matrixMaths.identity4,
    invert4 = matrixMaths.invert4,
    rotate4 = matrixMaths.rotate4,
    translate4 = matrixMaths.translate4,
    transpose4 = matrixMaths.transpose4,
    perspective4 = matrixMaths.perspective4;


function calculateOffsetMatrix(offset) {
  var offsetMatrix = identity4();

  offsetMatrix = translate4(offsetMatrix, offset);

  return offsetMatrix;
}

function calculateRotationMatrix(angles) {
  var firstAngle = first(angles),
      secondAngle = second(angles),
      thirdAngle = third(angles),
      xAngle = firstAngle,
      yAngle = secondAngle,
      zAngle = thirdAngle;

  var rotationMatrix = identity4();

  rotationMatrix = rotate4(rotationMatrix, xAngle, [1, 0, 0]);
  rotationMatrix = rotate4(rotationMatrix, yAngle, [0, 1, 0]);
  rotationMatrix = rotate4(rotationMatrix, zAngle, [0, 0, 1]);

  return rotationMatrix;
}

function calculatePositionMatrix(distance) {
  var x = 0,
      y = 0,
      z = -distance;

  var positionMatrix = identity4();

  positionMatrix = translate4(positionMatrix, [x, y, z]);

  return positionMatrix;
}

function calculateProjectionMatrix(width, height) {
  var fieldOfView = FIELD_OF_VIEW,
      aspectRatio = width / height,
      zNear = Z_NEAR,
      zFar = Z_FAR,
      projectionMatrix = perspective4(fieldOfView, aspectRatio, zNear, zFar);

  return projectionMatrix;
}

function calculateNormalMatrix(rotationMatrix) {
  var normalMatrix = invert4(rotationMatrix);

  normalMatrix = transpose4(normalMatrix);

  return normalMatrix;
}

module.exports = {
  calculateOffsetMatrix: calculateOffsetMatrix,
  calculateRotationMatrix: calculateRotationMatrix,
  calculatePositionMatrix: calculatePositionMatrix,
  calculateProjectionMatrix: calculateProjectionMatrix,
  calculateNormalMatrix: calculateNormalMatrix
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvY2FtZXJhLmpzIl0sIm5hbWVzIjpbImNvbnN0YW50cyIsInJlcXVpcmUiLCJtYXRyaXhNYXRocyIsImFycmF5VXRpbGl0aWVzIiwiZmlyc3QiLCJzZWNvbmQiLCJ0aGlyZCIsIkZJRUxEX09GX1ZJRVciLCJaX05FQVIiLCJaX0ZBUiIsImlkZW50aXR5NCIsImludmVydDQiLCJyb3RhdGU0IiwidHJhbnNsYXRlNCIsInRyYW5zcG9zZTQiLCJwZXJzcGVjdGl2ZTQiLCJjYWxjdWxhdGVPZmZzZXRNYXRyaXgiLCJvZmZzZXQiLCJvZmZzZXRNYXRyaXgiLCJjYWxjdWxhdGVSb3RhdGlvbk1hdHJpeCIsImFuZ2xlcyIsImZpcnN0QW5nbGUiLCJzZWNvbmRBbmdsZSIsInRoaXJkQW5nbGUiLCJ4QW5nbGUiLCJ5QW5nbGUiLCJ6QW5nbGUiLCJyb3RhdGlvbk1hdHJpeCIsImNhbGN1bGF0ZVBvc2l0aW9uTWF0cml4IiwiZGlzdGFuY2UiLCJ4IiwieSIsInoiLCJwb3NpdGlvbk1hdHJpeCIsImNhbGN1bGF0ZVByb2plY3Rpb25NYXRyaXgiLCJ3aWR0aCIsImhlaWdodCIsImZpZWxkT2ZWaWV3IiwiYXNwZWN0UmF0aW8iLCJ6TmVhciIsInpGYXIiLCJwcm9qZWN0aW9uTWF0cml4IiwiY2FsY3VsYXRlTm9ybWFsTWF0cml4Iiwibm9ybWFsTWF0cml4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsWUFBWUMsUUFBUSxjQUFSLENBQWxCO0FBQUEsSUFDTUMsY0FBY0QsUUFBUSxpQkFBUixDQURwQjtBQUFBLElBRU1FLGlCQUFpQkYsUUFBUSxvQkFBUixDQUZ2Qjs7SUFJUUcsSyxHQUF5QkQsYyxDQUF6QkMsSztJQUFPQyxNLEdBQWtCRixjLENBQWxCRSxNO0lBQVFDLEssR0FBVUgsYyxDQUFWRyxLO0lBQ2ZDLGEsR0FBaUNQLFMsQ0FBakNPLGE7SUFBZUMsTSxHQUFrQlIsUyxDQUFsQlEsTTtJQUFRQyxLLEdBQVVULFMsQ0FBVlMsSztJQUN2QkMsUyxHQUFzRVIsVyxDQUF0RVEsUztJQUFXQyxPLEdBQTJEVCxXLENBQTNEUyxPO0lBQVNDLE8sR0FBa0RWLFcsQ0FBbERVLE87SUFBU0MsVSxHQUF5Q1gsVyxDQUF6Q1csVTtJQUFZQyxVLEdBQTZCWixXLENBQTdCWSxVO0lBQVlDLFksR0FBaUJiLFcsQ0FBakJhLFk7OztBQUU3RCxTQUFTQyxxQkFBVCxDQUErQkMsTUFBL0IsRUFBdUM7QUFDckMsTUFBSUMsZUFBZVIsV0FBbkI7O0FBRUFRLGlCQUFlTCxXQUFXSyxZQUFYLEVBQXlCRCxNQUF6QixDQUFmOztBQUVBLFNBQU9DLFlBQVA7QUFDRDs7QUFFRCxTQUFTQyx1QkFBVCxDQUFpQ0MsTUFBakMsRUFBeUM7QUFDdkMsTUFBTUMsYUFBYWpCLE1BQU1nQixNQUFOLENBQW5CO0FBQUEsTUFDTUUsY0FBY2pCLE9BQU9lLE1BQVAsQ0FEcEI7QUFBQSxNQUVNRyxhQUFhakIsTUFBTWMsTUFBTixDQUZuQjtBQUFBLE1BR01JLFNBQVNILFVBSGY7QUFBQSxNQUlNSSxTQUFTSCxXQUpmO0FBQUEsTUFLTUksU0FBU0gsVUFMZjs7QUFPQSxNQUFJSSxpQkFBaUJqQixXQUFyQjs7QUFFQWlCLG1CQUFpQmYsUUFBUWUsY0FBUixFQUF3QkgsTUFBeEIsRUFBZ0MsQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsQ0FBaEMsQ0FBakI7QUFDQUcsbUJBQWlCZixRQUFRZSxjQUFSLEVBQXdCRixNQUF4QixFQUFnQyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUFoQyxDQUFqQjtBQUNBRSxtQkFBaUJmLFFBQVFlLGNBQVIsRUFBd0JELE1BQXhCLEVBQWdDLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLENBQWhDLENBQWpCOztBQUVBLFNBQU9DLGNBQVA7QUFDRDs7QUFFRCxTQUFTQyx1QkFBVCxDQUFpQ0MsUUFBakMsRUFBMkM7QUFDekMsTUFBTUMsSUFBSSxDQUFWO0FBQUEsTUFDTUMsSUFBSSxDQURWO0FBQUEsTUFFTUMsSUFBSSxDQUFDSCxRQUZYOztBQUlBLE1BQUlJLGlCQUFpQnZCLFdBQXJCOztBQUVBdUIsbUJBQWlCcEIsV0FBV29CLGNBQVgsRUFBMkIsQ0FBRUgsQ0FBRixFQUFLQyxDQUFMLEVBQVFDLENBQVIsQ0FBM0IsQ0FBakI7O0FBRUEsU0FBT0MsY0FBUDtBQUNEOztBQUVELFNBQVNDLHlCQUFULENBQW1DQyxLQUFuQyxFQUEwQ0MsTUFBMUMsRUFBa0Q7QUFDaEQsTUFBTUMsY0FBYzlCLGFBQXBCO0FBQUEsTUFDTStCLGNBQWNILFFBQVFDLE1BRDVCO0FBQUEsTUFFTUcsUUFBUS9CLE1BRmQ7QUFBQSxNQUdNZ0MsT0FBTy9CLEtBSGI7QUFBQSxNQUlNZ0MsbUJBQW1CMUIsYUFBYXNCLFdBQWIsRUFBMEJDLFdBQTFCLEVBQXVDQyxLQUF2QyxFQUE4Q0MsSUFBOUMsQ0FKekI7O0FBTUEsU0FBT0MsZ0JBQVA7QUFDRDs7QUFFRCxTQUFTQyxxQkFBVCxDQUErQmYsY0FBL0IsRUFBK0M7QUFDN0MsTUFBSWdCLGVBQWVoQyxRQUFRZ0IsY0FBUixDQUFuQjs7QUFFQWdCLGlCQUFlN0IsV0FBVzZCLFlBQVgsQ0FBZjs7QUFFQSxTQUFPQSxZQUFQO0FBQ0Q7O0FBRURDLE9BQU9DLE9BQVAsR0FBaUI7QUFDZjdCLHlCQUF1QkEscUJBRFI7QUFFZkcsMkJBQXlCQSx1QkFGVjtBQUdmUywyQkFBeUJBLHVCQUhWO0FBSWZNLDZCQUEyQkEseUJBSlo7QUFLZlEseUJBQXVCQTtBQUxSLENBQWpCIiwiZmlsZSI6ImNhbWVyYS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgY29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzJyksXG4gICAgICBtYXRyaXhNYXRocyA9IHJlcXVpcmUoJy4uL21hdGhzL21hdHJpeCcpLFxuICAgICAgYXJyYXlVdGlsaXRpZXMgPSByZXF1aXJlKCcuLi91dGlsaXRpZXMvYXJyYXknKTtcblxuY29uc3QgeyBmaXJzdCwgc2Vjb25kLCB0aGlyZCB9ID0gYXJyYXlVdGlsaXRpZXMsXG4gICAgICB7IEZJRUxEX09GX1ZJRVcsIFpfTkVBUiwgWl9GQVIgfSA9IGNvbnN0YW50cyxcbiAgICAgIHsgaWRlbnRpdHk0LCBpbnZlcnQ0LCByb3RhdGU0LCB0cmFuc2xhdGU0LCB0cmFuc3Bvc2U0LCBwZXJzcGVjdGl2ZTQgfSA9IG1hdHJpeE1hdGhzO1xuXG5mdW5jdGlvbiBjYWxjdWxhdGVPZmZzZXRNYXRyaXgob2Zmc2V0KSB7XG4gIGxldCBvZmZzZXRNYXRyaXggPSBpZGVudGl0eTQoKTtcblxuICBvZmZzZXRNYXRyaXggPSB0cmFuc2xhdGU0KG9mZnNldE1hdHJpeCwgb2Zmc2V0KTtcblxuICByZXR1cm4gb2Zmc2V0TWF0cml4O1xufVxuXG5mdW5jdGlvbiBjYWxjdWxhdGVSb3RhdGlvbk1hdHJpeChhbmdsZXMpIHtcbiAgY29uc3QgZmlyc3RBbmdsZSA9IGZpcnN0KGFuZ2xlcyksXG4gICAgICAgIHNlY29uZEFuZ2xlID0gc2Vjb25kKGFuZ2xlcyksXG4gICAgICAgIHRoaXJkQW5nbGUgPSB0aGlyZChhbmdsZXMpLFxuICAgICAgICB4QW5nbGUgPSBmaXJzdEFuZ2xlLFxuICAgICAgICB5QW5nbGUgPSBzZWNvbmRBbmdsZSxcbiAgICAgICAgekFuZ2xlID0gdGhpcmRBbmdsZTtcblxuICBsZXQgcm90YXRpb25NYXRyaXggPSBpZGVudGl0eTQoKTtcblxuICByb3RhdGlvbk1hdHJpeCA9IHJvdGF0ZTQocm90YXRpb25NYXRyaXgsIHhBbmdsZSwgWzEsIDAsIDBdKTtcbiAgcm90YXRpb25NYXRyaXggPSByb3RhdGU0KHJvdGF0aW9uTWF0cml4LCB5QW5nbGUsIFswLCAxLCAwXSk7XG4gIHJvdGF0aW9uTWF0cml4ID0gcm90YXRlNChyb3RhdGlvbk1hdHJpeCwgekFuZ2xlLCBbMCwgMCwgMV0pO1xuXG4gIHJldHVybiByb3RhdGlvbk1hdHJpeDtcbn1cblxuZnVuY3Rpb24gY2FsY3VsYXRlUG9zaXRpb25NYXRyaXgoZGlzdGFuY2UpIHtcbiAgY29uc3QgeCA9IDAsXG4gICAgICAgIHkgPSAwLFxuICAgICAgICB6ID0gLWRpc3RhbmNlO1xuXG4gIGxldCBwb3NpdGlvbk1hdHJpeCA9IGlkZW50aXR5NCgpO1xuXG4gIHBvc2l0aW9uTWF0cml4ID0gdHJhbnNsYXRlNChwb3NpdGlvbk1hdHJpeCwgWyB4LCB5LCB6IF0pO1xuXG4gIHJldHVybiBwb3NpdGlvbk1hdHJpeDtcbn1cblxuZnVuY3Rpb24gY2FsY3VsYXRlUHJvamVjdGlvbk1hdHJpeCh3aWR0aCwgaGVpZ2h0KSB7XG4gIGNvbnN0IGZpZWxkT2ZWaWV3ID0gRklFTERfT0ZfVklFVyxcbiAgICAgICAgYXNwZWN0UmF0aW8gPSB3aWR0aCAvIGhlaWdodCxcbiAgICAgICAgek5lYXIgPSBaX05FQVIsXG4gICAgICAgIHpGYXIgPSBaX0ZBUixcbiAgICAgICAgcHJvamVjdGlvbk1hdHJpeCA9IHBlcnNwZWN0aXZlNChmaWVsZE9mVmlldywgYXNwZWN0UmF0aW8sIHpOZWFyLCB6RmFyKTtcblxuICByZXR1cm4gcHJvamVjdGlvbk1hdHJpeDtcbn1cblxuZnVuY3Rpb24gY2FsY3VsYXRlTm9ybWFsTWF0cml4KHJvdGF0aW9uTWF0cml4KSB7XG4gIGxldCBub3JtYWxNYXRyaXggPSBpbnZlcnQ0KHJvdGF0aW9uTWF0cml4KTtcblxuICBub3JtYWxNYXRyaXggPSB0cmFuc3Bvc2U0KG5vcm1hbE1hdHJpeCk7XG5cbiAgcmV0dXJuIG5vcm1hbE1hdHJpeDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNhbGN1bGF0ZU9mZnNldE1hdHJpeDogY2FsY3VsYXRlT2Zmc2V0TWF0cml4LFxuICBjYWxjdWxhdGVSb3RhdGlvbk1hdHJpeDogY2FsY3VsYXRlUm90YXRpb25NYXRyaXgsXG4gIGNhbGN1bGF0ZVBvc2l0aW9uTWF0cml4OiBjYWxjdWxhdGVQb3NpdGlvbk1hdHJpeCxcbiAgY2FsY3VsYXRlUHJvamVjdGlvbk1hdHJpeDogY2FsY3VsYXRlUHJvamVjdGlvbk1hdHJpeCxcbiAgY2FsY3VsYXRlTm9ybWFsTWF0cml4OiBjYWxjdWxhdGVOb3JtYWxNYXRyaXhcbn07XG4iXX0=