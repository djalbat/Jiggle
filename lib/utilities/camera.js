'use strict';

var constants = require('../constants'),
    matrixMaths = require('../maths/matrix'),
    arrayUtilities = require('../utilities/array');

var first = arrayUtilities.first,
    second = arrayUtilities.second,
    third = arrayUtilities.third,
    FIELD_OF_VIEW = constants.FIELD_OF_VIEW,
    Z_NEAR = constants.Z_NEAR,
    Z_FAR = constants.Z_FAR,
    identity4 = matrixMaths.identity4,
    invert4 = matrixMaths.invert4,
    rotate4 = matrixMaths.rotate4,
    translate4 = matrixMaths.translate4,
    transpose4 = matrixMaths.transpose4,
    perspective4 = matrixMaths.perspective4;


function offsetMatrixFromOffsets(offsets) {
  var offsetMatrix = identity4(); ///

  offsetMatrix = translate4(offsetMatrix, offsets);

  return offsetMatrix;
}

function rotationMatrixFromAngles(angles) {
  var rotationMatrix = identity4(); ///

  var firstAngle = first(angles),
      secondAngle = second(angles),
      thirdAngle = third(angles),
      xAngle = firstAngle,
      yAngle = secondAngle,
      zAngle = thirdAngle;

  rotationMatrix = rotate4(rotationMatrix, xAngle, [1, 0, 0]);
  rotationMatrix = rotate4(rotationMatrix, yAngle, [0, 1, 0]);
  rotationMatrix = rotate4(rotationMatrix, zAngle, [0, 0, 1]);

  return rotationMatrix;
}

function positionMatrixFromNothing() {
  var positionMatrix = identity4(); ///

  return positionMatrix;
}

function positionMatrixFromDistance(distance) {
  var positionMatrix = identity4(); ///

  var x = 0,
      y = 0,
      z = -distance;

  positionMatrix = translate4(positionMatrix, [x, y, z]);

  return positionMatrix;
}

function positionMatrixFromPosition(position) {
  var positionMatrix = identity4(); ///

  positionMatrix = translate4(positionMatrix, position);

  return positionMatrix;
}

function normalMatrixFromRotationMatrix(rotationMatrix) {
  var normalMatrix = invert4(rotationMatrix);

  normalMatrix = transpose4(normalMatrix);

  return normalMatrix;
}

function projectionMatrixFromWidthAndHeight(width, height) {
  var fieldOfView = FIELD_OF_VIEW,
      ///
  aspectRatio = width / height,
      zNear = Z_NEAR,
      ///
  zFar = Z_FAR,
      ///
  projectionMatrix = perspective4(fieldOfView, aspectRatio, zNear, zFar);

  return projectionMatrix;
}

module.exports = {
  offsetMatrixFromOffsets: offsetMatrixFromOffsets,
  rotationMatrixFromAngles: rotationMatrixFromAngles,
  positionMatrixFromNothing: positionMatrixFromNothing,
  positionMatrixFromDistance: positionMatrixFromDistance,
  positionMatrixFromPosition: positionMatrixFromPosition,
  normalMatrixFromRotationMatrix: normalMatrixFromRotationMatrix,
  projectionMatrixFromWidthAndHeight: projectionMatrixFromWidthAndHeight
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvY2FtZXJhLmpzIl0sIm5hbWVzIjpbImNvbnN0YW50cyIsInJlcXVpcmUiLCJtYXRyaXhNYXRocyIsImFycmF5VXRpbGl0aWVzIiwiZmlyc3QiLCJzZWNvbmQiLCJ0aGlyZCIsIkZJRUxEX09GX1ZJRVciLCJaX05FQVIiLCJaX0ZBUiIsImlkZW50aXR5NCIsImludmVydDQiLCJyb3RhdGU0IiwidHJhbnNsYXRlNCIsInRyYW5zcG9zZTQiLCJwZXJzcGVjdGl2ZTQiLCJvZmZzZXRNYXRyaXhGcm9tT2Zmc2V0cyIsIm9mZnNldHMiLCJvZmZzZXRNYXRyaXgiLCJyb3RhdGlvbk1hdHJpeEZyb21BbmdsZXMiLCJhbmdsZXMiLCJyb3RhdGlvbk1hdHJpeCIsImZpcnN0QW5nbGUiLCJzZWNvbmRBbmdsZSIsInRoaXJkQW5nbGUiLCJ4QW5nbGUiLCJ5QW5nbGUiLCJ6QW5nbGUiLCJwb3NpdGlvbk1hdHJpeEZyb21Ob3RoaW5nIiwicG9zaXRpb25NYXRyaXgiLCJwb3NpdGlvbk1hdHJpeEZyb21EaXN0YW5jZSIsImRpc3RhbmNlIiwieCIsInkiLCJ6IiwicG9zaXRpb25NYXRyaXhGcm9tUG9zaXRpb24iLCJwb3NpdGlvbiIsIm5vcm1hbE1hdHJpeEZyb21Sb3RhdGlvbk1hdHJpeCIsIm5vcm1hbE1hdHJpeCIsInByb2plY3Rpb25NYXRyaXhGcm9tV2lkdGhBbmRIZWlnaHQiLCJ3aWR0aCIsImhlaWdodCIsImZpZWxkT2ZWaWV3IiwiYXNwZWN0UmF0aW8iLCJ6TmVhciIsInpGYXIiLCJwcm9qZWN0aW9uTWF0cml4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsWUFBWUMsUUFBUSxjQUFSLENBQWxCO0FBQUEsSUFDTUMsY0FBY0QsUUFBUSxpQkFBUixDQURwQjtBQUFBLElBRU1FLGlCQUFpQkYsUUFBUSxvQkFBUixDQUZ2Qjs7SUFJUUcsSyxHQUF5QkQsYyxDQUF6QkMsSztJQUFPQyxNLEdB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ekI7O0FBTUEsU0FBT0MsZ0JBQVA7QUFDRDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQjtBQUNmaEMsa0RBRGU7QUFFZkcsb0RBRmU7QUFHZlMsc0RBSGU7QUFJZkUsd0RBSmU7QUFLZkssd0RBTGU7QUFNZkUsZ0VBTmU7QUFPZkU7QUFQZSxDQUFqQiIsImZpbGUiOiJjYW1lcmEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGNvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cycpLFxuICAgICAgbWF0cml4TWF0aHMgPSByZXF1aXJlKCcuLi9tYXRocy9tYXRyaXgnKSxcbiAgICAgIGFycmF5VXRpbGl0aWVzID0gcmVxdWlyZSgnLi4vdXRpbGl0aWVzL2FycmF5Jyk7XG5cbmNvbnN0IHsgZmlyc3QsIHNlY29uZCwgdGhpcmQgfSA9IGFycmF5VXRpbGl0aWVzLFxuICAgICAgeyBGSUVMRF9PRl9WSUVXLCBaX05FQVIsIFpfRkFSIH0gPSBjb25zdGFudHMsXG4gICAgICB7IGlkZW50aXR5NCwgaW52ZXJ0NCwgcm90YXRlNCwgdHJhbnNsYXRlNCwgdHJhbnNwb3NlNCwgcGVyc3BlY3RpdmU0IH0gPSBtYXRyaXhNYXRocztcblxuZnVuY3Rpb24gb2Zmc2V0TWF0cml4RnJvbU9mZnNldHMob2Zmc2V0cykge1xuICBsZXQgb2Zmc2V0TWF0cml4ID0gaWRlbnRpdHk0KCk7IC8vL1xuXG4gIG9mZnNldE1hdHJpeCA9IHRyYW5zbGF0ZTQob2Zmc2V0TWF0cml4LCBvZmZzZXRzKTtcblxuICByZXR1cm4gb2Zmc2V0TWF0cml4O1xufVxuXG5mdW5jdGlvbiByb3RhdGlvbk1hdHJpeEZyb21BbmdsZXMoYW5nbGVzKSB7XG4gIGxldCByb3RhdGlvbk1hdHJpeCA9IGlkZW50aXR5NCgpOyAvLy9cblxuICBjb25zdCBmaXJzdEFuZ2xlID0gZmlyc3QoYW5nbGVzKSxcbiAgICAgICAgc2Vjb25kQW5nbGUgPSBzZWNvbmQoYW5nbGVzKSxcbiAgICAgICAgdGhpcmRBbmdsZSA9IHRoaXJkKGFuZ2xlcyksXG4gICAgICAgIHhBbmdsZSA9IGZpcnN0QW5nbGUsXG4gICAgICAgIHlBbmdsZSA9IHNlY29uZEFuZ2xlLFxuICAgICAgICB6QW5nbGUgPSB0aGlyZEFuZ2xlO1xuXG4gIHJvdGF0aW9uTWF0cml4ID0gcm90YXRlNChyb3RhdGlvbk1hdHJpeCwgeEFuZ2xlLCBbMSwgMCwgMF0pO1xuICByb3RhdGlvbk1hdHJpeCA9IHJvdGF0ZTQocm90YXRpb25NYXRyaXgsIHlBbmdsZSwgWzAsIDEsIDBdKTtcbiAgcm90YXRpb25NYXRyaXggPSByb3RhdGU0KHJvdGF0aW9uTWF0cml4LCB6QW5nbGUsIFswLCAwLCAxXSk7XG5cbiAgcmV0dXJuIHJvdGF0aW9uTWF0cml4O1xufVxuXG5mdW5jdGlvbiBwb3NpdGlvbk1hdHJpeEZyb21Ob3RoaW5nKCkge1xuICBsZXQgcG9zaXRpb25NYXRyaXggPSBpZGVudGl0eTQoKTsgLy8vXG5cbiAgcmV0dXJuIHBvc2l0aW9uTWF0cml4O1xufVxuXG5mdW5jdGlvbiBwb3NpdGlvbk1hdHJpeEZyb21EaXN0YW5jZShkaXN0YW5jZSkge1xuICBsZXQgcG9zaXRpb25NYXRyaXggPSBpZGVudGl0eTQoKTsgLy8vXG5cbiAgY29uc3QgeCA9IDAsXG4gICAgICAgIHkgPSAwLFxuICAgICAgICB6ID0gLWRpc3RhbmNlO1xuXG4gIHBvc2l0aW9uTWF0cml4ID0gdHJhbnNsYXRlNChwb3NpdGlvbk1hdHJpeCwgWyB4LCB5LCB6IF0pO1xuXG4gIHJldHVybiBwb3NpdGlvbk1hdHJpeDtcbn1cblxuZnVuY3Rpb24gcG9zaXRpb25NYXRyaXhGcm9tUG9zaXRpb24ocG9zaXRpb24pIHtcbiAgbGV0IHBvc2l0aW9uTWF0cml4ID0gaWRlbnRpdHk0KCk7IC8vL1xuXG4gIHBvc2l0aW9uTWF0cml4ID0gdHJhbnNsYXRlNChwb3NpdGlvbk1hdHJpeCwgcG9zaXRpb24pO1xuXG4gIHJldHVybiBwb3NpdGlvbk1hdHJpeDtcbn1cblxuZnVuY3Rpb24gbm9ybWFsTWF0cml4RnJvbVJvdGF0aW9uTWF0cml4KHJvdGF0aW9uTWF0cml4KSB7XG4gIGxldCBub3JtYWxNYXRyaXggPSBpbnZlcnQ0KHJvdGF0aW9uTWF0cml4KTtcblxuICBub3JtYWxNYXRyaXggPSB0cmFuc3Bvc2U0KG5vcm1hbE1hdHJpeCk7XG5cbiAgcmV0dXJuIG5vcm1hbE1hdHJpeDtcbn1cblxuZnVuY3Rpb24gcHJvamVjdGlvbk1hdHJpeEZyb21XaWR0aEFuZEhlaWdodCh3aWR0aCwgaGVpZ2h0KSB7XG4gIGNvbnN0IGZpZWxkT2ZWaWV3ID0gRklFTERfT0ZfVklFVywgIC8vL1xuICAgICAgICBhc3BlY3RSYXRpbyA9IHdpZHRoIC8gaGVpZ2h0LFxuICAgICAgICB6TmVhciA9IFpfTkVBUiwgLy8vXG4gICAgICAgIHpGYXIgPSBaX0ZBUiwgLy8vXG4gICAgICAgIHByb2plY3Rpb25NYXRyaXggPSBwZXJzcGVjdGl2ZTQoZmllbGRPZlZpZXcsIGFzcGVjdFJhdGlvLCB6TmVhciwgekZhcik7XG5cbiAgcmV0dXJuIHByb2plY3Rpb25NYXRyaXg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBvZmZzZXRNYXRyaXhGcm9tT2Zmc2V0cyxcbiAgcm90YXRpb25NYXRyaXhGcm9tQW5nbGVzLFxuICBwb3NpdGlvbk1hdHJpeEZyb21Ob3RoaW5nLFxuICBwb3NpdGlvbk1hdHJpeEZyb21EaXN0YW5jZSxcbiAgcG9zaXRpb25NYXRyaXhGcm9tUG9zaXRpb24sXG4gIG5vcm1hbE1hdHJpeEZyb21Sb3RhdGlvbk1hdHJpeCxcbiAgcHJvamVjdGlvbk1hdHJpeEZyb21XaWR0aEFuZEhlaWdodFxufTtcbiJdfQ==