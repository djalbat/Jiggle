'use strict';

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var vectorMaths = require('../maths/vector'),
    matrixMaths = require('../maths/matrix'),
    matrixUtilities = require('../utilities/matrix');

var multiply4 = matrixMaths.multiply4,
    transform4 = vectorMaths.transform4,
    scaleMatrixFromScale = matrixUtilities.scaleMatrixFromScale,
    positionMatrixFromPosition = matrixUtilities.positionMatrixFromPosition,
    rotationsMatrixFromRotations = matrixUtilities.rotationsMatrixFromRotations;


function composeTransform(scale, rotations, position) {
  var matrix = null;

  if (scale !== null) {
    var scaleMatrix = scaleMatrixFromScale(scale);

    matrix = matrix === null ? scaleMatrix : multiply4(scaleMatrix, matrix);
  }

  if (rotations !== null) {
    var rotationsMatrix = rotationsMatrixFromRotations(rotations);

    matrix = matrix === null ? rotationsMatrix : multiply4(rotationsMatrix, matrix);
  }

  if (position !== null) {
    var positionMatrix = positionMatrixFromPosition(position);

    matrix = matrix === null ? positionMatrix : multiply4(positionMatrix, matrix);
  }

  var transform = matrix === null ? function (vector) {
    return vector;
  } : function (vector) {
    return transform4([].concat(_toConsumableArray(vector), [1]), matrix).slice(0, 3);
  };

  return transform;
}

module.exports = module.exports = {
  composeTransform: composeTransform
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvdHJhbnNmb3JtLmpzIl0sIm5hbWVzIjpbInZlY3Rvck1hdGhzIiwicmVxdWlyZSIsIm1hdHJpeE1hdGhzIiwibWF0cml4VXRpbGl0aWVzIiwibXVsdGlwbHk0IiwidHJhbnNmb3JtNCIsInNjYWxlTWF0cml4RnJvbVNjYWxlIiwicG9zaXRpb25NYXRyaXhGcm9tUG9zaXRpb24iLCJyb3RhdGlvbnNNYXRyaXhGcm9tUm90YXRpb25zIiwiY29tcG9zZVRyYW5zZm9ybSIsInNjYWxlIiwicm90YXRpb25zIiwicG9zaXRpb24iLCJtYXRyaXgiLCJzY2FsZU1hdHJpeCIsInJvdGF0aW9uc01hdHJpeCIsInBvc2l0aW9uTWF0cml4IiwidHJhbnNmb3JtIiwidmVjdG9yIiwic2xpY2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLElBQU1BLGNBQWNDLFFBQVEsaUJBQVIsQ0FBcEI7QUFBQSxJQUNNQyxjQUFjRCxRQUFRLGlCQUFSLENBRHBCO0FBQUEsSUFFTUUsa0JBQWtCRixRQUFRLHFCQUFSLENBRnhCOztBQUlNLElBQUVHLFNBQUYsR0FBZ0JGLFdBQWhCLENBQUVFLFNBQUY7QUFBQSxJQUNFQyxVQURGLEdBQ2lCTCxXQURqQixDQUNFSyxVQURGO0FBQUEsSUFFRUMsb0JBRkYsR0FFcUZILGVBRnJGLENBRUVHLG9CQUZGO0FBQUEsSUFFd0JDLDBCQUZ4QixHQUVxRkosZUFGckYsQ0FFd0JJLDBCQUZ4QjtBQUFBLElBRW9EQyw0QkFGcEQsR0FFcUZMLGVBRnJGLENBRW9ESyw0QkFGcEQ7OztBQUlOLFNBQVNDLGdCQUFULENBQTBCQyxLQUExQixFQUFpQ0MsU0FBakMsRUFBNENDLFFBQTVDLEVBQXNEO0FBQ3BELE1BQUlDLFNBQVMsSUFBYjs7QUFFQSxNQUFJSCxVQUFVLElBQWQsRUFBb0I7QUFDbEIsUUFBTUksY0FBY1IscUJBQXFCSSxLQUFyQixDQUFwQjs7QUFFQUcsYUFBVUEsV0FBVyxJQUFaLEdBQ0VDLFdBREYsR0FFSVYsVUFBVVUsV0FBVixFQUF1QkQsTUFBdkIsQ0FGYjtBQUdEOztBQUVELE1BQUlGLGNBQWMsSUFBbEIsRUFBd0I7QUFDdEIsUUFBTUksa0JBQWtCUCw2QkFBNkJHLFNBQTdCLENBQXhCOztBQUVBRSxhQUFVQSxXQUFXLElBQVosR0FDRUUsZUFERixHQUVJWCxVQUFVVyxlQUFWLEVBQTJCRixNQUEzQixDQUZiO0FBSUQ7O0FBRUQsTUFBSUQsYUFBYSxJQUFqQixFQUF1QjtBQUNyQixRQUFNSSxpQkFBaUJULDJCQUEyQkssUUFBM0IsQ0FBdkI7O0FBRUFDLGFBQVVBLFdBQVcsSUFBWixHQUNHRyxjQURILEdBRUtaLFVBQVVZLGNBQVYsRUFBMEJILE1BQTFCLENBRmQ7QUFHRDs7QUFFRCxNQUFNSSxZQUFhSixXQUFXLElBQVosR0FDRSxVQUFDSyxNQUFEO0FBQUEsV0FBWUEsTUFBWjtBQUFBLEdBREYsR0FFSSxVQUFDQSxNQUFEO0FBQUEsV0FBWWIsd0NBQWVhLE1BQWYsSUFBdUIsQ0FBdkIsSUFBMkJMLE1BQTNCLEVBQW1DTSxLQUFuQyxDQUF5QyxDQUF6QyxFQUE0QyxDQUE1QyxDQUFaO0FBQUEsR0FGdEI7O0FBSUEsU0FBT0YsU0FBUDtBQUNEOztBQUVERyxPQUFPQyxPQUFQLEdBQWlCRCxPQUFPQyxPQUFQLEdBQWlCO0FBQ2hDWjtBQURnQyxDQUFsQyIsImZpbGUiOiJ0cmFuc2Zvcm0uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHZlY3Rvck1hdGhzID0gcmVxdWlyZSgnLi4vbWF0aHMvdmVjdG9yJyksXG4gICAgICBtYXRyaXhNYXRocyA9IHJlcXVpcmUoJy4uL21hdGhzL21hdHJpeCcpLFxuICAgICAgbWF0cml4VXRpbGl0aWVzID0gcmVxdWlyZSgnLi4vdXRpbGl0aWVzL21hdHJpeCcpO1xuXG5jb25zdCB7IG11bHRpcGx5NCB9ID0gbWF0cml4TWF0aHMsXG4gICAgICB7IHRyYW5zZm9ybTQgfSA9IHZlY3Rvck1hdGhzLFxuICAgICAgeyBzY2FsZU1hdHJpeEZyb21TY2FsZSwgcG9zaXRpb25NYXRyaXhGcm9tUG9zaXRpb24sIHJvdGF0aW9uc01hdHJpeEZyb21Sb3RhdGlvbnMgfSA9IG1hdHJpeFV0aWxpdGllcztcblxuZnVuY3Rpb24gY29tcG9zZVRyYW5zZm9ybShzY2FsZSwgcm90YXRpb25zLCBwb3NpdGlvbikge1xuICBsZXQgbWF0cml4ID0gbnVsbDtcblxuICBpZiAoc2NhbGUgIT09IG51bGwpIHtcbiAgICBjb25zdCBzY2FsZU1hdHJpeCA9IHNjYWxlTWF0cml4RnJvbVNjYWxlKHNjYWxlKTtcblxuICAgIG1hdHJpeCA9IChtYXRyaXggPT09IG51bGwpID9cbiAgICAgICAgICAgICAgIHNjYWxlTWF0cml4IDpcbiAgICAgICAgICAgICAgICAgbXVsdGlwbHk0KHNjYWxlTWF0cml4LCBtYXRyaXgpO1xuICB9XG5cbiAgaWYgKHJvdGF0aW9ucyAhPT0gbnVsbCkge1xuICAgIGNvbnN0IHJvdGF0aW9uc01hdHJpeCA9IHJvdGF0aW9uc01hdHJpeEZyb21Sb3RhdGlvbnMocm90YXRpb25zKTtcblxuICAgIG1hdHJpeCA9IChtYXRyaXggPT09IG51bGwpID9cbiAgICAgICAgICAgICAgIHJvdGF0aW9uc01hdHJpeCA6XG4gICAgICAgICAgICAgICAgIG11bHRpcGx5NChyb3RhdGlvbnNNYXRyaXgsIG1hdHJpeCk7XG5cbiAgfVxuXG4gIGlmIChwb3NpdGlvbiAhPT0gbnVsbCkge1xuICAgIGNvbnN0IHBvc2l0aW9uTWF0cml4ID0gcG9zaXRpb25NYXRyaXhGcm9tUG9zaXRpb24ocG9zaXRpb24pO1xuXG4gICAgbWF0cml4ID0gKG1hdHJpeCA9PT0gbnVsbCkgP1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uTWF0cml4IDpcbiAgICAgICAgICAgICAgICAgIG11bHRpcGx5NChwb3NpdGlvbk1hdHJpeCwgbWF0cml4KTtcbiAgfVxuXG4gIGNvbnN0IHRyYW5zZm9ybSA9IChtYXRyaXggPT09IG51bGwpID9cbiAgICAgICAgICAgICAgICAgICAgICAodmVjdG9yKSA9PiB2ZWN0b3IgOlxuICAgICAgICAgICAgICAgICAgICAgICAgKHZlY3RvcikgPT4gdHJhbnNmb3JtNChbLi4udmVjdG9yLCAxXSwgbWF0cml4KS5zbGljZSgwLCAzKTtcblxuICByZXR1cm4gdHJhbnNmb3JtO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0ge1xuICBjb21wb3NlVHJhbnNmb3JtXG59O1xuIl19