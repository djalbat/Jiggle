'use strict';

var Element = require('./element'),
    CanvasElement = require('./element/canvas'),
    arrayUtilities = require('./utilities/array'),
    FunctionCanvasElement = require('./element/canvas/function');

var guarantee = arrayUtilities.guarantee;


function createElement(firstArgument, properties) {
  for (var _len = arguments.length, childElements = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    childElements[_key - 2] = arguments[_key];
  }

  properties = properties || {}; ///

  var element = void 0;

  if (firstArgument instanceof CanvasElement) {
    element = firstArgument; ///
  } else if (isSubclassOf(firstArgument, Element)) {
    var Class = firstArgument; ///

    Object.assign(properties, {
      childElements: childElements
    });

    element = Class.fromProperties(properties);
  } else if (typeof firstArgument === 'function') {
    var func = firstArgument,
        ///
    _childElements = guarantee(func(properties));

    Object.assign(properties, {
      childElements: _childElements
    });

    element = FunctionCanvasElement.fromProperties(properties);
  }

  return element;
}

var React = {
  createElement: createElement
};

module.exports = React;

function isSubclassOf(argument, Class) {
  var typeOf = false;

  if (argument.name === Class.name) {
    ///
    typeOf = true;
  } else {
    argument = Object.getPrototypeOf(argument); ///

    if (argument) {
      typeOf = isSubclassOf(argument, Class);
    }
  }

  return typeOf;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9yZWFjdC5qcyJdLCJuYW1lcyI6WyJFbGVtZW50IiwicmVxdWlyZSIsIkNhbnZhc0VsZW1lbnQiLCJhcnJheVV0aWxpdGllcyIsIkZ1bmN0aW9uQ2FudmFzRWxlbWVudCIsImd1YXJhbnRlZSIsImNyZWF0ZUVsZW1lbnQiLCJmaXJzdEFyZ3VtZW50IiwicHJvcGVydGllcyIsImNoaWxkRWxlbWVudHMiLCJlbGVtZW50IiwiaXNTdWJjbGFzc09mIiwiQ2xhc3MiLCJPYmplY3QiLCJhc3NpZ24iLCJmcm9tUHJvcGVydGllcyIsImZ1bmMiLCJSZWFjdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcmd1bWVudCIsInR5cGVPZiIsIm5hbWUiLCJnZXRQcm90b3R5cGVPZiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsVUFBVUMsUUFBUSxXQUFSLENBQWhCO0FBQUEsSUFDTUMsZ0JBQWdCRCxRQUFRLGtCQUFSLENBRHRCO0FBQUEsSUFFTUUsaUJBQWlCRixRQUFRLG1CQUFSLENBRnZCO0FBQUEsSUFHTUcsd0JBQXdCSCxRQUFRLDJCQUFSLENBSDlCOztJQUtRSSxTLEdBQWNGLGMsQ0FBZEUsUzs7O0FBRVIsU0FBU0MsYUFBVCxDQUF1QkMsYUFBdkIsRUFBc0NDLFVBQXRDLEVBQW9FO0FBQUEsb0NBQWZDLGFBQWU7QUFBZkEsaUJBQWU7QUFBQTs7QUFDbEVELGVBQWFBLGNBQWMsRUFBM0IsQ0FEa0UsQ0FDbEM7O0FBRWhDLE1BQUlFLGdCQUFKOztBQUVBLE1BQUlILHlCQUF5QkwsYUFBN0IsRUFBNEM7QUFDMUNRLGNBQVVILGFBQVYsQ0FEMEMsQ0FDaEI7QUFDM0IsR0FGRCxNQUVPLElBQUlJLGFBQWFKLGFBQWIsRUFBNEJQLE9BQTVCLENBQUosRUFBMEM7QUFDL0MsUUFBTVksUUFBUUwsYUFBZCxDQUQrQyxDQUNqQjs7QUFFOUJNLFdBQU9DLE1BQVAsQ0FBY04sVUFBZCxFQUEwQjtBQUN4QkM7QUFEd0IsS0FBMUI7O0FBSUFDLGNBQVVFLE1BQU1HLGNBQU4sQ0FBcUJQLFVBQXJCLENBQVY7QUFDRCxHQVJNLE1BUUEsSUFBSSxPQUFPRCxhQUFQLEtBQXlCLFVBQTdCLEVBQXlDO0FBQzlDLFFBQU1TLE9BQU9ULGFBQWI7QUFBQSxRQUE2QjtBQUN2QkUscUJBQWdCSixVQUFVVyxLQUFLUixVQUFMLENBQVYsQ0FEdEI7O0FBR0FLLFdBQU9DLE1BQVAsQ0FBY04sVUFBZCxFQUEwQjtBQUN4QkM7QUFEd0IsS0FBMUI7O0FBSUFDLGNBQVVOLHNCQUFzQlcsY0FBdEIsQ0FBcUNQLFVBQXJDLENBQVY7QUFDRDs7QUFFRCxTQUFPRSxPQUFQO0FBQ0Q7O0FBRUQsSUFBTU8sUUFBUTtBQUNaWCxpQkFBZUE7QUFESCxDQUFkOztBQUlBWSxPQUFPQyxPQUFQLEdBQWlCRixLQUFqQjs7QUFFQSxTQUFTTixZQUFULENBQXNCUyxRQUF0QixFQUFnQ1IsS0FBaEMsRUFBdUM7QUFDckMsTUFBSVMsU0FBUyxLQUFiOztBQUVBLE1BQUlELFNBQVNFLElBQVQsS0FBa0JWLE1BQU1VLElBQTVCLEVBQWtDO0FBQUU7QUFDbENELGFBQVMsSUFBVDtBQUNELEdBRkQsTUFFTztBQUNMRCxlQUFXUCxPQUFPVSxjQUFQLENBQXNCSCxRQUF0QixDQUFYLENBREssQ0FDdUM7O0FBRTVDLFFBQUlBLFFBQUosRUFBYztBQUNaQyxlQUFTVixhQUFhUyxRQUFiLEVBQXVCUixLQUF2QixDQUFUO0FBQ0Q7QUFDRjs7QUFFRCxTQUFPUyxNQUFQO0FBQ0QiLCJmaWxlIjoicmVhY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEVsZW1lbnQgPSByZXF1aXJlKCcuL2VsZW1lbnQnKSxcbiAgICAgIENhbnZhc0VsZW1lbnQgPSByZXF1aXJlKCcuL2VsZW1lbnQvY2FudmFzJyksXG4gICAgICBhcnJheVV0aWxpdGllcyA9IHJlcXVpcmUoJy4vdXRpbGl0aWVzL2FycmF5JyksXG4gICAgICBGdW5jdGlvbkNhbnZhc0VsZW1lbnQgPSByZXF1aXJlKCcuL2VsZW1lbnQvY2FudmFzL2Z1bmN0aW9uJyk7XG5cbmNvbnN0IHsgZ3VhcmFudGVlIH0gPSBhcnJheVV0aWxpdGllcztcblxuZnVuY3Rpb24gY3JlYXRlRWxlbWVudChmaXJzdEFyZ3VtZW50LCBwcm9wZXJ0aWVzLCAuLi5jaGlsZEVsZW1lbnRzKSB7XG4gIHByb3BlcnRpZXMgPSBwcm9wZXJ0aWVzIHx8IHt9OyAgLy8vXG5cbiAgbGV0IGVsZW1lbnQ7XG5cbiAgaWYgKGZpcnN0QXJndW1lbnQgaW5zdGFuY2VvZiBDYW52YXNFbGVtZW50KSB7XG4gICAgZWxlbWVudCA9IGZpcnN0QXJndW1lbnQ7ICAvLy9cbiAgfSBlbHNlIGlmIChpc1N1YmNsYXNzT2YoZmlyc3RBcmd1bWVudCwgRWxlbWVudCkpIHtcbiAgICBjb25zdCBDbGFzcyA9IGZpcnN0QXJndW1lbnQ7ICAvLy9cblxuICAgIE9iamVjdC5hc3NpZ24ocHJvcGVydGllcywge1xuICAgICAgY2hpbGRFbGVtZW50c1xuICAgIH0pO1xuXG4gICAgZWxlbWVudCA9IENsYXNzLmZyb21Qcm9wZXJ0aWVzKHByb3BlcnRpZXMpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBmaXJzdEFyZ3VtZW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc3QgZnVuYyA9IGZpcnN0QXJndW1lbnQsICAvLy9cbiAgICAgICAgICBjaGlsZEVsZW1lbnRzID0gZ3VhcmFudGVlKGZ1bmMocHJvcGVydGllcykpO1xuXG4gICAgT2JqZWN0LmFzc2lnbihwcm9wZXJ0aWVzLCB7XG4gICAgICBjaGlsZEVsZW1lbnRzXG4gICAgfSk7XG5cbiAgICBlbGVtZW50ID0gRnVuY3Rpb25DYW52YXNFbGVtZW50LmZyb21Qcm9wZXJ0aWVzKHByb3BlcnRpZXMpO1xuICB9XG5cbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbmNvbnN0IFJlYWN0ID0ge1xuICBjcmVhdGVFbGVtZW50OiBjcmVhdGVFbGVtZW50XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0O1xuXG5mdW5jdGlvbiBpc1N1YmNsYXNzT2YoYXJndW1lbnQsIENsYXNzKSB7XG4gIGxldCB0eXBlT2YgPSBmYWxzZTtcblxuICBpZiAoYXJndW1lbnQubmFtZSA9PT0gQ2xhc3MubmFtZSkgeyAvLy9cbiAgICB0eXBlT2YgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIGFyZ3VtZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKGFyZ3VtZW50KTsgLy8vXG5cbiAgICBpZiAoYXJndW1lbnQpIHtcbiAgICAgIHR5cGVPZiA9IGlzU3ViY2xhc3NPZihhcmd1bWVudCwgQ2xhc3MpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0eXBlT2Y7XG59XG4iXX0=