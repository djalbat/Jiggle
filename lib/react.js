'use strict';

var Element = require('./element'),
    arrayUtilities = require('./utilities/array'),
    FunctionCanvasElement = require('./element/canvas/function');

var flatten = arrayUtilities.flatten,
    guarantee = arrayUtilities.guarantee;


function createElement(firstArgument, properties) {
  for (var _len = arguments.length, childElements = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    childElements[_key - 2] = arguments[_key];
  }

  properties = properties || {}; ///

  childElements = flatten(childElements); ///

  var element = void 0;

  if (isSubclassOf(firstArgument, Element)) {
    var Class = firstArgument; ///

    Object.assign(properties, {
      childElements: childElements
    });

    element = Class.fromProperties(properties);
  } else if (typeof firstArgument === 'function') {
    var func = firstArgument,
        ///
    _childElements = guarantee(func(properties));

    Object.assign(properties, {
      childElements: _childElements
    });

    element = FunctionCanvasElement.fromProperties(properties);
  }

  return element;
}

var React = {
  createElement: createElement
};

module.exports = React;

function isSubclassOf(argument, Class) {
  var typeOf = false;

  if (argument.name === Class.name) {
    ///
    typeOf = true;
  } else {
    argument = Object.getPrototypeOf(argument); ///

    if (argument) {
      typeOf = isSubclassOf(argument, Class);
    }
  }

  return typeOf;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9yZWFjdC5qcyJdLCJuYW1lcyI6WyJFbGVtZW50IiwicmVxdWlyZSIsImFycmF5VXRpbGl0aWVzIiwiRnVuY3Rpb25DYW52YXNFbGVtZW50IiwiZmxhdHRlbiIsImd1YXJhbnRlZSIsImNyZWF0ZUVsZW1lbnQiLCJmaXJzdEFyZ3VtZW50IiwicHJvcGVydGllcyIsImNoaWxkRWxlbWVudHMiLCJlbGVtZW50IiwiaXNTdWJjbGFzc09mIiwiQ2xhc3MiLCJPYmplY3QiLCJhc3NpZ24iLCJmcm9tUHJvcGVydGllcyIsImZ1bmMiLCJSZWFjdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcmd1bWVudCIsInR5cGVPZiIsIm5hbWUiLCJnZXRQcm90b3R5cGVPZiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsVUFBVUMsUUFBUSxXQUFSLENBQWhCO0FBQUEsSUFDTUMsaUJBQWlCRCxRQUFRLG1CQUFSLENBRHZCO0FBQUEsSUFFTUUsd0JBQXdCRixRQUFRLDJCQUFSLENBRjlCOztJQUlRRyxPLEdBQXVCRixjLENBQXZCRSxPO0lBQVNDLFMsR0FBY0gsYyxDQUFkRyxTOzs7QUFFakIsU0FBU0MsYUFBVCxDQUF1QkMsYUFBdkIsRUFBc0NDLFVBQXRDLEVBQW9FO0FBQUEsb0NBQWZDLGFBQWU7QUFBZkEsaUJBQWU7QUFBQTs7QUFDbEVELGVBQWFBLGNBQWMsRUFBM0IsQ0FEa0UsQ0FDbEM7O0FBRWhDQyxrQkFBZ0JMLFFBQVFLLGFBQVIsQ0FBaEIsQ0FIa0UsQ0FHMUI7O0FBRXhDLE1BQUlDLGdCQUFKOztBQUVBLE1BQUlDLGFBQWFKLGFBQWIsRUFBNEJQLE9BQTVCLENBQUosRUFBMEM7QUFDeEMsUUFBTVksUUFBUUwsYUFBZCxDQUR3QyxDQUNWOztBQUU5Qk0sV0FBT0MsTUFBUCxDQUFjTixVQUFkLEVBQTBCO0FBQ3hCQztBQUR3QixLQUExQjs7QUFJQUMsY0FBVUUsTUFBTUcsY0FBTixDQUFxQlAsVUFBckIsQ0FBVjtBQUNELEdBUkQsTUFRTyxJQUFJLE9BQU9ELGFBQVAsS0FBeUIsVUFBN0IsRUFBeUM7QUFDOUMsUUFBTVMsT0FBT1QsYUFBYjtBQUFBLFFBQTZCO0FBQ3ZCRSxxQkFBZ0JKLFVBQVVXLEtBQUtSLFVBQUwsQ0FBVixDQUR0Qjs7QUFHQUssV0FBT0MsTUFBUCxDQUFjTixVQUFkLEVBQTBCO0FBQ3hCQztBQUR3QixLQUExQjs7QUFJQUMsY0FBVVAsc0JBQXNCWSxjQUF0QixDQUFxQ1AsVUFBckMsQ0FBVjtBQUNEOztBQUVELFNBQU9FLE9BQVA7QUFDRDs7QUFFRCxJQUFNTyxRQUFRO0FBQ1pYLGlCQUFlQTtBQURILENBQWQ7O0FBSUFZLE9BQU9DLE9BQVAsR0FBaUJGLEtBQWpCOztBQUVBLFNBQVNOLFlBQVQsQ0FBc0JTLFFBQXRCLEVBQWdDUixLQUFoQyxFQUF1QztBQUNyQyxNQUFJUyxTQUFTLEtBQWI7O0FBRUEsTUFBSUQsU0FBU0UsSUFBVCxLQUFrQlYsTUFBTVUsSUFBNUIsRUFBa0M7QUFBRTtBQUNsQ0QsYUFBUyxJQUFUO0FBQ0QsR0FGRCxNQUVPO0FBQ0xELGVBQVdQLE9BQU9VLGNBQVAsQ0FBc0JILFFBQXRCLENBQVgsQ0FESyxDQUN1Qzs7QUFFNUMsUUFBSUEsUUFBSixFQUFjO0FBQ1pDLGVBQVNWLGFBQWFTLFFBQWIsRUFBdUJSLEtBQXZCLENBQVQ7QUFDRDtBQUNGOztBQUVELFNBQU9TLE1BQVA7QUFDRCIsImZpbGUiOiJyZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgRWxlbWVudCA9IHJlcXVpcmUoJy4vZWxlbWVudCcpLFxuICAgICAgYXJyYXlVdGlsaXRpZXMgPSByZXF1aXJlKCcuL3V0aWxpdGllcy9hcnJheScpLFxuICAgICAgRnVuY3Rpb25DYW52YXNFbGVtZW50ID0gcmVxdWlyZSgnLi9lbGVtZW50L2NhbnZhcy9mdW5jdGlvbicpO1xuXG5jb25zdCB7IGZsYXR0ZW4sIGd1YXJhbnRlZSB9ID0gYXJyYXlVdGlsaXRpZXM7XG5cbmZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQoZmlyc3RBcmd1bWVudCwgcHJvcGVydGllcywgLi4uY2hpbGRFbGVtZW50cykge1xuICBwcm9wZXJ0aWVzID0gcHJvcGVydGllcyB8fCB7fTsgIC8vL1xuXG4gIGNoaWxkRWxlbWVudHMgPSBmbGF0dGVuKGNoaWxkRWxlbWVudHMpOyAvLy9cblxuICBsZXQgZWxlbWVudDtcblxuICBpZiAoaXNTdWJjbGFzc09mKGZpcnN0QXJndW1lbnQsIEVsZW1lbnQpKSB7XG4gICAgY29uc3QgQ2xhc3MgPSBmaXJzdEFyZ3VtZW50OyAgLy8vXG5cbiAgICBPYmplY3QuYXNzaWduKHByb3BlcnRpZXMsIHtcbiAgICAgIGNoaWxkRWxlbWVudHNcbiAgICB9KTtcblxuICAgIGVsZW1lbnQgPSBDbGFzcy5mcm9tUHJvcGVydGllcyhwcm9wZXJ0aWVzKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZmlyc3RBcmd1bWVudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnN0IGZ1bmMgPSBmaXJzdEFyZ3VtZW50LCAgLy8vXG4gICAgICAgICAgY2hpbGRFbGVtZW50cyA9IGd1YXJhbnRlZShmdW5jKHByb3BlcnRpZXMpKTtcblxuICAgIE9iamVjdC5hc3NpZ24ocHJvcGVydGllcywge1xuICAgICAgY2hpbGRFbGVtZW50c1xuICAgIH0pO1xuXG4gICAgZWxlbWVudCA9IEZ1bmN0aW9uQ2FudmFzRWxlbWVudC5mcm9tUHJvcGVydGllcyhwcm9wZXJ0aWVzKTtcbiAgfVxuXG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5jb25zdCBSZWFjdCA9IHtcbiAgY3JlYXRlRWxlbWVudDogY3JlYXRlRWxlbWVudFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdDtcblxuZnVuY3Rpb24gaXNTdWJjbGFzc09mKGFyZ3VtZW50LCBDbGFzcykge1xuICBsZXQgdHlwZU9mID0gZmFsc2U7XG5cbiAgaWYgKGFyZ3VtZW50Lm5hbWUgPT09IENsYXNzLm5hbWUpIHsgLy8vXG4gICAgdHlwZU9mID0gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICBhcmd1bWVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihhcmd1bWVudCk7IC8vL1xuXG4gICAgaWYgKGFyZ3VtZW50KSB7XG4gICAgICB0eXBlT2YgPSBpc1N1YmNsYXNzT2YoYXJndW1lbnQsIENsYXNzKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHlwZU9mO1xufVxuIl19