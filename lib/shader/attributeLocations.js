'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var offsetMatrixName = 'uOffsetMatrix',
    rotationMatrixName = 'uRotationMatrix',
    positionMatrixName = 'uPositionMatrix',
    projectionMatrixName = 'uPerspectiveMatrix',
    normalMatrixName = 'uNormalMatrix';

var UniformLocationMap = function () {
  function UniformLocationMap(offsetMatrixUniformLocation, rotationMatrixUniformLocation, positionMatrixUniformLocation, projectionMatrixUniformLocation, normalMatrixUniformLocation) {
    _classCallCheck(this, UniformLocationMap);

    this.offsetMatrixUniformLocation = offsetMatrixUniformLocation;
    this.rotationMatrixUniformLocation = rotationMatrixUniformLocation;
    this.positionMatrixUniformLocation = positionMatrixUniformLocation;
    this.projectionMatrixUniformLocation = projectionMatrixUniformLocation;
    this.normalMatrixUniformLocation = normalMatrixUniformLocation;
  }

  _createClass(UniformLocationMap, null, [{
    key: 'fromProgram',
    value: function fromProgram(program, canvas) {
      var offsetMatrixUniformLocation = canvas.getUniformLocation(program, offsetMatrixName),
          rotationMatrixUniformLocation = canvas.getUniformLocation(program, rotationMatrixName),
          positionMatrixUniformLocation = canvas.getUniformLocation(program, positionMatrixName),
          projectionMatrixUniformLocation = canvas.getUniformLocation(program, projectionMatrixName),
          normalMatrixUniformLocation = canvas.getUniformLocation(program, normalMatrixName),
          uniformLocationMap = new UniformLocationMap(offsetMatrixUniformLocation, rotationMatrixUniformLocation, positionMatrixUniformLocation, projectionMatrixUniformLocation, normalMatrixUniformLocation);

      return uniformLocationMap;
    }
  }]);

  return UniformLocationMap;
}();

module.exports = UniformLocationMap;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9zaGFkZXIvYXR0cmlidXRlTG9jYXRpb25zLmpzIl0sIm5hbWVzIjpbIm9mZnNldE1hdHJpeE5hbWUiLCJyb3RhdGlvbk1hdHJpeE5hbWUiLCJwb3NpdGlvbk1hdHJpeE5hbWUiLCJwcm9qZWN0aW9uTWF0cml4TmFtZSIsIm5vcm1hbE1hdHJpeE5hbWUiLCJVbmlmb3JtTG9jYXRpb25NYXAiLCJvZmZzZXRNYXRyaXhVbmlmb3JtTG9jYXRpb24iLCJyb3RhdGlvbk1hdHJpeFVuaWZvcm1Mb2NhdGlvbiIsInBvc2l0aW9uTWF0cml4VW5pZm9ybUxvY2F0aW9uIiwicHJvamVjdGlvbk1hdHJpeFVuaWZvcm1Mb2NhdGlvbiIsIm5vcm1hbE1hdHJpeFVuaWZvcm1Mb2NhdGlvbiIsInByb2dyYW0iLCJjYW52YXMiLCJnZXRVbmlmb3JtTG9jYXRpb24iLCJ1bmlmb3JtTG9jYXRpb25NYXAiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBRUEsSUFBTUEsbUJBQW1CLGVBQXpCO0FBQUEsSUFDTUMscUJBQXFCLGlCQUQzQjtBQUFBLElBRU1DLHFCQUFxQixpQkFGM0I7QUFBQSxJQUdNQyx1QkFBdUIsb0JBSDdCO0FBQUEsSUFJTUMsbUJBQW1CLGVBSnpCOztJQU1NQyxrQjtBQUNKLDhCQUFZQywyQkFBWixFQUF5Q0MsNkJBQXpDLEVBQXdFQyw2QkFBeEUsRUFBdUdDLCtCQUF2RyxFQUF3SUMsMkJBQXhJLEVBQXFLO0FBQUE7O0FBQ25LLFNBQUtKLDJCQUFMLEdBQW1DQSwyQkFBbkM7QUFDQSxTQUFLQyw2QkFBTCxHQUFxQ0EsNkJBQXJDO0FBQ0EsU0FBS0MsNkJBQUwsR0FBcUNBLDZCQUFyQztBQUNBLFNBQUtDLCtCQUFMLEdBQXVDQSwrQkFBdkM7QUFDQSxTQUFLQywyQkFBTCxHQUFtQ0EsMkJBQW5DO0FBQ0Q7Ozs7Z0NBRWtCQyxPLEVBQVNDLE0sRUFBUTtBQUNsQyxVQUFNTiw4QkFBOEJNLE9BQU9DLGtCQUFQLENBQTBCRixPQUExQixFQUFtQ1gsZ0JBQW5DLENBQXBDO0FBQUEsVUFDTU8sZ0NBQWdDSyxPQUFPQyxrQkFBUCxDQUEwQkYsT0FBMUIsRUFBbUNWLGtCQUFuQyxDQUR0QztBQUFBLFVBRU1PLGdDQUFnQ0ksT0FBT0Msa0JBQVAsQ0FBMEJGLE9BQTFCLEVBQW1DVCxrQkFBbkMsQ0FGdEM7QUFBQSxVQUdNTyxrQ0FBa0NHLE9BQU9DLGtCQUFQLENBQTBCRixPQUExQixFQUFtQ1Isb0JBQW5DLENBSHhDO0FBQUEsVUFJTU8sOEJBQThCRSxPQUFPQyxrQkFBUCxDQUEwQkYsT0FBMUIsRUFBbUNQLGdCQUFuQyxDQUpwQztBQUFBLFVBS01VLHFCQUFxQixJQUFJVCxrQkFBSixDQUF1QkMsMkJBQXZCLEVBQW9EQyw2QkFBcEQsRUFBbUZDLDZCQUFuRixFQUFrSEMsK0JBQWxILEVBQW1KQywyQkFBbkosQ0FMM0I7O0FBT0EsYUFBT0ksa0JBQVA7QUFDRDs7Ozs7O0FBR0hDLE9BQU9DLE9BQVAsR0FBaUJYLGtCQUFqQiIsImZpbGUiOiJhdHRyaWJ1dGVMb2NhdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IG9mZnNldE1hdHJpeE5hbWUgPSAndU9mZnNldE1hdHJpeCcsXG4gICAgICByb3RhdGlvbk1hdHJpeE5hbWUgPSAndVJvdGF0aW9uTWF0cml4JyxcbiAgICAgIHBvc2l0aW9uTWF0cml4TmFtZSA9ICd1UG9zaXRpb25NYXRyaXgnLFxuICAgICAgcHJvamVjdGlvbk1hdHJpeE5hbWUgPSAndVBlcnNwZWN0aXZlTWF0cml4JyxcbiAgICAgIG5vcm1hbE1hdHJpeE5hbWUgPSAndU5vcm1hbE1hdHJpeCc7XG5cbmNsYXNzIFVuaWZvcm1Mb2NhdGlvbk1hcCB7XG4gIGNvbnN0cnVjdG9yKG9mZnNldE1hdHJpeFVuaWZvcm1Mb2NhdGlvbiwgcm90YXRpb25NYXRyaXhVbmlmb3JtTG9jYXRpb24sIHBvc2l0aW9uTWF0cml4VW5pZm9ybUxvY2F0aW9uLCBwcm9qZWN0aW9uTWF0cml4VW5pZm9ybUxvY2F0aW9uLCBub3JtYWxNYXRyaXhVbmlmb3JtTG9jYXRpb24pIHtcbiAgICB0aGlzLm9mZnNldE1hdHJpeFVuaWZvcm1Mb2NhdGlvbiA9IG9mZnNldE1hdHJpeFVuaWZvcm1Mb2NhdGlvbjtcbiAgICB0aGlzLnJvdGF0aW9uTWF0cml4VW5pZm9ybUxvY2F0aW9uID0gcm90YXRpb25NYXRyaXhVbmlmb3JtTG9jYXRpb247XG4gICAgdGhpcy5wb3NpdGlvbk1hdHJpeFVuaWZvcm1Mb2NhdGlvbiA9IHBvc2l0aW9uTWF0cml4VW5pZm9ybUxvY2F0aW9uO1xuICAgIHRoaXMucHJvamVjdGlvbk1hdHJpeFVuaWZvcm1Mb2NhdGlvbiA9IHByb2plY3Rpb25NYXRyaXhVbmlmb3JtTG9jYXRpb247XG4gICAgdGhpcy5ub3JtYWxNYXRyaXhVbmlmb3JtTG9jYXRpb24gPSBub3JtYWxNYXRyaXhVbmlmb3JtTG9jYXRpb247XG4gIH1cbiAgXG4gIHN0YXRpYyBmcm9tUHJvZ3JhbShwcm9ncmFtLCBjYW52YXMpIHtcbiAgICBjb25zdCBvZmZzZXRNYXRyaXhVbmlmb3JtTG9jYXRpb24gPSBjYW52YXMuZ2V0VW5pZm9ybUxvY2F0aW9uKHByb2dyYW0sIG9mZnNldE1hdHJpeE5hbWUpLFxuICAgICAgICAgIHJvdGF0aW9uTWF0cml4VW5pZm9ybUxvY2F0aW9uID0gY2FudmFzLmdldFVuaWZvcm1Mb2NhdGlvbihwcm9ncmFtLCByb3RhdGlvbk1hdHJpeE5hbWUpLFxuICAgICAgICAgIHBvc2l0aW9uTWF0cml4VW5pZm9ybUxvY2F0aW9uID0gY2FudmFzLmdldFVuaWZvcm1Mb2NhdGlvbihwcm9ncmFtLCBwb3NpdGlvbk1hdHJpeE5hbWUpLFxuICAgICAgICAgIHByb2plY3Rpb25NYXRyaXhVbmlmb3JtTG9jYXRpb24gPSBjYW52YXMuZ2V0VW5pZm9ybUxvY2F0aW9uKHByb2dyYW0sIHByb2plY3Rpb25NYXRyaXhOYW1lKSxcbiAgICAgICAgICBub3JtYWxNYXRyaXhVbmlmb3JtTG9jYXRpb24gPSBjYW52YXMuZ2V0VW5pZm9ybUxvY2F0aW9uKHByb2dyYW0sIG5vcm1hbE1hdHJpeE5hbWUpLFxuICAgICAgICAgIHVuaWZvcm1Mb2NhdGlvbk1hcCA9IG5ldyBVbmlmb3JtTG9jYXRpb25NYXAob2Zmc2V0TWF0cml4VW5pZm9ybUxvY2F0aW9uLCByb3RhdGlvbk1hdHJpeFVuaWZvcm1Mb2NhdGlvbiwgcG9zaXRpb25NYXRyaXhVbmlmb3JtTG9jYXRpb24sIHByb2plY3Rpb25NYXRyaXhVbmlmb3JtTG9jYXRpb24sIG5vcm1hbE1hdHJpeFVuaWZvcm1Mb2NhdGlvbik7XG4gICAgXG4gICAgcmV0dXJuIHVuaWZvcm1Mb2NhdGlvbk1hcDsgICAgXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBVbmlmb3JtTG9jYXRpb25NYXA7XG4iXX0=