'use strict';

function identity2() {
  return [1, 0, 0, 1];
}

function identity3() {
  return [1, 0, 0, 0, 1, 0, 0, 0, 1];
}

function identity4() {
  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
}

function multiply2(matrixA, matrixB) {
  var a0 = matrixA[0],
      a1 = matrixA[1],
      a2 = matrixA[2],
      a3 = matrixA[3],
      b0 = matrixB[0],
      b1 = matrixB[1],
      b2 = matrixB[2],
      b3 = matrixB[3];
  return [a0 * b0 + a2 * b1, a1 * b0 + a3 * b1, a0 * b2 + a2 * b3, a1 * b2 + a3 * b3];
}

function multiply3(matrixA, matrixB) {
  var a0 = matrixA[0],
      a1 = matrixA[1],
      a2 = matrixA[2],
      a3 = matrixA[3],
      a4 = matrixA[4],
      a5 = matrixA[5],
      a6 = matrixA[6],
      a7 = matrixA[7],
      a8 = matrixA[8],
      b0 = matrixB[0],
      b1 = matrixB[1],
      b2 = matrixB[2],
      b3 = matrixB[3],
      b4 = matrixB[4],
      b5 = matrixB[5],
      b6 = matrixB[6],
      b7 = matrixB[7],
      b8 = matrixB[8];
  return [a0 * b0 + a3 * b1 + a6 * b2, a1 * b0 + a4 * b1 + a7 * b2, a2 * b0 + a5 * b1 + a8 * b2, a0 * b3 + a3 * b4 + a6 * b5, a1 * b3 + a4 * b4 + a7 * b5, a2 * b3 + a5 * b4 + a8 * b5, a0 * b6 + a3 * b7 + a6 * b8, a1 * b6 + a4 * b7 + a7 * b8, a2 * b6 + a5 * b7 + a8 * b8];
}

function multiply4(matrixA, matrixB) {
  var a0 = matrixA[0],
      a1 = matrixA[1],
      a2 = matrixA[2],
      a3 = matrixA[3],
      a4 = matrixA[4],
      a5 = matrixA[5],
      a6 = matrixA[6],
      a7 = matrixA[7],
      a8 = matrixA[8],
      a9 = matrixA[9],
      a10 = matrixA[10],
      a11 = matrixA[11],
      a12 = matrixA[12],
      a13 = matrixA[13],
      a14 = matrixA[14],
      a15 = matrixA[15],
      b0 = matrixB[0],
      b1 = matrixB[1],
      b2 = matrixB[2],
      b3 = matrixB[3],
      b4 = matrixB[4],
      b5 = matrixB[5],
      b6 = matrixB[6],
      b7 = matrixB[7],
      b8 = matrixB[8],
      b9 = matrixB[9],
      b10 = matrixB[10],
      b11 = matrixB[11],
      b12 = matrixB[12],
      b13 = matrixB[13],
      b14 = matrixB[14],
      b15 = matrixB[15];
  return [a0 * b0 + a4 * b1 + a8 * b2 + a12 * b3, a1 * b0 + a5 * b1 + a9 * b2 + a13 * b3, a2 * b0 + a6 * b1 + a10 * b2 + a14 * b3, a3 * b0 + a7 * b1 + a11 * b2 + a15 * b3, a0 * b4 + a4 * b5 + a8 * b6 + a12 * b7, a1 * b4 + a5 * b5 + a9 * b6 + a13 * b7, a2 * b4 + a6 * b5 + a10 * b6 + a14 * b7, a3 * b4 + a7 * b5 + a11 * b6 + a15 * b7, a0 * b8 + a4 * b9 + a8 * b10 + a12 * b11, a1 * b8 + a5 * b9 + a9 * b10 + a13 * b11, a2 * b8 + a6 * b9 + a10 * b10 + a14 * b11, a3 * b8 + a7 * b9 + a11 * b10 + a15 * b11, a0 * b12 + a4 * b13 + a8 * b14 + a12 * b15, a1 * b12 + a5 * b13 + a9 * b14 + a13 * b15, a2 * b12 + a6 * b13 + a10 * b14 + a14 * b15, a3 * b12 + a7 * b13 + a11 * b14 + a15 * b15];
}

function invert2(matrix) {
  var m0 = matrix[0],
      m1 = matrix[1],
      m2 = matrix[2],
      m3 = matrix[3],
      determinant = m0 * m3 - m2 * m1;

  if (determinant !== 0) {
    return [+m3 / determinant, -m1 / determinant, -m2 / determinant, +m0 / determinant];
  }
}

function invert3(matrix) {
  var m00 = matrix[0],
      m01 = matrix[1],
      m02 = matrix[2],
      m10 = matrix[3],
      m11 = matrix[4],
      m12 = matrix[5],
      m20 = matrix[6],
      m21 = matrix[7],
      m22 = matrix[8],
      b01 = m22 * m11 - m12 * m21,
      b11 = -m22 * m10 + m12 * m20,
      b21 = m21 * m10 - m11 * m20,
      determinant = m00 * b01 + m01 * b11 + m02 * b21;

  if (determinant !== 0) {
    return [b01 / determinant, (-m22 * m01 + m02 * m21) / determinant, (m12 * m01 - m02 * m11) / determinant, b11 / determinant, (m22 * m00 - m02 * m20) / determinant, (-m12 * m00 + m02 * m10) / determinant, b21 / determinant, (-m21 * m00 + m01 * m20) / determinant, (m11 * m00 - m01 * m10) / determinant];
  }
}

function invert4(matrix) {
  var m00 = matrix[0],
      m01 = matrix[1],
      m02 = matrix[2],
      m03 = matrix[3],
      m10 = matrix[4],
      m11 = matrix[5],
      m12 = matrix[6],
      m13 = matrix[7],
      m20 = matrix[8],
      m21 = matrix[9],
      m22 = matrix[10],
      m23 = matrix[11],
      m30 = matrix[12],
      m31 = matrix[13],
      m32 = matrix[14],
      m33 = matrix[15],
      b00 = m00 * m11 - m01 * m10,
      b01 = m00 * m12 - m02 * m10,
      b02 = m00 * m13 - m03 * m10,
      b03 = m01 * m12 - m02 * m11,
      b04 = m01 * m13 - m03 * m11,
      b05 = m02 * m13 - m03 * m12,
      b06 = m20 * m31 - m21 * m30,
      b07 = m20 * m32 - m22 * m30,
      b08 = m20 * m33 - m23 * m30,
      b09 = m21 * m32 - m22 * m31,
      b10 = m21 * m33 - m23 * m31,
      b11 = m22 * m33 - m23 * m32,
      determinant = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

  if (determinant !== 0) {
    return [(m11 * b11 - m12 * b10 + m13 * b09) / determinant, (m02 * b10 - m01 * b11 - m03 * b09) / determinant, (m31 * b05 - m32 * b04 + m33 * b03) / determinant, (m22 * b04 - m21 * b05 - m23 * b03) / determinant, (m12 * b08 - m10 * b11 - m13 * b07) / determinant, (m00 * b11 - m02 * b08 + m03 * b07) / determinant, (m32 * b02 - m30 * b05 - m33 * b01) / determinant, (m20 * b05 - m22 * b02 + m23 * b01) / determinant, (m10 * b10 - m11 * b08 + m13 * b06) / determinant, (m01 * b08 - m00 * b10 - m03 * b06) / determinant, (m30 * b04 - m31 * b02 + m33 * b00) / determinant, (m21 * b02 - m20 * b04 - m23 * b00) / determinant, (m11 * b07 - m10 * b09 - m12 * b06) / determinant, (m00 * b09 - m01 * b07 + m02 * b06) / determinant, (m31 * b01 - m30 * b03 - m32 * b00) / determinant, (m20 * b03 - m21 * b01 + m22 * b00) / determinant];
  }
}

function transpose2(matrix) {
  return [matrix[0], matrix[2], matrix[1], matrix[3]];
}

function transpose3(matrix) {
  return [matrix[0], matrix[3], matrix[6], matrix[1], matrix[4], matrix[7], matrix[2], matrix[5], matrix[8]];
}

function transpose4(matrix) {
  return [matrix[0], matrix[4], matrix[8], matrix[12], matrix[1], matrix[5], matrix[9], matrix[13], matrix[2], matrix[6], matrix[10], matrix[14], matrix[3], matrix[7], matrix[11], matrix[15]];
}

function scale4(matrix, vector) {
  var x = vector[0],
      y = vector[1],
      z = vector[2];
  return [matrix[0] * x, matrix[1] * x, matrix[2] * x, matrix[3] * x, matrix[4] * y, matrix[5] * y, matrix[6] * y, matrix[7] * y, matrix[8] * z, matrix[9] * z, matrix[10] * z, matrix[11] * z, matrix[12] * 1, matrix[13] * 1, matrix[14] * 1, matrix[15] * 1];
}

function rotate4(matrix, angle, vector) {
  var x = vector[0],
      y = vector[1],
      z = vector[2];
  var length = Math.sqrt(x * x + y * y + z * z);

  if (length !== 0) {
    x /= length;
    y /= length;
    z /= length;
    var s = Math.sin(angle),
        c = Math.cos(angle),
        t = 1 - c,
        m00 = matrix[0],
        m01 = matrix[1],
        m02 = matrix[2],
        m03 = matrix[3],
        m10 = matrix[4],
        m11 = matrix[5],
        m12 = matrix[6],
        m13 = matrix[7],
        m20 = matrix[8],
        m21 = matrix[9],
        m22 = matrix[10],
        m23 = matrix[11],
        b00 = x * x * t + c,
        b01 = y * x * t + z * s,
        b02 = z * x * t - y * s,
        b10 = x * y * t - z * s,
        b11 = y * y * t + c,
        b12 = z * y * t + x * s,
        b20 = x * z * t + y * s,
        b21 = y * z * t - x * s,
        b22 = z * z * t + c;
    return [m00 * b00 + m10 * b01 + m20 * b02, m01 * b00 + m11 * b01 + m21 * b02, m02 * b00 + m12 * b01 + m22 * b02, m03 * b00 + m13 * b01 + m23 * b02, m00 * b10 + m10 * b11 + m20 * b12, m01 * b10 + m11 * b11 + m21 * b12, m02 * b10 + m12 * b11 + m22 * b12, m03 * b10 + m13 * b11 + m23 * b12, m00 * b20 + m10 * b21 + m20 * b22, m01 * b20 + m11 * b21 + m21 * b22, m02 * b20 + m12 * b21 + m22 * b22, m03 * b20 + m13 * b21 + m23 * b22, matrix[12], matrix[13], matrix[14], matrix[15]];
  }
}

function translate4(matrix, vector) {
  var x = vector[0],
      y = vector[1],
      z = vector[2],
      m00 = matrix[0],
      m01 = matrix[1],
      m02 = matrix[2],
      m03 = matrix[3],
      m10 = matrix[4],
      m11 = matrix[5],
      m12 = matrix[6],
      m13 = matrix[7],
      m20 = matrix[8],
      m21 = matrix[9],
      m22 = matrix[10],
      m23 = matrix[11];
  return [m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m00 * x + m10 * y + m20 * z + matrix[12], m01 * x + m11 * y + m21 * z + matrix[13], m02 * x + m12 * y + m22 * z + matrix[14], m03 * x + m13 * y + m23 * z + matrix[15]];
}

function perspective4(fieldOfView, aspectRatio, zNear, zFar) {
  var f = 1.0 / Math.tan(fieldOfView / 2),
      nf = 1 / (zNear - zFar);
  return [f / aspectRatio, 0, 0, 0, 0, f, 0, 0, 0, 0, (zFar + zNear) * nf, -1, 0, 0, 2 * zFar * zNear * nf, 0];
}

module.exports = {
  identity2: identity2,
  identity3: identity3,
  identity4: identity4,
  multiply2: multiply2,
  multiply3: multiply3,
  multiply4: multiply4,
  invert2: invert2,
  invert3: invert3,
  invert4: invert4,
  scale4: scale4,
  rotate4: rotate4,
  transpose2: transpose2,
  transpose3: transpose3,
  transpose4: transpose4,
  translate4: translate4,
  perspective4: perspective4
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdHJpeC5qcyJdLCJuYW1lcyI6WyJpZGVudGl0eTIiLCJpZGVudGl0eTMiLCJpZGVudGl0eTQiLCJtdWx0aXBseTIiLCJtYXRyaXhBIiwibWF0cml4QiIsImEwIiwiYTEiLCJhMiIsImEzIiwiYjAiLCJiMSIsImIyIiwiYjMiLCJtdWx0aXBseTMiLCJhNCIsImE1IiwiYTYiLCJhNyIsImE4IiwiYjQiLCJiNSIsImI2IiwiYjciLCJiOCIsIm11bHRpcGx5NCIsImE5IiwiYTEwIiwiYTExIiwiYTEyIiwiYTEzIiwiYTE0IiwiYTE1IiwiYjkiLCJiMTAiLCJiMTEiLCJiMTIiLCJiMTMiLCJiMTQiLCJiMTUiLCJpbnZlcnQyIiwibWF0cml4IiwibTAiLCJtMSIsIm0yIiwibTMiLCJkZXRlcm1pbmFudCIsImludmVydDMiLCJtMDAiLCJtMDEiLCJtMDIiLCJtMTAiLCJtMTEiLCJtMTIiLCJtMjAiLCJtMjEiLCJtMjIiLCJiMDEiLCJiMjEiLCJpbnZlcnQ0IiwibTAzIiwibTEzIiwibTIzIiwibTMwIiwibTMxIiwibTMyIiwibTMzIiwiYjAwIiwiYjAyIiwiYjAzIiwiYjA0IiwiYjA1IiwiYjA2IiwiYjA3IiwiYjA4IiwiYjA5IiwidHJhbnNwb3NlMiIsInRyYW5zcG9zZTMiLCJ0cmFuc3Bvc2U0Iiwic2NhbGU0IiwidmVjdG9yIiwieCIsInkiLCJ6Iiwicm90YXRlNCIsImFuZ2xlIiwibGVuZ3RoIiwiTWF0aCIsInNxcnQiLCJzIiwic2luIiwiYyIsImNvcyIsInQiLCJiMjAiLCJiMjIiLCJ0cmFuc2xhdGU0IiwicGVyc3BlY3RpdmU0IiwiZmllbGRPZlZpZXciLCJhc3BlY3RSYXRpbyIsInpOZWFyIiwiekZhciIsImYiLCJ0YW4iLCJuZiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLFNBQVNBLFNBQVQsR0FBcUI7QUFDbkIsU0FBUSxDQUVOLENBRk0sRUFFSCxDQUZHLEVBR04sQ0FITSxFQUdILENBSEcsQ0FBUjtBQU1EOztB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bnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBpZGVudGl0eTIoKSB7XG4gIHJldHVybiAoW1xuXG4gICAgMSwgMCxcbiAgICAwLCAxLFxuXG4gIF0pO1xufVxuXG5mdW5jdGlvbiBpZGVudGl0eTMoKSB7XG4gIHJldHVybiAoW1xuXG4gICAgMSwgMCwgMCxcbiAgICAwLCAxLCAwLFxuICAgIDAsIDAsIDEsXG5cbiAgXSk7XG59XG5cbmZ1bmN0aW9uIGlkZW50aXR5NCgpIHtcbiAgcmV0dXJuIChbXG5cbiAgICAxLCAwLCAwLCAwLFxuICAgIDAsIDEsIDAsIDAsXG4gICAgMCwgMCwgMSwgMCxcbiAgICAwLCAwLCAwLCAxLFxuXG4gIF0pO1xufVxuXG5mdW5jdGlvbiBtdWx0aXBseTIobWF0cml4QSwgbWF0cml4Qikge1xuICBjb25zdCBhMCA9IG1hdHJpeEFbMF0sXG4gICAgICAgIGExID0gbWF0cml4QVsxXSxcbiAgICAgICAgYTIgPSBtYXRyaXhBWzJdLFxuICAgICAgICBhMyA9IG1hdHJpeEFbM10sXG5cbiAgICAgICAgYjAgPSBtYXRyaXhCWzBdLFxuICAgICAgICBiMSA9IG1hdHJpeEJbMV0sXG4gICAgICAgIGIyID0gbWF0cml4QlsyXSxcbiAgICAgICAgYjMgPSBtYXRyaXhCWzNdO1xuXG4gIHJldHVybiAoW1xuXG4gICAgYTAgKiBiMCArIGEyICogYjEsXG4gICAgYTEgKiBiMCArIGEzICogYjEsXG5cbiAgICBhMCAqIGIyICsgYTIgKiBiMyxcbiAgICBhMSAqIGIyICsgYTMgKiBiMyxcblxuICBdKTtcbn1cblxuZnVuY3Rpb24gbXVsdGlwbHkzKG1hdHJpeEEsIG1hdHJpeEIpIHtcbiAgY29uc3QgYTAgPSBtYXRyaXhBWzBdLFxuICAgICAgICBhMSA9IG1hdHJpeEFbMV0sXG4gICAgICAgIGEyID0gbWF0cml4QVsyXSxcbiAgICAgICAgYTMgPSBtYXRyaXhBWzNdLFxuICAgICAgICBhNCA9IG1hdHJpeEFbNF0sXG4gICAgICAgIGE1ID0gbWF0cml4QVs1XSxcbiAgICAgICAgYTYgPSBtYXRyaXhBWzZdLFxuICAgICAgICBhNyA9IG1hdHJpeEFbN10sXG4gICAgICAgIGE4ID0gbWF0cml4QVs4XSxcblxuICAgICAgICBiMCA9IG1hdHJpeEJbMF0sXG4gICAgICAgIGIxID0gbWF0cml4QlsxXSxcbiAgICAgICAgYjIgPSBtYXRyaXhCWzJdLFxuICAgICAgICBiMyA9IG1hdHJpeEJbM10sXG4gICAgICAgIGI0ID0gbWF0cml4Qls0XSxcbiAgICAgICAgYjUgPSBtYXRyaXhCWzVdLFxuICAgICAgICBiNiA9IG1hdHJpeEJbNl0sXG4gICAgICAgIGI3ID0gbWF0cml4Qls3XSxcbiAgICAgICAgYjggPSBtYXRyaXhCWzhdO1xuXG4gIHJldHVybiAoW1xuXG4gICAgYTAgKiBiMCArIGEzICogYjEgKyBhNiAqIGIyLFxuICAgIGExICogYjAgKyBhNCAqIGIxICsgYTcgKiBiMixcbiAgICBhMiAqIGIwICsgYTUgKiBiMSArIGE4ICogYjIsXG5cbiAgICBhMCAqIGIzICsgYTMgKiBiNCArIGE2ICogYjUsXG4gICAgYTEgKiBiMyArIGE0ICogYjQgKyBhNyAqIGI1LFxuICAgIGEyICogYjMgKyBhNSAqIGI0ICsgYTggKiBiNSxcblxuICAgIGEwICogYjYgKyBhMyAqIGI3ICsgYTYgKiBiOCxcbiAgICBhMSAqIGI2ICsgYTQgKiBiNyArIGE3ICogYjgsXG4gICAgYTIgKiBiNiArIGE1ICogYjcgKyBhOCAqIGI4LFxuXG4gIF0pO1xufVxuXG5mdW5jdGlvbiBtdWx0aXBseTQobWF0cml4QSwgbWF0cml4Qikge1xuICBjb25zdCAgYTAgPSBtYXRyaXhBWyAwXSxcbiAgICAgICAgIGExID0gbWF0cml4QVsgMV0sXG4gICAgICAgICBhMiA9IG1hdHJpeEFbIDJdLFxuICAgICAgICAgYTMgPSBtYXRyaXhBWyAzXSxcbiAgICAgICAgIGE0ID0gbWF0cml4QVsgNF0sXG4gICAgICAgICBhNSA9IG1hdHJpeEFbIDVdLFxuICAgICAgICAgYTYgPSBtYXRyaXhBWyA2XSxcbiAgICAgICAgIGE3ID0gbWF0cml4QVsgN10sXG4gICAgICAgICBhOCA9IG1hdHJpeEFbIDhdLFxuICAgICAgICAgYTkgPSBtYXRyaXhBWyA5XSxcbiAgICAgICAgYTEwID0gbWF0cml4QVsxMF0sXG4gICAgICAgIGExMSA9IG1hdHJpeEFbMTFdLFxuICAgICAgICBhMTIgPSBtYXRyaXhBWzEyXSxcbiAgICAgICAgYTEzID0gbWF0cml4QVsxM10sXG4gICAgICAgIGExNCA9IG1hdHJpeEFbMTRdLFxuICAgICAgICBhMTUgPSBtYXRyaXhBWzE1XSxcblxuICAgICAgICAgYjAgPSBtYXRyaXhCWyAwXSxcbiAgICAgICAgIGIxID0gbWF0cml4QlsgMV0sXG4gICAgICAgICBiMiA9IG1hdHJpeEJbIDJdLFxuICAgICAgICAgYjMgPSBtYXRyaXhCWyAzXSxcbiAgICAgICAgIGI0ID0gbWF0cml4QlsgNF0sXG4gICAgICAgICBiNSA9IG1hdHJpeEJbIDVdLFxuICAgICAgICAgYjYgPSBtYXRyaXhCWyA2XSxcbiAgICAgICAgIGI3ID0gbWF0cml4QlsgN10sXG4gICAgICAgICBiOCA9IG1hdHJpeEJbIDhdLFxuICAgICAgICAgYjkgPSBtYXRyaXhCWyA5XSxcbiAgICAgICAgYjEwID0gbWF0cml4QlsxMF0sXG4gICAgICAgIGIxMSA9IG1hdHJpeEJbMTFdLFxuICAgICAgICBiMTIgPSBtYXRyaXhCWzEyXSxcbiAgICAgICAgYjEzID0gbWF0cml4QlsxM10sXG4gICAgICAgIGIxNCA9IG1hdHJpeEJbMTRdLFxuICAgICAgICBiMTUgPSBtYXRyaXhCWzE1XTtcblxuICByZXR1cm4gKFtcblxuICAgIGEwICogIGIwICsgIGE0ICogIGIxICsgIGE4ICogIGIyICsgYTEyICogIGIzLFxuICAgIGExICogIGIwICsgIGE1ICogIGIxICsgIGE5ICogIGIyICsgYTEzICogIGIzLFxuICAgIGEyICogIGIwICsgIGE2ICogIGIxICsgYTEwICogIGIyICsgYTE0ICogIGIzLFxuICAgIGEzICogIGIwICsgIGE3ICogIGIxICsgYTExICogIGIyICsgYTE1ICogIGIzLFxuXG4gICAgYTAgKiAgYjQgKyAgYTQgKiAgYjUgKyAgYTggKiAgYjYgKyBhMTIgKiAgYjcsXG4gICAgYTEgKiAgYjQgKyAgYTUgKiAgYjUgKyAgYTkgKiAgYjYgKyBhMTMgKiAgYjcsXG4gICAgYTIgKiAgYjQgKyAgYTYgKiAgYjUgKyBhMTAgKiAgYjYgKyBhMTQgKiAgYjcsXG4gICAgYTMgKiAgYjQgKyAgYTcgKiAgYjUgKyBhMTEgKiAgYjYgKyBhMTUgKiAgYjcsXG5cbiAgICBhMCAqICBiOCArICBhNCAqICBiOSArICBhOCAqIGIxMCArIGExMiAqIGIxMSxcbiAgICBhMSAqICBiOCArICBhNSAqICBiOSArICBhOSAqIGIxMCArIGExMyAqIGIxMSxcbiAgICBhMiAqICBiOCArICBhNiAqICBiOSArIGExMCAqIGIxMCArIGExNCAqIGIxMSxcbiAgICBhMyAqICBiOCArICBhNyAqICBiOSArIGExMSAqIGIxMCArIGExNSAqIGIxMSxcblxuICAgIGEwICogYjEyICsgIGE0ICogYjEzICsgIGE4ICogYjE0ICsgYTEyICogYjE1LFxuICAgIGExICogYjEyICsgIGE1ICogYjEzICsgIGE5ICogYjE0ICsgYTEzICogYjE1LFxuICAgIGEyICogYjEyICsgIGE2ICogYjEzICsgYTEwICogYjE0ICsgYTE0ICogYjE1LFxuICAgIGEzICogYjEyICsgIGE3ICogYjEzICsgYTExICogYjE0ICsgYTE1ICogYjE1LFxuXG4gIF0pO1xufVxuXG5mdW5jdGlvbiBpbnZlcnQyKG1hdHJpeCkge1xuICBjb25zdCBtMCA9IG1hdHJpeFswXSxcbiAgICAgICAgbTEgPSBtYXRyaXhbMV0sXG4gICAgICAgIG0yID0gbWF0cml4WzJdLFxuICAgICAgICBtMyA9IG1hdHJpeFszXSxcblxuICAgICAgICBkZXRlcm1pbmFudCA9IG0wICogbTMgLSBtMiAqIG0xO1xuXG4gIGlmIChkZXRlcm1pbmFudCAhPT0gMCkge1xuICAgIHJldHVybiAoW1xuXG4gICAgICArbTMgLyBkZXRlcm1pbmFudCwgLW0xIC8gZGV0ZXJtaW5hbnQsXG4gICAgICAtbTIgLyBkZXRlcm1pbmFudCwgK20wIC8gZGV0ZXJtaW5hbnQsXG5cbiAgICBdKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbnZlcnQzKG1hdHJpeCkge1xuICBjb25zdCBtMDAgPSBtYXRyaXhbMF0sIG0wMSA9IG1hdHJpeFsxXSwgbTAyID0gbWF0cml4WzJdLFxuICAgICAgICBtMTAgPSBtYXRyaXhbM10sIG0xMSA9IG1hdHJpeFs0XSwgbTEyID0gbWF0cml4WzVdLFxuICAgICAgICBtMjAgPSBtYXRyaXhbNl0sIG0yMSA9IG1hdHJpeFs3XSwgbTIyID0gbWF0cml4WzhdLFxuXG4gICAgICAgIGIwMSA9ICBtMjIgKiBtMTEgLSBtMTIgKiBtMjEsXG4gICAgICAgIGIxMSA9IC1tMjIgKiBtMTAgKyBtMTIgKiBtMjAsXG4gICAgICAgIGIyMSA9ICBtMjEgKiBtMTAgLSBtMTEgKiBtMjAsXG5cbiAgICAgICAgZGV0ZXJtaW5hbnQgPSBtMDAgKiBiMDEgKyBtMDEgKiBiMTEgKyBtMDIgKiBiMjE7XG5cbiAgaWYgKGRldGVybWluYW50ICE9PSAwKSB7XG4gICAgcmV0dXJuIChbXG5cbiAgICAgIGIwMSAvIGRldGVybWluYW50LCAoLW0yMiAqIG0wMSArIG0wMiAqIG0yMSkgLyBkZXRlcm1pbmFudCwgKCBtMTIgKiBtMDEgLSBtMDIgKiBtMTEpIC8gZGV0ZXJtaW5hbnQsXG4gICAgICBiMTEgLyBkZXRlcm1pbmFudCwgKCBtMjIgKiBtMDAgLSBtMDIgKiBtMjApIC8gZGV0ZXJtaW5hbnQsICgtbTEyICogbTAwICsgbTAyICogbTEwKSAvIGRldGVybWluYW50LFxuICAgICAgYjIxIC8gZGV0ZXJtaW5hbnQsICgtbTIxICogbTAwICsgbTAxICogbTIwKSAvIGRldGVybWluYW50LCAoIG0xMSAqIG0wMCAtIG0wMSAqIG0xMCkgLyBkZXRlcm1pbmFudCxcblxuICAgIF0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGludmVydDQobWF0cml4KSB7XG4gIGNvbnN0IG0wMCA9IG1hdHJpeFsgMF0sIG0wMSA9IG1hdHJpeFsgMV0sIG0wMiA9IG1hdHJpeFsgMl0sIG0wMyA9IG1hdHJpeFsgM10sXG4gICAgICAgIG0xMCA9IG1hdHJpeFsgNF0sIG0xMSA9IG1hdHJpeFsgNV0sIG0xMiA9IG1hdHJpeFsgNl0sIG0xMyA9IG1hdHJpeFsgN10sXG4gICAgICAgIG0yMCA9IG1hdHJpeFsgOF0sIG0yMSA9IG1hdHJpeFsgOV0sIG0yMiA9IG1hdHJpeFsxMF0sIG0yMyA9IG1hdHJpeFsxMV0sXG4gICAgICAgIG0zMCA9IG1hdHJpeFsxMl0sIG0zMSA9IG1hdHJpeFsxM10sIG0zMiA9IG1hdHJpeFsxNF0sIG0zMyA9IG1hdHJpeFsxNV0sXG5cbiAgICAgICAgYjAwID0gbTAwICogbTExIC0gbTAxICogbTEwLFxuICAgICAgICBiMDEgPSBtMDAgKiBtMTIgLSBtMDIgKiBtMTAsXG4gICAgICAgIGIwMiA9IG0wMCAqIG0xMyAtIG0wMyAqIG0xMCxcbiAgICAgICAgYjAzID0gbTAxICogbTEyIC0gbTAyICogbTExLFxuICAgICAgICBiMDQgPSBtMDEgKiBtMTMgLSBtMDMgKiBtMTEsXG4gICAgICAgIGIwNSA9IG0wMiAqIG0xMyAtIG0wMyAqIG0xMixcbiAgICAgICAgYjA2ID0gbTIwICogbTMxIC0gbTIxICogbTMwLFxuICAgICAgICBiMDcgPSBtMjAgKiBtMzIgLSBtMjIgKiBtMzAsXG4gICAgICAgIGIwOCA9IG0yMCAqIG0zMyAtIG0yMyAqIG0zMCxcbiAgICAgICAgYjA5ID0gbTIxICogbTMyIC0gbTIyICogbTMxLFxuICAgICAgICBiMTAgPSBtMjEgKiBtMzMgLSBtMjMgKiBtMzEsXG4gICAgICAgIGIxMSA9IG0yMiAqIG0zMyAtIG0yMyAqIG0zMixcblxuICAgICAgICBkZXRlcm1pbmFudCA9IGIwMCAqIGIxMSAtIGIwMSAqIGIxMCArIGIwMiAqIGIwOSArIGIwMyAqIGIwOCAtIGIwNCAqIGIwNyArIGIwNSAqIGIwNjtcblxuICBpZiAoZGV0ZXJtaW5hbnQgIT09IDApIHtcbiAgICByZXR1cm4gKFtcblxuICAgICAgKG0xMSAqIGIxMSAtIG0xMiAqIGIxMCArIG0xMyAqIGIwOSkgLyBkZXRlcm1pbmFudCwgKG0wMiAqIGIxMCAtIG0wMSAqIGIxMSAtIG0wMyAqIGIwOSkgLyBkZXRlcm1pbmFudCwgKG0zMSAqIGIwNSAtIG0zMiAqIGIwNCArIG0zMyAqIGIwMykgLyBkZXRlcm1pbmFudCwgKG0yMiAqIGIwNCAtIG0yMSAqIGIwNSAtIG0yMyAqIGIwMykgLyBkZXRlcm1pbmFudCxcbiAgICAgIChtMTIgKiBiMDggLSBtMTAgKiBiMTEgLSBtMTMgKiBiMDcpIC8gZGV0ZXJtaW5hbnQsIChtMDAgKiBiMTEgLSBtMDIgKiBiMDggKyBtMDMgKiBiMDcpIC8gZGV0ZXJtaW5hbnQsIChtMzIgKiBiMDIgLSBtMzAgKiBiMDUgLSBtMzMgKiBiMDEpIC8gZGV0ZXJtaW5hbnQsIChtMjAgKiBiMDUgLSBtMjIgKiBiMDIgKyBtMjMgKiBiMDEpIC8gZGV0ZXJtaW5hbnQsXG4gICAgICAobTEwICogYjEwIC0gbTExICogYjA4ICsgbTEzICogYjA2KSAvIGRldGVybWluYW50LCAobTAxICogYjA4IC0gbTAwICogYjEwIC0gbTAzICogYjA2KSAvIGRldGVybWluYW50LCAobTMwICogYjA0IC0gbTMxICogYjAyICsgbTMzICogYjAwKSAvIGRldGVybWluYW50LCAobTIxICogYjAyIC0gbTIwICogYjA0IC0gbTIzICogYjAwKSAvIGRldGVybWluYW50LFxuICAgICAgKG0xMSAqIGIwNyAtIG0xMCAqIGIwOSAtIG0xMiAqIGIwNikgLyBkZXRlcm1pbmFudCwgKG0wMCAqIGIwOSAtIG0wMSAqIGIwNyArIG0wMiAqIGIwNikgLyBkZXRlcm1pbmFudCwgKG0zMSAqIGIwMSAtIG0zMCAqIGIwMyAtIG0zMiAqIGIwMCkgLyBkZXRlcm1pbmFudCwgKG0yMCAqIGIwMyAtIG0yMSAqIGIwMSArIG0yMiAqIGIwMCkgLyBkZXRlcm1pbmFudCxcblxuICAgIF0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIHRyYW5zcG9zZTIobWF0cml4KSB7XG4gIHJldHVybiAoW1xuXG4gICAgbWF0cml4WzBdLCBtYXRyaXhbMl0sXG4gICAgbWF0cml4WzFdLCBtYXRyaXhbM10sXG5cbiAgXSk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zcG9zZTMobWF0cml4KSB7XG4gIHJldHVybiAoW1xuXG4gICAgbWF0cml4WzBdLCBtYXRyaXhbM10sIG1hdHJpeFs2XSxcbiAgICBtYXRyaXhbMV0sIG1hdHJpeFs0XSwgbWF0cml4WzddLFxuICAgIG1hdHJpeFsyXSwgbWF0cml4WzVdLCBtYXRyaXhbOF0sXG5cbiAgXSk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zcG9zZTQobWF0cml4KSB7XG4gIHJldHVybiAoW1xuXG4gICAgbWF0cml4WyAwXSwgbWF0cml4WyA0XSwgbWF0cml4WyA4XSwgbWF0cml4WzEyXSxcbiAgICBtYXRyaXhbIDFdLCBtYXRyaXhbIDVdLCBtYXRyaXhbIDldLCBtYXRyaXhbMTNdLFxuICAgIG1hdHJpeFsgMl0sIG1hdHJpeFsgNl0sIG1hdHJpeFsxMF0sIG1hdHJpeFsxNF0sXG4gICAgbWF0cml4WyAzXSwgbWF0cml4WyA3XSwgbWF0cml4WzExXSwgbWF0cml4WzE1XSxcblxuICBdKTtcbn1cblxuZnVuY3Rpb24gc2NhbGU0KG1hdHJpeCwgdmVjdG9yKSB7XG4gIGNvbnN0IHggPSB2ZWN0b3JbMF0sXG4gICAgICAgIHkgPSB2ZWN0b3JbMV0sXG4gICAgICAgIHogPSB2ZWN0b3JbMl07XG5cbiAgcmV0dXJuIChbXG5cbiAgICBtYXRyaXhbIDBdICogeCwgbWF0cml4WyAxXSAqIHgsIG1hdHJpeFsgMl0gKiB4LCBtYXRyaXhbIDNdICogeCxcbiAgICBtYXRyaXhbIDRdICogeSwgbWF0cml4WyA1XSAqIHksIG1hdHJpeFsgNl0gKiB5LCBtYXRyaXhbIDddICogeSxcbiAgICBtYXRyaXhbIDhdICogeiwgbWF0cml4WyA5XSAqIHosIG1hdHJpeFsxMF0gKiB6LCBtYXRyaXhbMTFdICogeixcbiAgICBtYXRyaXhbMTJdICogMSwgbWF0cml4WzEzXSAqIDEsIG1hdHJpeFsxNF0gKiAxLCBtYXRyaXhbMTVdICogMSxcblxuICBdKTtcbn1cblxuZnVuY3Rpb24gcm90YXRlNChtYXRyaXgsIGFuZ2xlLCB2ZWN0b3IpIHtcbiAgbGV0IHggPSB2ZWN0b3JbMF0sXG4gICAgICB5ID0gdmVjdG9yWzFdLFxuICAgICAgeiA9IHZlY3RvclsyXTtcblxuICBjb25zdCBsZW5ndGggPSBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSArIHogKiB6KTtcblxuICBpZiAobGVuZ3RoICE9PSAwKSB7XG4gICAgeCAvPSBsZW5ndGg7XG4gICAgeSAvPSBsZW5ndGg7XG4gICAgeiAvPSBsZW5ndGg7XG5cbiAgICBjb25zdCBzID0gTWF0aC5zaW4oYW5nbGUpLFxuICAgICAgICAgIGMgPSBNYXRoLmNvcyhhbmdsZSksXG4gICAgICAgICAgdCA9IDEgLSBjLFxuXG4gICAgICAgICAgbTAwID0gbWF0cml4WyAwXSxcbiAgICAgICAgICBtMDEgPSBtYXRyaXhbIDFdLFxuICAgICAgICAgIG0wMiA9IG1hdHJpeFsgMl0sXG4gICAgICAgICAgbTAzID0gbWF0cml4WyAzXSxcbiAgICAgICAgICBtMTAgPSBtYXRyaXhbIDRdLFxuICAgICAgICAgIG0xMSA9IG1hdHJpeFsgNV0sXG4gICAgICAgICAgbTEyID0gbWF0cml4WyA2XSxcbiAgICAgICAgICBtMTMgPSBtYXRyaXhbIDddLFxuICAgICAgICAgIG0yMCA9IG1hdHJpeFsgOF0sXG4gICAgICAgICAgbTIxID0gbWF0cml4WyA5XSxcbiAgICAgICAgICBtMjIgPSBtYXRyaXhbMTBdLFxuICAgICAgICAgIG0yMyA9IG1hdHJpeFsxMV0sXG5cbiAgICAgICAgICBiMDAgPSB4ICogeCAqIHQgKyBjLFxuICAgICAgICAgIGIwMSA9IHkgKiB4ICogdCArIHogKiBzLFxuICAgICAgICAgIGIwMiA9IHogKiB4ICogdCAtIHkgKiBzLFxuICAgICAgICAgIGIxMCA9IHggKiB5ICogdCAtIHogKiBzLFxuICAgICAgICAgIGIxMSA9IHkgKiB5ICogdCArIGMsXG4gICAgICAgICAgYjEyID0geiAqIHkgKiB0ICsgeCAqIHMsXG4gICAgICAgICAgYjIwID0geCAqIHogKiB0ICsgeSAqIHMsXG4gICAgICAgICAgYjIxID0geSAqIHogKiB0IC0geCAqIHMsXG4gICAgICAgICAgYjIyID0geiAqIHogKiB0ICsgYztcblxuICAgIHJldHVybiAoW1xuXG4gICAgICBtMDAgKiBiMDAgKyBtMTAgKiBiMDEgKyBtMjAgKiBiMDIsIG0wMSAqIGIwMCArIG0xMSAqIGIwMSArIG0yMSAqIGIwMiwgbTAyICogYjAwICsgbTEyICogYjAxICsgbTIyICogYjAyLCBtMDMgKiBiMDAgKyBtMTMgKiBiMDEgKyBtMjMgKiBiMDIsXG4gICAgICBtMDAgKiBiMTAgKyBtMTAgKiBiMTEgKyBtMjAgKiBiMTIsIG0wMSAqIGIxMCArIG0xMSAqIGIxMSArIG0yMSAqIGIxMiwgbTAyICogYjEwICsgbTEyICogYjExICsgbTIyICogYjEyLCBtMDMgKiBiMTAgKyBtMTMgKiBiMTEgKyBtMjMgKiBiMTIsXG4gICAgICBtMDAgKiBiMjAgKyBtMTAgKiBiMjEgKyBtMjAgKiBiMjIsIG0wMSAqIGIyMCArIG0xMSAqIGIyMSArIG0yMSAqIGIyMiwgbTAyICogYjIwICsgbTEyICogYjIxICsgbTIyICogYjIyLCBtMDMgKiBiMjAgKyBtMTMgKiBiMjEgKyBtMjMgKiBiMjIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdHJpeFsxMl0sICAgICAgICAgICAgICAgICAgICAgICAgbWF0cml4WzEzXSwgICAgICAgICAgICAgICAgICAgICAgICBtYXRyaXhbMTRdLCAgICAgICAgICAgICAgICAgICAgICAgIG1hdHJpeFsxNV0sXG5cbiAgICBdKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB0cmFuc2xhdGU0KG1hdHJpeCwgdmVjdG9yKSB7XG4gIGNvbnN0IHggPSB2ZWN0b3JbMF0sXG4gICAgICAgIHkgPSB2ZWN0b3JbMV0sXG4gICAgICAgIHogPSB2ZWN0b3JbMl0sXG5cbiAgICAgICAgbTAwID0gbWF0cml4WyAwXSxcbiAgICAgICAgbTAxID0gbWF0cml4WyAxXSxcbiAgICAgICAgbTAyID0gbWF0cml4WyAyXSxcbiAgICAgICAgbTAzID0gbWF0cml4WyAzXSxcbiAgICAgICAgbTEwID0gbWF0cml4WyA0XSxcbiAgICAgICAgbTExID0gbWF0cml4WyA1XSxcbiAgICAgICAgbTEyID0gbWF0cml4WyA2XSxcbiAgICAgICAgbTEzID0gbWF0cml4WyA3XSxcbiAgICAgICAgbTIwID0gbWF0cml4WyA4XSxcbiAgICAgICAgbTIxID0gbWF0cml4WyA5XSxcbiAgICAgICAgbTIyID0gbWF0cml4WzEwXSxcbiAgICAgICAgbTIzID0gbWF0cml4WzExXTtcblxuICByZXR1cm4gKFtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtMDAsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtMDEsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtMDIsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtMDMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG0xMCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG0xMSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG0xMiwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG0xMyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbTIwLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbTIxLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbTIyLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbTIzLFxuICAgIG0wMCAqIHggKyBtMTAgKiB5ICsgbTIwICogeiArIG1hdHJpeFsxMl0sIG0wMSAqIHggKyBtMTEgKiB5ICsgbTIxICogeiArIG1hdHJpeFsxM10sIG0wMiAqIHggKyBtMTIgKiB5ICsgbTIyICogeiArIG1hdHJpeFsxNF0sIG0wMyAqIHggKyBtMTMgKiB5ICsgbTIzICogeiArIG1hdHJpeFsxNV0sXG5cbiAgXSk7XG59XG5cbmZ1bmN0aW9uIHBlcnNwZWN0aXZlNChmaWVsZE9mVmlldywgYXNwZWN0UmF0aW8sIHpOZWFyLCB6RmFyKSB7XG4gIGNvbnN0IGYgPSAxLjAgLyBNYXRoLnRhbihmaWVsZE9mVmlldyAvIDIpLFxuICAgICAgICBuZiA9IDEgLyAoek5lYXIgLSB6RmFyKTtcblxuICByZXR1cm4gKFtcblxuICAgIGYgLyBhc3BlY3RSYXRpbywgMCwgMCwgICAgICAgICAgICAgICAgICAgICAgIDAsXG4gICAgMCwgICAgICAgICAgICAgICBmLCAwLCAgICAgICAgICAgICAgICAgICAgICAgMCxcbiAgICAwLCAgICAgICAgICAgICAgIDAsICh6RmFyICsgek5lYXIpICogbmYsICAgIC0xLFxuICAgIDAsICAgICAgICAgICAgICAgMCwgKDIgKiB6RmFyICogek5lYXIpICogbmYsIDAsXG5cbiAgXSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpZGVudGl0eTIsXG4gIGlkZW50aXR5MyxcbiAgaWRlbnRpdHk0LFxuICBtdWx0aXBseTIsXG4gIG11bHRpcGx5MyxcbiAgbXVsdGlwbHk0LFxuICBpbnZlcnQyLFxuICBpbnZlcnQzLFxuICBpbnZlcnQ0LFxuICBzY2FsZTQsXG4gIHJvdGF0ZTQsXG4gIHRyYW5zcG9zZTIsXG4gIHRyYW5zcG9zZTMsXG4gIHRyYW5zcG9zZTQsXG4gIHRyYW5zbGF0ZTQsXG4gIHBlcnNwZWN0aXZlNFxufTtcbiJdfQ==