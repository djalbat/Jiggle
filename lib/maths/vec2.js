'use strict';

var vec2 = require('gl-vec2');

function add(vecA, vecB) {
  var out = [];

  vec2.add(out, vecA, vecB);

  return out;
}

function subtract(vecA, vecB) {
  var out = [];

  vec2.subtract(out, vecA, vecB);

  return out;
}

function scale(vecA, scalar) {
  var out = [];

  vec2.scale(out, vecA, scalar);

  return out;
}

function normalise(vec) {
  var out = [];

  vec2.normalize(out, vec);

  return out;
}

function transform(vec, mat2) {
  var out = [];

  vec2.transformMat2(out, vec, mat2);

  return out;
}

module.exports = {
  add: add,
  subtract: subtract,
  scale: scale,
  normalise: normalise,
  transform: transform
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9tYXRocy92ZWMyLmpzIl0sIm5hbWVzIjpbInZlYzIiLCJyZXF1aXJlIiwiYWRkIiwidmVjQSIsInZlY0IiLCJvdXQiLCJzdWJ0cmFjdCIsInNjYWxlIiwic2NhbGFyIiwibm9ybWFsaXNlIiwidmVjIiwibm9ybWFsaXplIiwidHJhbnNmb3JtIiwibWF0MiIsInRyYW5zZm9ybU1hdDIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxPQUFPQyxRQUFRLFNBQVIsQ0FBYjs7QUFFQSxTQUFTQyxHQUFULENBQWFDLElBQWIsRUFBbUJDLElBQW5CLEVBQXlCO0FBQ3ZCLE1BQU1DLE1BQU0sRUFBWjs7QUFFQUwsT0FBS0UsR0FBTCxDQUFTRyxHQUFULEVBQWNGLElBQWQsRUFBb0JDLElBQXBCOztBQUVBLFNBQU9DLEdBQVA7QUFDRDs7QUFFRCxTQUFTQyxRQUFULENBQWtCSCxJQUFsQixFQUF3QkMsSUFBeEIsRUFBOEI7QUFDNUIsTUFBTUMsTUFBTSxFQUFaOztBQUVBTCxPQUFLTSxRQUFMLENBQWNELEdBQWQsRUFBbUJGLElBQW5CLEVBQXlCQyxJQUF6Qjs7QUFFQSxTQUFPQyxHQUFQO0FBQ0Q7O0FBRUQsU0FBU0UsS0FBVCxDQUFlSixJQUFmLEVBQXFCSyxNQUFyQixFQUE2QjtBQUMzQixNQUFNSCxNQUFNLEVBQVo7O0FBRUFMLE9BQUtPLEtBQUwsQ0FBV0YsR0FBWCxFQUFnQkYsSUFBaEIsRUFBc0JLLE1BQXRCOztBQUVBLFNBQU9ILEdBQVA7QUFDRDs7QUFFRCxTQUFTSSxTQUFULENBQW1CQyxHQUFuQixFQUF3QjtBQUN0QixNQUFNTCxNQUFNLEVBQVo7O0FBRUFMLE9BQUtXLFNBQUwsQ0FBZU4sR0FBZixFQUFvQkssR0FBcEI7O0FBRUEsU0FBT0wsR0FBUDtBQUNEOztBQUVELFNBQVNPLFNBQVQsQ0FBbUJGLEdBQW5CLEVBQXdCRyxJQUF4QixFQUE4QjtBQUM1QixNQUFNUixNQUFNLEVBQVo7O0FBRUFMLE9BQUtjLGFBQUwsQ0FBbUJULEdBQW5CLEVBQXdCSyxHQUF4QixFQUE2QkcsSUFBN0I7O0FBRUEsU0FBT1IsR0FBUDtBQUNEOztBQUVEVSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZkLE9BQUtBLEdBRFU7QUFFZkksWUFBVUEsUUFGSztBQUdmQyxTQUFPQSxLQUhRO0FBSWZFLGFBQVdBLFNBSkk7QUFLZkcsYUFBV0E7QUFMSSxDQUFqQiIsImZpbGUiOiJ2ZWMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB2ZWMyID0gcmVxdWlyZSgnZ2wtdmVjMicpO1xuXG5mdW5jdGlvbiBhZGQodmVjQSwgdmVjQikge1xuICBjb25zdCBvdXQgPSBbXTtcblxuICB2ZWMyLmFkZChvdXQsIHZlY0EsIHZlY0IpO1xuXG4gIHJldHVybiBvdXQ7XG59XG5cbmZ1bmN0aW9uIHN1YnRyYWN0KHZlY0EsIHZlY0IpIHtcbiAgY29uc3Qgb3V0ID0gW107XG5cbiAgdmVjMi5zdWJ0cmFjdChvdXQsIHZlY0EsIHZlY0IpO1xuXG4gIHJldHVybiBvdXQ7XG59XG5cbmZ1bmN0aW9uIHNjYWxlKHZlY0EsIHNjYWxhcikge1xuICBjb25zdCBvdXQgPSBbXTtcblxuICB2ZWMyLnNjYWxlKG91dCwgdmVjQSwgc2NhbGFyKTtcblxuICByZXR1cm4gb3V0O1xufVxuXG5mdW5jdGlvbiBub3JtYWxpc2UodmVjKSB7XG4gIGNvbnN0IG91dCA9IFtdO1xuXG4gIHZlYzIubm9ybWFsaXplKG91dCwgdmVjKTtcblxuICByZXR1cm4gb3V0O1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm0odmVjLCBtYXQyKSB7XG4gIGNvbnN0IG91dCA9IFtdO1xuXG4gIHZlYzIudHJhbnNmb3JtTWF0MihvdXQsIHZlYywgbWF0Mik7XG5cbiAgcmV0dXJuIG91dDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFkZDogYWRkLFxuICBzdWJ0cmFjdDogc3VidHJhY3QsXG4gIHNjYWxlOiBzY2FsZSxcbiAgbm9ybWFsaXNlOiBub3JtYWxpc2UsXG4gIHRyYW5zZm9ybTogdHJhbnNmb3JtXG59O1xuIl19