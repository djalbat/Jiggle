'use strict';

function createTexture(image) {
  var _context = this.context,
      RGBA = _context.RGBA,
      LINEAR = _context.LINEAR,
      UNSIGNED_BYTE = _context.UNSIGNED_BYTE,
      TEXTURE_2D = _context.TEXTURE_2D,
      TEXTURE_MIN_FILTER = _context.TEXTURE_MIN_FILTER,
      target = TEXTURE_2D,
      level = 0,
      internalFormat = RGBA,
      format = RGBA,
      type = UNSIGNED_BYTE,
      pname = TEXTURE_MIN_FILTER,
      param = LINEAR,
      texture = this.context.createTexture();


  this.context.bindTexture(target, texture);

  var extension = this.context.getExtension('EXT_texture_filter_anisotropic') || this.context.getExtension('MOZ_EXT_texture_filter_anisotropic') || this.context.getExtension('WEBKIT_EXT_texture_filter_anisotropic');

  if (extension) {
    var maximum = this.context.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);

    this.context.texParameterf(this.context.TEXTURE_2D, extension.TEXTURE_MAX_ANISOTROPY_EXT, maximum);
  }

  this.context.texImage2D(target, level, internalFormat, format, type, image);

  this.context.texParameteri(target, pname, param);
}

function activateTexture(target) {
  this.context.activeTexture(target);
}

module.exports = {
  createTexture: createTexture,
  activateTexture: activateTexture
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbi90ZXh0dXJlLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVRleHR1cmUiLCJpbWFnZSIsImNvbnRleHQiLCJSR0JBIiwiTElORUFSIiwiVU5TSUdORURfQllURSIsIlRFWFRVUkVfMkQiLCJURVhUVVJFX01JTl9GSUxURVIiLCJ0YXJnZXQiLCJsZXZlbCIsImludGVybmFsRm9ybWF0IiwiZm9ybWF0IiwidHlwZSIsInBuYW1lIiwicGFyYW0iLCJ0ZXh0dXJlIiwiYmluZFRleHR1cmUiLCJleHRlbnNpb24iLCJnZXRFeHRlbnNpb24iLCJtYXhpbXVtIiwiZ2V0UGFyYW1ldGVyIiwiTUFYX1RFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhUIiwidGV4UGFyYW1ldGVyZiIsIlRFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhUIiwidGV4SW1hZ2UyRCIsInRleFBhcmFtZXRlcmkiLCJhY3RpdmF0ZVRleHR1cmUiLCJhY3RpdmVUZXh0dXJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsYUFBVCxDQUF1QkMsS0FBdkIsRUFBOEI7QUFBQSxpQkFDMkMsS0FBS0MsT0FEaEQ7QUFBQSxNQUNyQkMsSUFEcUIsWUFDckJBLElBRHFCO0FBQUEsTUFDZkMsTUFEZSxZQUNmQSxNQURlO0FBQUEsTUFDUEMsYUFETyxZQUNQQSxhQURPO0FBQUEsTUFDUUMsVUFEUixZQUNRQSxVQURSO0FBQUEsTUFDb0JDLGtCQURwQixZQUNvQkEsa0JBRHBCO0FBQUEsTUFFMUJDLE1BRjBCLEdBRWpCRixVQUZpQjtBQUFBLE1BRzFCRyxLQUgwQixHQUdsQixDQUhrQjtBQUFBLE1BSTFCQyxjQUowQixHQUlUUCxJQUpTO0FBQUEsTUFLMUJRLE1BTDBCLEdBS2pCUixJQUxpQjtBQUFBLE1BTTFCUyxJQU4wQixHQU1uQlAsYUFObUI7QUFBQSxNQU8xQlEsS0FQMEIsR0FPbEJOLGtCQVBrQjtBQUFBLE1BUTFCTyxLQVIwQixHQVFsQlYsTUFSa0I7QUFBQSxNQVMxQlcsT0FUMEIsR0FTaEIsS0FBS2IsT0FBTCxDQUFhRixhQUFiLEVBVGdCOzs7QUFXN0IsT0FBS0UsT0FBTCxDQUFhYyxXQUFiLENBQXlCUixNQUF6QixFQUFpQ08sT0FBakM7O0FBRUMsTUFBTUUsWUFDSixLQUFLZixPQUFMLENBQWFnQixZQUFiLENBQTBCLGdDQUExQixLQUNBLEtBQUtoQixPQUFMLENBQWFnQixZQUFiLENBQTBCLG9DQUExQixDQURBLElBRUEsS0FBS2hCLE9BQUwsQ0FBYWdCLFlBQWIsQ0FBMEIsdUNBQTFCLENBSEY7O0FBTUEsTUFBSUQsU0FBSixFQUFlO0FBQ2IsUUFBTUUsVUFBVSxLQUFLakIsT0FBTCxDQUFha0IsWUFBYixDQUEwQkgsVUFBVUksOEJBQXBDLENBQWhCOztBQUVBLFNBQUtuQixPQUFMLENBQWFvQixhQUFiLENBQTJCLEtBQUtwQixPQUFMLENBQWFJLFVBQXhDLEVBQW9EVyxVQUFVTSwwQkFBOUQsRUFBMEZKLE9BQTFGO0FBQ0Q7O0FBRUQsT0FBS2pCLE9BQUwsQ0FBYXNCLFVBQWIsQ0FBd0JoQixNQUF4QixFQUFnQ0MsS0FBaEMsRUFBdUNDLGNBQXZDLEVBQXVEQyxNQUF2RCxFQUErREMsSUFBL0QsRUFBcUVYLEtBQXJFOztBQUVELE9BQUtDLE9BQUwsQ0FBYXVCLGFBQWIsQ0FBMkJqQixNQUEzQixFQUFtQ0ssS0FBbkMsRUFBMENDLEtBQTFDO0FBQ0E7O0FBRUQsU0FBU1ksZUFBVCxDQUF5QmxCLE1BQXpCLEVBQWlDO0FBQUUsT0FBS04sT0FBTCxDQUFheUIsYUFBYixDQUEyQm5CLE1BQTNCO0FBQXFDOztBQUV4RW9CLE9BQU9DLE9BQVAsR0FBaUI7QUFDZjdCLDhCQURlO0FBRWYwQjtBQUZlLENBQWpCIiwiZmlsZSI6InRleHR1cmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNyZWF0ZVRleHR1cmUoaW1hZ2UpIHtcblx0Y29uc3QgeyBSR0JBLCBMSU5FQVIsIFVOU0lHTkVEX0JZVEUsIFRFWFRVUkVfMkQsIFRFWFRVUkVfTUlOX0ZJTFRFUiB9ID0gdGhpcy5jb250ZXh0LFxuXHRcdFx0XHR0YXJnZXQgPSBURVhUVVJFXzJELFxuXHRcdFx0XHRsZXZlbCA9IDAsXG5cdFx0XHRcdGludGVybmFsRm9ybWF0ID0gUkdCQSxcblx0XHRcdFx0Zm9ybWF0ID0gUkdCQSxcblx0XHRcdFx0dHlwZSA9IFVOU0lHTkVEX0JZVEUsXG5cdFx0XHRcdHBuYW1lID0gVEVYVFVSRV9NSU5fRklMVEVSLFxuXHRcdFx0XHRwYXJhbSA9IExJTkVBUixcblx0XHRcdFx0dGV4dHVyZSA9IHRoaXMuY29udGV4dC5jcmVhdGVUZXh0dXJlKCk7XG5cblx0dGhpcy5jb250ZXh0LmJpbmRUZXh0dXJlKHRhcmdldCwgdGV4dHVyZSk7XG5cbiAgY29uc3QgZXh0ZW5zaW9uID0gKFxuICAgIHRoaXMuY29udGV4dC5nZXRFeHRlbnNpb24oJ0VYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpYycpIHx8XG4gICAgdGhpcy5jb250ZXh0LmdldEV4dGVuc2lvbignTU9aX0VYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpYycpIHx8XG4gICAgdGhpcy5jb250ZXh0LmdldEV4dGVuc2lvbignV0VCS0lUX0VYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpYycpXG4gICk7XG5cbiAgaWYgKGV4dGVuc2lvbikge1xuICAgIGNvbnN0IG1heGltdW0gPSB0aGlzLmNvbnRleHQuZ2V0UGFyYW1ldGVyKGV4dGVuc2lvbi5NQVhfVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQpO1xuXG4gICAgdGhpcy5jb250ZXh0LnRleFBhcmFtZXRlcmYodGhpcy5jb250ZXh0LlRFWFRVUkVfMkQsIGV4dGVuc2lvbi5URVhUVVJFX01BWF9BTklTT1RST1BZX0VYVCwgbWF4aW11bSk7XG4gIH1cblxuICB0aGlzLmNvbnRleHQudGV4SW1hZ2UyRCh0YXJnZXQsIGxldmVsLCBpbnRlcm5hbEZvcm1hdCwgZm9ybWF0LCB0eXBlLCBpbWFnZSk7XG5cblx0dGhpcy5jb250ZXh0LnRleFBhcmFtZXRlcmkodGFyZ2V0LCBwbmFtZSwgcGFyYW0pO1xufVxuXG5mdW5jdGlvbiBhY3RpdmF0ZVRleHR1cmUodGFyZ2V0KSB7IHRoaXMuY29udGV4dC5hY3RpdmVUZXh0dXJlKHRhcmdldCk7IH1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNyZWF0ZVRleHR1cmUsXG4gIGFjdGl2YXRlVGV4dHVyZVxufTtcbiJdfQ==