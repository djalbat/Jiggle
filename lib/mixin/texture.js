'use strict';

function createTexture(image) {
  var _context = this.context,
      RGBA = _context.RGBA,
      LINEAR = _context.LINEAR,
      UNSIGNED_BYTE = _context.UNSIGNED_BYTE,
      TEXTURE_2D = _context.TEXTURE_2D,
      TEXTURE_WRAP_S = _context.TEXTURE_WRAP_S,
      TEXTURE_WRAP_T = _context.TEXTURE_WRAP_T,
      CLAMP_TO_EDGE = _context.CLAMP_TO_EDGE,
      TEXTURE_MIN_FILTER = _context.TEXTURE_MIN_FILTER,
      target = TEXTURE_2D,
      level = 0,
      internalFormat = RGBA,
      format = RGBA,
      type = UNSIGNED_BYTE,
      texture = this.context.createTexture();


  this.context.bindTexture(target, texture);

  this.context.texImage2D(target, level, internalFormat, format, type, image);

  this.context.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);
  this.context.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);
  this.context.texParameteri(target, TEXTURE_MIN_FILTER, LINEAR);
}

function activateTexture(target) {
  this.context.activeTexture(target);
}

function enableAnisotropicFiltering() {
  var extension = this.context.getExtension('EXT_texture_filter_anisotropic') || this.context.getExtension('MOZ_EXT_texture_filter_anisotropic') || this.context.getExtension('WEBKIT_EXT_texture_filter_anisotropic');

  if (extension) {
    var TEXTURE_2D = this.context.TEXTURE_2D,
        MAX_TEXTURE_MAX_ANISOTROPY_EXT = extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT,
        TEXTURE_MAX_ANISOTROPY_EXT = extension.TEXTURE_MAX_ANISOTROPY_EXT,
        maximum = this.context.getParameter(MAX_TEXTURE_MAX_ANISOTROPY_EXT);


    this.context.texParameterf(TEXTURE_2D, TEXTURE_MAX_ANISOTROPY_EXT, maximum);
  }
}

module.exports = {
  createTexture: createTexture,
  activateTexture: activateTexture,
  enableAnisotropicFiltering: enableAnisotropicFiltering
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbi90ZXh0dXJlLmpzIl0sIm5hbWVzIjpbImNyZWF0ZVRleHR1cmUiLCJpbWFnZSIsImNvbnRleHQiLCJSR0JBIiwiTElORUFSIiwiVU5TSUdORURfQllURSIsIlRFWFRVUkVfMkQiLCJURVhUVVJFX1dSQVBfUyIsIlRFWFRVUkVfV1JBUF9UIiwiQ0xBTVBfVE9fRURHRSIsIlRFWFRVUkVfTUlOX0ZJTFRFUiIsInRhcmdldCIsImxldmVsIiwiaW50ZXJuYWxGb3JtYXQiLCJmb3JtYXQiLCJ0eXBlIiwidGV4dHVyZSIsImJpbmRUZXh0dXJlIiwidGV4SW1hZ2UyRCIsInRleFBhcmFtZXRlcmkiLCJhY3RpdmF0ZVRleHR1cmUiLCJhY3RpdmVUZXh0dXJlIiwiZW5hYmxlQW5pc290cm9waWNGaWx0ZXJpbmciLCJleHRlbnNpb24iLCJnZXRFeHRlbnNpb24iLCJNQVhfVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQiLCJURVhUVVJFX01BWF9BTklTT1RST1BZX0VYVCIsIm1heGltdW0iLCJnZXRQYXJhbWV0ZXIiLCJ0ZXhQYXJhbWV0ZXJmIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsYUFBVCxDQUF1QkMsS0FBdkIsRUFBOEI7QUFBQSxpQkFDMEYsS0FBS0MsT0FEL0Y7QUFBQSxNQUNyQkMsSUFEcUIsWUFDckJBLElBRHFCO0FBQUEsTUFDZkMsTUFEZSxZQUNmQSxNQURlO0FBQUEsTUFDUEMsYUFETyxZQUNQQSxhQURPO0FBQUEsTUFDUUMsVUFEUixZQUNRQSxVQURSO0FBQUEsTUFDb0JDLGNBRHBCLFlBQ29CQSxjQURwQjtBQUFBLE1BQ29DQyxjQURwQyxZQUNvQ0EsY0FEcEM7QUFBQSxNQUNvREMsYUFEcEQsWUFDb0RBLGFBRHBEO0FBQUEsTUFDbUVDLGtCQURuRSxZQUNtRUEsa0JBRG5FO0FBQUEsTUFFMUJDLE1BRjBCLEdBRWpCTCxVQUZpQjtBQUFBLE1BRzFCTSxLQUgwQixHQUdsQixDQUhrQjtBQUFBLE1BSTFCQyxjQUowQixHQUlUVixJQUpTO0FBQUEsTUFLMUJXLE1BTDBCLEdBS2pCWCxJQUxpQjtBQUFBLE1BTTFCWSxJQU4wQixHQU1uQlYsYUFObUI7QUFBQSxNQU8xQlcsT0FQMEIsR0FPaEIsS0FBS2QsT0FBTCxDQUFhRixhQUFiLEVBUGdCOzs7QUFTN0IsT0FBS0UsT0FBTCxDQUFhZSxXQUFiLENBQXlCTixNQUF6QixFQUFpQ0ssT0FBakM7O0FBRUMsT0FBS2QsT0FBTCxDQUFhZ0IsVUFBYixDQUF3QlAsTUFBeEIsRUFBZ0NDLEtBQWhDLEVBQXVDQyxjQUF2QyxFQUF1REMsTUFBdkQsRUFBK0RDLElBQS9ELEVBQXFFZCxLQUFyRTs7QUFFQSxPQUFLQyxPQUFMLENBQWFpQixhQUFiLENBQTJCUixNQUEzQixFQUFtQ0osY0FBbkMsRUFBbURFLGFBQW5EO0FBQ0EsT0FBS1AsT0FBTCxDQUFhaUIsYUFBYixDQUEyQlIsTUFBM0IsRUFBbUNILGNBQW5DLEVBQW1EQyxhQUFuRDtBQUNELE9BQUtQLE9BQUwsQ0FBYWlCLGFBQWIsQ0FBMkJSLE1BQTNCLEVBQW1DRCxrQkFBbkMsRUFBdUROLE1BQXZEO0FBQ0E7O0FBRUQsU0FBU2dCLGVBQVQsQ0FBeUJULE1BQXpCLEVBQWlDO0FBQUUsT0FBS1QsT0FBTCxDQUFhbUIsYUFBYixDQUEyQlYsTUFBM0I7QUFBcUM7O0FBRXhFLFNBQVNXLDBCQUFULEdBQXNDO0FBQ3BDLE1BQU1DLFlBQ0osS0FBS3JCLE9BQUwsQ0FBYXNCLFlBQWIsQ0FBMEIsZ0NBQTFCLEtBQ0EsS0FBS3RCLE9BQUwsQ0FBYXNCLFlBQWIsQ0FBMEIsb0NBQTFCLENBREEsSUFFQSxLQUFLdEIsT0FBTCxDQUFhc0IsWUFBYixDQUEwQix1Q0FBMUIsQ0FIRjs7QUFNQSxNQUFJRCxTQUFKLEVBQWU7QUFDUCxRQUFFakIsVUFBRixHQUFpQixLQUFLSixPQUF0QixDQUFFSSxVQUFGO0FBQUEsUUFDRW1CLDhCQURGLEdBQ2lFRixTQURqRSxDQUNFRSw4QkFERjtBQUFBLFFBQ2tDQywwQkFEbEMsR0FDaUVILFNBRGpFLENBQ2tDRywwQkFEbEM7QUFBQSxRQUVBQyxPQUZBLEdBRVUsS0FBS3pCLE9BQUwsQ0FBYTBCLFlBQWIsQ0FBMEJILDhCQUExQixDQUZWOzs7QUFJTixTQUFLdkIsT0FBTCxDQUFhMkIsYUFBYixDQUEyQnZCLFVBQTNCLEVBQXVDb0IsMEJBQXZDLEVBQW1FQyxPQUFuRTtBQUNEO0FBQ0Y7O0FBRURHLE9BQU9DLE9BQVAsR0FBaUI7QUFDZi9CLDhCQURlO0FBRWZvQixrQ0FGZTtBQUdmRTtBQUhlLENBQWpCIiwiZmlsZSI6InRleHR1cmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNyZWF0ZVRleHR1cmUoaW1hZ2UpIHtcblx0Y29uc3QgeyBSR0JBLCBMSU5FQVIsIFVOU0lHTkVEX0JZVEUsIFRFWFRVUkVfMkQsIFRFWFRVUkVfV1JBUF9TLCBURVhUVVJFX1dSQVBfVCwgQ0xBTVBfVE9fRURHRSwgVEVYVFVSRV9NSU5fRklMVEVSIH0gPSB0aGlzLmNvbnRleHQsXG5cdFx0XHRcdHRhcmdldCA9IFRFWFRVUkVfMkQsXG5cdFx0XHRcdGxldmVsID0gMCxcblx0XHRcdFx0aW50ZXJuYWxGb3JtYXQgPSBSR0JBLFxuXHRcdFx0XHRmb3JtYXQgPSBSR0JBLFxuXHRcdFx0XHR0eXBlID0gVU5TSUdORURfQllURSxcblx0XHRcdFx0dGV4dHVyZSA9IHRoaXMuY29udGV4dC5jcmVhdGVUZXh0dXJlKCk7XG5cblx0dGhpcy5jb250ZXh0LmJpbmRUZXh0dXJlKHRhcmdldCwgdGV4dHVyZSk7XG5cbiAgdGhpcy5jb250ZXh0LnRleEltYWdlMkQodGFyZ2V0LCBsZXZlbCwgaW50ZXJuYWxGb3JtYXQsIGZvcm1hdCwgdHlwZSwgaW1hZ2UpO1xuXG4gIHRoaXMuY29udGV4dC50ZXhQYXJhbWV0ZXJpKHRhcmdldCwgVEVYVFVSRV9XUkFQX1MsIENMQU1QX1RPX0VER0UpO1xuICB0aGlzLmNvbnRleHQudGV4UGFyYW1ldGVyaSh0YXJnZXQsIFRFWFRVUkVfV1JBUF9ULCBDTEFNUF9UT19FREdFKTtcblx0dGhpcy5jb250ZXh0LnRleFBhcmFtZXRlcmkodGFyZ2V0LCBURVhUVVJFX01JTl9GSUxURVIsIExJTkVBUik7XG59XG5cbmZ1bmN0aW9uIGFjdGl2YXRlVGV4dHVyZSh0YXJnZXQpIHsgdGhpcy5jb250ZXh0LmFjdGl2ZVRleHR1cmUodGFyZ2V0KTsgfVxuXG5mdW5jdGlvbiBlbmFibGVBbmlzb3Ryb3BpY0ZpbHRlcmluZygpIHtcbiAgY29uc3QgZXh0ZW5zaW9uID0gKFxuICAgIHRoaXMuY29udGV4dC5nZXRFeHRlbnNpb24oJ0VYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpYycpIHx8XG4gICAgdGhpcy5jb250ZXh0LmdldEV4dGVuc2lvbignTU9aX0VYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpYycpIHx8XG4gICAgdGhpcy5jb250ZXh0LmdldEV4dGVuc2lvbignV0VCS0lUX0VYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpYycpXG4gICk7XG5cbiAgaWYgKGV4dGVuc2lvbikge1xuICAgIGNvbnN0IHsgVEVYVFVSRV8yRCB9ID0gdGhpcy5jb250ZXh0LFxuICAgICAgICAgIHsgTUFYX1RFWFRVUkVfTUFYX0FOSVNPVFJPUFlfRVhULCBURVhUVVJFX01BWF9BTklTT1RST1BZX0VYVCB9ID0gZXh0ZW5zaW9uLFxuICAgICAgICAgIG1heGltdW0gPSB0aGlzLmNvbnRleHQuZ2V0UGFyYW1ldGVyKE1BWF9URVhUVVJFX01BWF9BTklTT1RST1BZX0VYVCk7XG5cbiAgICB0aGlzLmNvbnRleHQudGV4UGFyYW1ldGVyZihURVhUVVJFXzJELCBURVhUVVJFX01BWF9BTklTT1RST1BZX0VYVCwgbWF4aW11bSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNyZWF0ZVRleHR1cmUsXG4gIGFjdGl2YXRlVGV4dHVyZSxcbiAgZW5hYmxlQW5pc290cm9waWNGaWx0ZXJpbmdcbn07XG4iXX0=