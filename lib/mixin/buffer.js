'use strict';

function createBuffer(data) {
  var ARRAY_BUFFER_TYPE = this.context.ARRAY_BUFFER,
      ///
  STATIC_DRAW = this.context.STATIC_DRAW,
      buffer = this.context.createBuffer(),
      float32DataArray = new Float32Array(data);

  this.context.bindBuffer(ARRAY_BUFFER_TYPE, buffer);

  this.context.bufferData(ARRAY_BUFFER_TYPE, float32DataArray, STATIC_DRAW);

  return buffer;
}

function bindBuffer(buffer, attributeLocation, components) {
  var type = this.context.FLOAT,
      normalize = false,
      stride = 0,
      offset = 0;

  this.context.bindBuffer(this.context.ARRAY_BUFFER, buffer);

  this.context.vertexAttribPointer(attributeLocation, components, type, normalize, stride, offset);

  this.context.enableVertexAttribArray(attributeLocation);
}

var bufferMixin = {
  createBuffer: createBuffer,
  bindBuffer: bindBuffer
};

module.exports = bufferMixin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbi9idWZmZXIuanMiXSwibmFtZXMiOlsiY3JlYXRlQnVmZmVyIiwiZGF0YSIsIkFSUkFZX0JVRkZFUl9UWVBFIiwiY29udGV4dCIsIkFSUkFZX0JVRkZFUiIsIlNUQVRJQ19EUkFXIiwiYnVmZmVyIiwiZmxvYXQzMkRhdGFBcnJheSIsIkZsb2F0MzJBcnJheSIsImJpbmRCdWZmZXIiLCJidWZmZXJEYXRhIiwiYXR0cmlidXRlTG9jYXRpb24iLCJjb21wb25lbnRzIiwidHlwZSIsIkZMT0FUIiwibm9ybWFsaXplIiwic3RyaWRlIiwib2Zmc2V0IiwidmVydGV4QXR0cmliUG9pbnRlciIsImVuYWJsZVZlcnRleEF0dHJpYkFycmF5IiwiYnVmZmVyTWl4aW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxTQUFTQSxZQUFULENBQXNCQyxJQUF0QixFQUE0QjtBQUMxQixNQUFNQyxvQkFBb0IsS0FBS0MsT0FBTCxDQUFhQyxZQUF2QztBQUFBLE1BQXFEO0FBQy9DQyxnQkFBYyxLQUFLRixPQUFMLENBQWFFLFdBRGpDO0FBQUEsTUFFTUMsU0FBUyxLQUFLSCxPQUFMLENBQWFILFlBQWIsRUFGZjtBQUFBLE1BR01PLG1CQUFtQixJQUFJQyxZQUFKLENBQWlCUCxJQUFqQixDQUh6Qjs7QUFLQSxPQUFLRSxPQUFMLENBQWFNLFVBQWIsQ0FBd0JQLGlCQUF4QixFQUEyQ0ksTUFBM0M7O0FBRUEsT0FBS0gsT0FBTCxDQUFhTyxVQUFiLENBQXdCUixpQkFBeEIsRUFBMkNLLGdCQUEzQyxFQUE2REYsV0FBN0Q7O0FBRUEsU0FBT0MsTUFBUDtBQUNEOztBQUVELFNBQVNHLFVBQVQsQ0FBb0JILE1BQXBCLEVBQTRCSyxpQkFBNUIsRUFBK0NDLFVBQS9DLEVBQTJEO0FBQ3pELE1BQU1DLE9BQU8sS0FBS1YsT0FBTCxDQUFhVyxLQUExQjtBQUFBLE1BQ01DLFlBQVksS0FEbEI7QUFBQSxNQUVNQyxTQUFTLENBRmY7QUFBQSxNQUdNQyxTQUFTLENBSGY7O0FBS0EsT0FBS2QsT0FBTCxDQUFhTSxVQUFiLENBQXdCLEtBQUtOLE9BQUwsQ0FBYUMsWUFBckMsRUFBbURFLE1BQW5EOztBQUVBLE9BQUtILE9BQUwsQ0FBYWUsbUJBQWIsQ0FBaUNQLGlCQUFqQyxFQUFvREMsVUFBcEQsRUFBZ0VDLElBQWhFLEVBQXNFRSxTQUF0RSxFQUFpRkMsTUFBakYsRUFBeUZDLE1BQXpGOztBQUVBLE9BQUtkLE9BQUwsQ0FBYWdCLHVCQUFiLENBQXFDUixpQkFBckM7QUFDRDs7QUFFRCxJQUFNUyxjQUFjO0FBQ2xCcEIsZ0JBQWNBLFlBREk7QUFFbEJTLGNBQVlBO0FBRk0sQ0FBcEI7O0FBS0FZLE9BQU9DLE9BQVAsR0FBaUJGLFdBQWpCIiwiZmlsZSI6ImJ1ZmZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY3JlYXRlQnVmZmVyKGRhdGEpIHtcbiAgY29uc3QgQVJSQVlfQlVGRkVSX1RZUEUgPSB0aGlzLmNvbnRleHQuQVJSQVlfQlVGRkVSLCAvLy9cbiAgICAgICAgU1RBVElDX0RSQVcgPSB0aGlzLmNvbnRleHQuU1RBVElDX0RSQVcsXG4gICAgICAgIGJ1ZmZlciA9IHRoaXMuY29udGV4dC5jcmVhdGVCdWZmZXIoKSxcbiAgICAgICAgZmxvYXQzMkRhdGFBcnJheSA9IG5ldyBGbG9hdDMyQXJyYXkoZGF0YSk7XG5cbiAgdGhpcy5jb250ZXh0LmJpbmRCdWZmZXIoQVJSQVlfQlVGRkVSX1RZUEUsIGJ1ZmZlcik7XG5cbiAgdGhpcy5jb250ZXh0LmJ1ZmZlckRhdGEoQVJSQVlfQlVGRkVSX1RZUEUsIGZsb2F0MzJEYXRhQXJyYXksIFNUQVRJQ19EUkFXKTtcblxuICByZXR1cm4gYnVmZmVyO1xufVxuXG5mdW5jdGlvbiBiaW5kQnVmZmVyKGJ1ZmZlciwgYXR0cmlidXRlTG9jYXRpb24sIGNvbXBvbmVudHMpIHtcbiAgY29uc3QgdHlwZSA9IHRoaXMuY29udGV4dC5GTE9BVCxcbiAgICAgICAgbm9ybWFsaXplID0gZmFsc2UsXG4gICAgICAgIHN0cmlkZSA9IDAsXG4gICAgICAgIG9mZnNldCA9IDA7XG5cbiAgdGhpcy5jb250ZXh0LmJpbmRCdWZmZXIodGhpcy5jb250ZXh0LkFSUkFZX0JVRkZFUiwgYnVmZmVyKTtcblxuICB0aGlzLmNvbnRleHQudmVydGV4QXR0cmliUG9pbnRlcihhdHRyaWJ1dGVMb2NhdGlvbiwgY29tcG9uZW50cywgdHlwZSwgbm9ybWFsaXplLCBzdHJpZGUsIG9mZnNldCk7XG4gIFxuICB0aGlzLmNvbnRleHQuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkoYXR0cmlidXRlTG9jYXRpb24pO1xufVxuXG5jb25zdCBidWZmZXJNaXhpbiA9IHtcbiAgY3JlYXRlQnVmZmVyOiBjcmVhdGVCdWZmZXIsXG4gIGJpbmRCdWZmZXI6IGJpbmRCdWZmZXJcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gYnVmZmVyTWl4aW47XG4iXX0=