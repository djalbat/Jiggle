'use strict';

function createBuffer(data) {
  var target = this.ARRAY_BUFFER_TARGET,
      buffer = this.context.createBuffer(),
      float32Array = new Float32Array(data),
      usage = this.STATIC_DRAW_USAGE;

  this.context.bindBuffer(target, buffer);

  this.context.bufferData(target, float32Array, usage);

  return buffer;
}

function createElementBuffer(data) {
  var target = this.ELEMENT_ARRAY_BUFFER_TARGET,
      elementBuffer = this.context.createBuffer(),
      uint16Array = new Uint16Array(data),
      usage = this.STATIC_DRAW_USAGE;

  this.context.bindBuffer(target, elementBuffer);

  this.context.bufferData(target, uint16Array, usage);

  return elementBuffer;
}

function bindBuffer(buffer, attributeLocation, components) {
  var target = this.ARRAY_BUFFER_TARGET,
      type = this.FLOAT_TYPE,
      normalize = false,
      stride = 0,
      offset = 0;

  this.context.bindBuffer(target, buffer);

  this.context.vertexAttribPointer(attributeLocation, components, type, normalize, stride, offset);

  this.context.enableVertexAttribArray(attributeLocation);
}

function bindElementBuffer(elementBuffer) {
  var target = this.ELEMENT_ARRAY_BUFFER_TARGET;

  this.context.bindBuffer(target, elementBuffer);
}

var bufferMixin = {
  createBuffer: createBuffer,
  createElementBuffer: createElementBuffer,
  bindBuffer: bindBuffer,
  bindElementBuffer: bindElementBuffer
};

module.exports = bufferMixin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbi9idWZmZXIuanMiXSwibmFtZXMiOlsiY3JlYXRlQnVmZmVyIiwiZGF0YSIsInRhcmdldCIsIkFSUkFZX0JVRkZFUl9UQVJHRVQiLCJidWZmZXIiLCJjb250ZXh0IiwiZmxvYXQzMkFycmF5IiwiRmxvYXQzMkFycmF5IiwidXNhZ2UiLCJTVEFUSUNfRFJBV19VU0FHRSIsImJpbmRCdWZmZXIiLCJidWZmZXJEYXRhIiwiY3JlYXRlRWxlbWVudEJ1ZmZlciIsIkVMRU1FTlRfQVJSQVlfQlVGRkVSX1RBUkdFVCIsImVsZW1lbnRCdWZmZXIiLCJ1aW50MTZBcnJheSIsIlVpbnQxNkFycmF5IiwiYXR0cmlidXRlTG9jYXRpb24iLCJjb21wb25lbnRzIiwidHlwZSIsIkZMT0FUX1RZUEUiLCJub3JtYWxpemUiLCJzdHJpZGUiLCJvZmZzZXQiLCJ2ZXJ0ZXhBdHRyaWJQb2ludGVyIiwiZW5hYmxlVmVydGV4QXR0cmliQXJyYXkiLCJiaW5kRWxlbWVudEJ1ZmZlciIsImJ1ZmZlck1peGluIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsWUFBVCxDQUFzQkMsSUFBdEIsRUFBNEI7QUFDMUIsTUFBTUMsU0FBUyxLQUFLQyxtQkFBcEI7QUFBQSxNQUNNQyxTQUFTLEtBQUtDLE9BQUwsQ0FBYUwsWUFBYixFQURmO0FBQUEsTUFFTU0sZUFBZSxJQUFJQyxZQUFKLENBQWlCTixJQUFqQixDQUZyQjtBQUFBLE1BR01PLFFBQVEsS0FBS0MsaUJBSG5COztBQUtBLE9BQUtKLE9BQUwsQ0FBYUssVUFBYixDQUF3QlIsTUFBeEIsRUFBZ0NFLE1BQWhDOztBQUVBLE9BQUtDLE9BQUwsQ0FBYU0sVUFBYixDQUF3QlQsTUFBeEIsRUFBZ0NJLFlBQWhDLEVBQThDRSxLQUE5Qzs7QUFFQSxTQUFPSixNQUFQO0FBQ0Q7O0FBRUQsU0FBU1EsbUJBQVQsQ0FBNkJYLElBQTdCLEVBQW1DO0FBQ2pDLE1BQU1DLFNBQVMsS0FBS1csMkJBQXBCO0FBQUEsTUFDTUMsZ0JBQWdCLEtBQUtULE9BQUwsQ0FBYUwsWUFBYixFQUR0QjtBQUFBLE1BRU1lLGNBQWMsSUFBSUMsV0FBSixDQUFnQmYsSUFBaEIsQ0FGcEI7QUFBQSxNQUdNTyxRQUFRLEtBQUtDLGlCQUhuQjs7QUFLQSxPQUFLSixPQUFMLENBQWFLLFVBQWIsQ0FBd0JSLE1BQXhCLEVBQWdDWSxhQUFoQzs7QUFFQSxPQUFLVCxPQUFMLENBQWFNLFVBQWIsQ0FBd0JULE1BQXhCLEVBQWdDYSxXQUFoQyxFQUE2Q1AsS0FBN0M7O0FBRUEsU0FBT00sYUFBUDtBQUNEOztBQUVELFNBQVNKLFVBQVQsQ0FBb0JOLE1BQXBCLEVBQTRCYSxpQkFBNUIsRUFBK0NDLFVBQS9DLEVBQTJEO0FBQ3pELE1BQU1oQixTQUFTLEtBQUtDLG1CQUFwQjtBQUFBLE1BQ01nQixPQUFPLEtBQUtDLFVBRGxCO0FBQUEsTUFFTUMsWUFBWSxLQUZsQjtBQUFBLE1BR01DLFNBQVMsQ0FIZjtBQUFBLE1BSU1DLFNBQVMsQ0FKZjs7QUFNQSxPQUFLbEIsT0FBTCxDQUFhSyxVQUFiLENBQXdCUixNQUF4QixFQUFnQ0UsTUFBaEM7O0FBRUEsT0FBS0MsT0FBTCxDQUFhbUIsbUJBQWIsQ0FBaUNQLGlCQUFqQyxFQUFvREMsVUFBcEQsRUFBZ0VDLElBQWhFLEVBQXNFRSxTQUF0RSxFQUFpRkMsTUFBakYsRUFBeUZDLE1BQXpGOztBQUVBLE9BQUtsQixPQUFMLENBQWFvQix1QkFBYixDQUFxQ1IsaUJBQXJDO0FBQ0Q7O0FBRUQsU0FBU1MsaUJBQVQsQ0FBMkJaLGFBQTNCLEVBQTBDO0FBQ3hDLE1BQU1aLFNBQVMsS0FBS1csMkJBQXBCOztBQUVBLE9BQUtSLE9BQUwsQ0FBYUssVUFBYixDQUF3QlIsTUFBeEIsRUFBZ0NZLGFBQWhDO0FBQ0Q7O0FBRUQsSUFBTWEsY0FBYztBQUNsQjNCLGdCQUFjQSxZQURJO0FBRWxCWSx1QkFBcUJBLG1CQUZIO0FBR2xCRixjQUFZQSxVQUhNO0FBSWxCZ0IscUJBQW1CQTtBQUpELENBQXBCOztBQU9BRSxPQUFPQyxPQUFQLEdBQWlCRixXQUFqQiIsImZpbGUiOiJidWZmZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNyZWF0ZUJ1ZmZlcihkYXRhKSB7XG4gIGNvbnN0IHRhcmdldCA9IHRoaXMuQVJSQVlfQlVGRkVSX1RBUkdFVCxcbiAgICAgICAgYnVmZmVyID0gdGhpcy5jb250ZXh0LmNyZWF0ZUJ1ZmZlcigpLFxuICAgICAgICBmbG9hdDMyQXJyYXkgPSBuZXcgRmxvYXQzMkFycmF5KGRhdGEpLFxuICAgICAgICB1c2FnZSA9IHRoaXMuU1RBVElDX0RSQVdfVVNBR0U7XG5cbiAgdGhpcy5jb250ZXh0LmJpbmRCdWZmZXIodGFyZ2V0LCBidWZmZXIpO1xuXG4gIHRoaXMuY29udGV4dC5idWZmZXJEYXRhKHRhcmdldCwgZmxvYXQzMkFycmF5LCB1c2FnZSk7XG5cbiAgcmV0dXJuIGJ1ZmZlcjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlRWxlbWVudEJ1ZmZlcihkYXRhKSB7XG4gIGNvbnN0IHRhcmdldCA9IHRoaXMuRUxFTUVOVF9BUlJBWV9CVUZGRVJfVEFSR0VULFxuICAgICAgICBlbGVtZW50QnVmZmVyID0gdGhpcy5jb250ZXh0LmNyZWF0ZUJ1ZmZlcigpLFxuICAgICAgICB1aW50MTZBcnJheSA9IG5ldyBVaW50MTZBcnJheShkYXRhKSxcbiAgICAgICAgdXNhZ2UgPSB0aGlzLlNUQVRJQ19EUkFXX1VTQUdFO1xuXG4gIHRoaXMuY29udGV4dC5iaW5kQnVmZmVyKHRhcmdldCwgZWxlbWVudEJ1ZmZlcik7XG5cbiAgdGhpcy5jb250ZXh0LmJ1ZmZlckRhdGEodGFyZ2V0LCB1aW50MTZBcnJheSwgdXNhZ2UpO1xuXG4gIHJldHVybiBlbGVtZW50QnVmZmVyO1xufVxuXG5mdW5jdGlvbiBiaW5kQnVmZmVyKGJ1ZmZlciwgYXR0cmlidXRlTG9jYXRpb24sIGNvbXBvbmVudHMpIHtcbiAgY29uc3QgdGFyZ2V0ID0gdGhpcy5BUlJBWV9CVUZGRVJfVEFSR0VULFxuICAgICAgICB0eXBlID0gdGhpcy5GTE9BVF9UWVBFLFxuICAgICAgICBub3JtYWxpemUgPSBmYWxzZSxcbiAgICAgICAgc3RyaWRlID0gMCxcbiAgICAgICAgb2Zmc2V0ID0gMDtcblxuICB0aGlzLmNvbnRleHQuYmluZEJ1ZmZlcih0YXJnZXQsIGJ1ZmZlcik7XG5cbiAgdGhpcy5jb250ZXh0LnZlcnRleEF0dHJpYlBvaW50ZXIoYXR0cmlidXRlTG9jYXRpb24sIGNvbXBvbmVudHMsIHR5cGUsIG5vcm1hbGl6ZSwgc3RyaWRlLCBvZmZzZXQpO1xuICBcbiAgdGhpcy5jb250ZXh0LmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KGF0dHJpYnV0ZUxvY2F0aW9uKTtcbn1cblxuZnVuY3Rpb24gYmluZEVsZW1lbnRCdWZmZXIoZWxlbWVudEJ1ZmZlcikge1xuICBjb25zdCB0YXJnZXQgPSB0aGlzLkVMRU1FTlRfQVJSQVlfQlVGRkVSX1RBUkdFVDtcblxuICB0aGlzLmNvbnRleHQuYmluZEJ1ZmZlcih0YXJnZXQsIGVsZW1lbnRCdWZmZXIpO1xufVxuXG5jb25zdCBidWZmZXJNaXhpbiA9IHtcbiAgY3JlYXRlQnVmZmVyOiBjcmVhdGVCdWZmZXIsXG4gIGNyZWF0ZUVsZW1lbnRCdWZmZXI6IGNyZWF0ZUVsZW1lbnRCdWZmZXIsXG4gIGJpbmRCdWZmZXI6IGJpbmRCdWZmZXIsXG4gIGJpbmRFbGVtZW50QnVmZmVyOiBiaW5kRWxlbWVudEJ1ZmZlclxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBidWZmZXJNaXhpbjtcbiJdfQ==